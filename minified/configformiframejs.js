function LogIt(a) { _thisGlobals.Debug && "undefined" != typeof console && "undefined" != typeof console.debug && console.log(a) } function LogEx(a) { "undefined" != typeof console && "undefined" != typeof console.debug && console.error(a) } function RetreiveEntityList() { _thisGlobals.WaitDialog.show(), XrmServiceToolkit.Soap.RetrieveAllEntitiesMetadata(["Entity"], !0, RetreiveEntityListCallback) } function RetreiveEntityListCallback(a) { if (_thisGlobals.WaitDialog.hide(), 0 == a.length) return void LogEx("Exception: No entites were retreived"); var b = 0, c = null, d = [], e = ""; for (b = 0, j = a.length; b < j; b++) c = a[b], e = DCrmEditableGrid.Helper.GetUserLocalizedLabel(c.DisplayName, c.LogicalName), e.length > 0 && d.push({ SchemaName: c.SchemaName, Name: e }); a.length > 0 && (d.sort(function (a, b) { var c = a.Name, d = b.Name; return c < d ? -1 : c > d ? 1 : 0 }), FillEntitiesSelect(d)) } function FillEntitiesSelect(a) { var b = $("#displayonentity"), c = $("#displayfromentity"); b.empty(), c.empty(), $('<option value="0">--</option>').appendTo(b), $('<option value="0">--</option>').appendTo(c), $.each(a, function (a, d) { $("<option></option>").text(d.Name).val(d.SchemaName.toLowerCase()).appendTo(b), $("<option></option>").text(d.Name).val(d.SchemaName.toLowerCase()).appendTo(c) }); var d = GetHiddenFieldValue(1); d && b.val(d), LoadDCrmEGConfiguration() } function RetreiveLookupEntityMetadata(a) { _thisGlobals.EntityToGetMetadataFor = a, XrmServiceToolkit.Soap.RetrieveEntityMetadata(["Attributes"], a, !1, RetreiveLookupEntityMetadateCallback, RetreiveLookupEntityMetadataErrorCallback) } function RetreiveLookupEntityMetadataErrorCallback(a) { window.parent.Xrm.Utility.alertDialog(a) } function RetreiveLookupEntityMetadateCallback(a) { if (0 == a.length) return void LogEx("RetreiveEntityMetadateCallback called - No metadata were retreived"); var d, e, b = 0, c = null, f = [], g = ["createdonbehalfby", "exchangerate", "importsequencenumber", "modifiedonbehalfby", "overriddencreatedon", "owningbusinessunit", "owningteam", "owninguser", "timezoneruleversionnumber", "utcconversiontimezonecode", "versionnumber"], h = ["lookup", "boolean", "picklist", "datetime", "string", "memo", "integer", "double", "decimal", "money", "customer", "owner", "state", "status"]; g.join(" "), h.join(" "); for (b = 0, j = a[0].Attributes.length; b < j; b++) if (c = a[0].Attributes[b], null == c.AttributeOf && (d = c.AttributeType.toLowerCase(), e = c.SchemaName.toLowerCase(), 0 == g.ExactMatchExists(e) && 1 == h.ExactMatchExists(d))) { var l = DCrmEditableGrid.Helper.GetUserLocalizedLabel(c.DisplayName, c.LogicalName); null != l && "null" != l && 0 != l.length || (l = e.replace(/\b[a-z]/g, function (a) { return a.toUpperCase() })), f.push({ SchemaName: e, Name: l, AttrType: d, ReadOnly: !1, RequieredLevel: (c.RequiredLevel && c.RequiredLevel.Value ? c.RequiredLevel.Value : void 0) || "None", MaxLength: c.MaxLength || "A", Format: c.Format || "A", MaxValue: c.MaxValue || "A", MinValue: c.MinValue || "A", Precision: c.Precision || "A", LookupTargetEntity: c.Targets && c.Targets.length ? c.Targets.join(",").toLowerCase() : "A", CustomAttribute: c.IsCustomAttribute }) } a.length > 0 ? (f.sort(function (a, b) { var c = a.Name, d = b.Name; return c < d ? -1 : c > d ? 1 : 0 }), DisplayLookupEntityFields(f)) : RetreiveLookupEntityMetadataErrorCallback("Unable to retreive metadata for " + _thisGlobals.EntityToGetMetadataFor) } function DisplayLookupEntityFields(a) { _thisGlobals.SelectLookupEntityFieldsCheckboxList && _thisGlobals.SelectLookupEntityFieldsCheckboxList.DestroyYourself(), _thisGlobals.SelectLookupEntityFieldsCheckboxList = DCrmEditableGrid.Helper.CheckboxList(a, LookupEntityFieldsCheckboxListClickHandler, null, $("#listoflookupentityfieldstoselect"), !0), $("#listoflookupentityfieldstitle").text("Select Fields for " + _thisGlobals.EntityToGetMetadataFor.capitalizeFirstLetter()), $("#listoflookupentityfieldsflyout").show("slow"), CreateTooltip() } function RetreiveEntityMetadata(a) { _thisGlobals.WaitDialog.show(), _thisGlobals.EntityToGetMetadataFor = a, XrmServiceToolkit.Soap.RetrieveEntityMetadata(["Attributes"], a, !1, RetreiveEntityMetadateCallback, RetreiveEntityMetadataErrorCallback) } function RetreiveEntityMetadataErrorCallback(a) { _thisGlobals.WaitDialog.hide(), window.parent.Xrm.Utility.alertDialog(a) } function RetreiveEntityMetadateCallback(a) { if (_thisGlobals.WaitDialog.hide(), _thisGlobals._CurConfiguration.HasStatusField = void 0, 0 == a.length) return void LogEx("RetreiveEntityMetadateCallback called - No metadata were retreived"); var d, e, b = 0, c = null; _thisGlobals.AllFieldsMetadata = []; var f = ["createdonbehalfby", "exchangerate", "importsequencenumber", "modifiedonbehalfby", "overriddencreatedon", "owningbusinessunit", "owningteam", "owninguser", "timezoneruleversionnumber", "utcconversiontimezonecode", "versionnumber"], g = ["lookup", "boolean", "picklist", "datetime", "string", "memo", "integer", "double", "decimal", "money", "customer", "owner", "state", "status"]; f.join(" "), g.join(" "); for (b = 0, j = a[0].Attributes.length; b < j; b++) if (c = a[0].Attributes[b], null == c.AttributeOf && (d = c.AttributeType.toLowerCase(), e = c.SchemaName.toLowerCase(), "statecode" == e && (_thisGlobals._CurConfiguration.HasStatusField = e, LogIt("Found state " + _thisGlobals._CurConfiguration.HasStatusField)), 0 == f.ExactMatchExists(e) && 1 == g.ExactMatchExists(d))) { var k = DCrmEditableGrid.Helper.GetUserLocalizedLabel(c.DisplayName, c.LogicalName); null != k && "null" != k && 0 != k.length || (k = e.replace(/\b[a-z]/g, function (a) { return a.toUpperCase() })), _thisGlobals.AllFieldsMetadata.push({ SchemaName: e, Name: k, AttrType: d, ReadOnly: !1, RequieredLevel: (c.RequiredLevel && c.RequiredLevel.Value ? c.RequiredLevel.Value : void 0) || "None", MaxLength: c.MaxLength || "A", Format: c.Format || "A", MaxValue: c.MaxValue || "A", MinValue: c.MinValue || "A", Precision: c.Precision || "A", LookupTargetEntity: c.Targets && c.Targets.length ? c.Targets.join(",").toLowerCase() : "A", CustomAttribute: c.IsCustomAttribute }) } a.length > 0 ? (_thisGlobals.AllFieldsMetadata.sort(function (a, b) { var c = a.Name, d = b.Name; return c < d ? -1 : c > d ? 1 : 0 }), SetupFieldsDisplayOption()) : $("#listoffieldstoselectlabel").text("") } function SetupFieldsDisplayOption() { var a = [], b = _thisGlobals._CurConfiguration.FieldDisplayOption; $("#listoffieldstoselect").empty(), $("#selectedfieldstable").find("tbody:first").empty(); var c = "", d = $("#makesortable").attr("data-item-lastfocus") ? $("#" + $("#makesortable").attr("data-item-lastfocus")).find("span:first") : void 0; if (c = d && d.length ? "Select Fields for " + d.attr("data-item-orglabel") : "", $("#listoffieldstoselectlabel").text(c), 1e8 == b) if (_thisGlobals.WaitDialog.show(), RetreiveSystemFormsForEntity(_thisGlobals.EntityToGetMetadataFor), _thisGlobals.WaitDialog.hide(), 0 == _thisGlobals.CrmFormFieldsSchemas.length) FillEntityMetadata(_thisGlobals.AllFieldsMetadata); else { for (var e = 0; e < _thisGlobals.AllFieldsMetadata.length; e++) $.each(_thisGlobals.CrmFormFieldsSchemas, function (b, c) { if (AllFieldsMetadata[e].SchemaName == c) return void a.push(AllFieldsMetadata[e]) }); FillEntityMetadata(a) } else if (100000001 == b) { for (var e = 0; e < _thisGlobals.AllFieldsMetadata.length; e++) _thisGlobals.AllFieldsMetadata[e].CustomAttribute && a.push(_thisGlobals.AllFieldsMetadata[e]); FillEntityMetadata(a) } else if (100000002 == b) { for (var e = 0; e < _thisGlobals.AllFieldsMetadata.length; e++) _thisGlobals.AllFieldsMetadata[e].CustomAttribute || a.push(_thisGlobals.AllFieldsMetadata[e]); FillEntityMetadata(a) } else 100000003 == b && FillEntityMetadata(_thisGlobals.AllFieldsMetadata) } function FillEntityMetadata(a) { if (_thisGlobals.SelectFieldsCheckboxList && _thisGlobals.SelectFieldsCheckboxList.DestroyYourself(), PopulateSavedFields(), 0 == _thisGlobals.ReloadedFieldConditions.length && _thisGlobals._CurConfiguration.HasStatusField && AddCondition("statecode", "0", "eq", "Active", _thisGlobals.CrmFieldTypes.State, null, _thisGlobals._CurConfiguration.HasStatusField, "State"), _thisGlobals.SelectFieldsCheckboxList = DCrmEditableGrid.Helper.CheckboxList(a, CheckFieldClicked, _thisGlobals.ReloadedSavedFields), DisplaySectionGroup(4, !0), DisplaySectionGroup(5, !0), DisplaySectionGroup(41, !0), DisplaySectionGroup(51, !0), _thisGlobals.ReloadedSavedFields.length > 0) { var b = $("#selectedfieldstable").find("tbody:first"); b.empty(); var c = $("#formattingcolors"), d = c.find("thead:first").find("tr"), e = d.find("th"); $.each(e, function (a, b) { a > 0 && $(b).remove() }); var f = c.find("tbody tr"); $.each(f, function (a, b) { var c = $(b).find("td"); $.each(c, function (a, b) { a > 0 && $(b).remove() }) }); var g = $(f[0]), h = $(f[1]); ResetEvenOddRowColors(g, h), $("#headerformattingcontainer").addClass("displaynone"); var i = _thisGlobals._CurConfiguration.GetFormattingOptions(); $.each(_thisGlobals.ReloadedSavedFields, function (a, c) { SetupSelectedFieldRow(b, c), SetupSelectedFieldFormattingRow(d, g, h, c, i) }), i.OddRows && ($("#oddrowcolorinput").spectrum("set", i.OddRows), g.css("background-color", i.OddRows)), i.EvenRows && ($("#oddrowcolorinput").spectrum("set", i.EvenRows), h.css("background-color", i.EvenRows)) } if (!_thisGlobals.FormIsReadOnly) { var j = $("#selectedfieldstable"); j.sortable({ containerSelector: "table", itemPath: "> tbody", itemSelector: "tr", placeholder: '<tr class="placeholder"/>', onDrop: function (a, b, c) { SaveFields(), c(a, b) }, onMousedown: function (a, b, c) { if (!c.target.nodeName.match(/^(input|select|button|textarea)$/i)) return c.preventDefault(), !0 } }), $("#cellformatconditionlookupbtn").on("click", function (a) { a.stopPropagation(), a.preventDefault(), _thisGlobals._DefaultLookupElemId = "cellformatconditioninput"; for (var b = [], c = $("#cellformattingcontainer").attr("data-item-lookuptargetentity").split(","), d = 0; d < c.length; d++) b[d] = XrmServiceToolkit.Common.GetObjectTypeCode(c[d]); var e = "/_controls/lookup/lookupinfo.aspx?LookupStyle=single&objecttypes=" + b.join(","), f = new window.parent.Xrm.DialogOptions; return f.width = 700, f.height = 700, window.parent.Xrm.Internal.openDialog(window.parent.Mscrm.CrmUri.create(e).toString(), f, null, null, LookupDefaultValueCallbackFunction), !1 }) } _thisGlobals.FormIsReadOnly && ($("#listoffieldstoselect").find("input").attr("disabled", "disabled"), $("#selectedfieldstable").find("tbody:first").find("input").attr("disabled", "disabled"), $("#selectedfieldstable").find("tbody:first").find("button").attr("disabled", "disabled"), $("#selectedfieldstable").find("tbody:first").find("select").attr("disabled", "disabled"), $("#headerbkcolor").spectrum("disable"), $("#headerfkcolor").spectrum("disable"), $("#oddrowcolorinput").spectrum("disable"), $("#evenrowcolorinput").spectrum("disable"), $("#headerformattingcontainer").find("button").attr("disabled", "disabled"), $("#formattingcolors").find("button").attr("disabled", "disabled")), $("#dcrmeg_selectedgridheaders").text("Selected " + _thisGlobals.EntityToGetMetadataFor.capitalizeFirstLetter() + " Fields"), CreateTooltip() } function ResetEvenOddRowColors(a, b) { $("#oddrowcolorinput").spectrum("set", _thisGlobals.DefaultBackgroundColor), $("#evenrowcolorinput").spectrum("set", _thisGlobals.DefaultBackgroundColor), a.css("background-color", _thisGlobals.DefaultBackgroundColor), b.css("background-color", _thisGlobals.DefaultBackgroundColor) } function ResetHeaderFormattingElements() { $("#headerfontcss").val(""), $("#headerbkcolor").spectrum("set", _thisGlobals.DefaultBackgroundColor), $("#headerfkcolor").spectrum("set", _thisGlobals.DefaultTextColor), $("#applyheaderformattoallcells").prop("checked", !1) } function ResetCellFormattingElements() { $("#cellfontcss").val(""), $("#conditionbackgroundcolor").spectrum("set", _thisGlobals.DefaultBackgroundColor), $("#conditionforegroundcolor").spectrum("set", _thisGlobals.DefaultTextColor), $("#cellformatconditioninput").val(""), $("#cellformatdateconditioninput").val("") } function DeccoupleCss(a, b, c) { try { for (var d = a.split(";"), e = 0; e < d.length; e++) if (d[e] && d[e].length && d[e].length > 0) { var f = d[e].split(":"); c ? b.css(f[0], "") : b.css(f[0], f[1]) } } catch (b) { LogEx("DeccoupleCss:css\r\n" + a + "\r\nerror:\r\n" + b.message) } } function LookupDefaultValueCallbackFunction(a) { var b = $("#" + _thisGlobals._DefaultLookupElemId), c = null; if (a && a.items && a.items.length && a.items.length > 0) { var d = a.items[0].name, e = a.items[0].id.replace("{", "").replace("}", ""); c = a.items[0].typename, d ? (b.parent().attr("data-item-default", d + "{}" + e + "{}" + c), b.val(d)) : (b.parent().removeAttr("data-item-default"), b.val("")) } else b.parent().removeAttr("data-item-default"), b.val(""); if ("cellformatconditioninput" != _thisGlobals._DefaultLookupElemId) { var f = b.parent().find(".lookupselect2class"); if (f && f.length && (f.select2("destroy"), f.remove()), c) { new LookupViewHelper(c, b.parent(), b.parent().attr("data-item-viewid")) } SaveFields() } } function SetupSelectedFieldFormattingRow(a, b, c, d, e) { var f = DCrmEditableGrid.Helper.GenerateUUID(), g = $('<th data-schemaname="' + d.SchemaName + '" id="' + f + '"><div style="height: 20px;">' + d.Name + "</div></th>").appendTo(a), h = e.GetHeader(d.SchemaName); h ? (h.BackgroundColor && g.css("background-color", h.BackgroundColor), h.TextColor && g.css("color", h.TextColor), h.FontCss && DeccoupleCss(h.FontCss, g), h.HtmlHeaderId = f) : e.AddHeader(f, d.SchemaName, _thisGlobals.DefaultBackgroundColor, _thisGlobals.DefaultTextColor, null, !1), f = DCrmEditableGrid.Helper.GenerateUUID(); var i = DCrmEditableGrid.Helper.GenerateUUID(), j = $('<td id="' + f + '"><div style="height:20px;">Data</div></td>').appendTo(b), k = $('<td id="' + i + '"><div style="height:20px;">Data</div></td>').appendTo(c); h && h.ApplyToColumn && (j.find("div:first").css("background-color", h.BackgroundColor).css("color", h.TextColor), k.find("div:first").css("background-color", h.BackgroundColor).css("color", h.TextColor)), h = e.GetField(d.SchemaName), h ? (h.BackgroundColor && _thisGlobals.DefaultBackgroundColor != h.BackgroundColor && (j.css("background-color", h.BackgroundColor), k.css("background-color", h.BackgroundColor)), h.TextColor && _thisGlobals.DefaultTextColor != h.TextColor && (j.css("color", h.TextColor), k.css("color", h.TextColor)), h.FontCss && (DeccoupleCss(h.FontCss, j), DeccoupleCss(h.FontCss, k)), h.HtmlCellId = [f, i]) : e.AddField([f, i], d.SchemaName, _thisGlobals.DefaultBackgroundColor, _thisGlobals.DefaultTextColor, null, null) } function SetupSelectedFieldRow(a, b) { var c = DCrmEditableGrid.Helper.GenerateUUID(); row = $("<tr></tr>").attr("id", c).attr("data-item-realindex", b.RealIndex).attr("data-item-realwidth", b.RealWidth).attr("data-item-label", b.Name).attr("data-item-schema", b.SchemaName).attr("data-item-attrtype", b.AttrType).attr("data-item-readonly", b.ReadOnly).attr("data-item-requiered", b.RequieredLevel).attr("data-item-maxlength", b.MaxLength).attr("data-item-format", b.Format).attr("data-item-maxvalue", b.MaxValue).attr("data-item-minvalue", b.MinValue).attr("data-item-precision", b.Precision).attr("data-item-lookuptargetentity", b.LookupTargetEntity).appendTo(a), $('<td><span class="sortable-drag-handle">&#9776;</span></td>').appendTo(row); var d = $("<td>" + b.Name + "</td>").appendTo(row); $("<td>" + b.SchemaName + "</td>").appendTo(row), $("<td>" + b.AttrType + "</td>").appendTo(row), $("<td>" + b.RequieredLevel + "</td>").appendTo(row), d = $("<td></td>").appendTo(row); var e = $('<input type="checkbox" />').attr("data-tilename-id", c).appendTo(d).click(function (a) { var b = $(this); $("#" + b.attr("data-tilename-id")).attr("data-item-readonly", "" + b.prop("checked")), SaveFields() }).appendTo(d); "true" == b.ReadOnly && e.prop("checked", !0); var f = void 0; d = $("<td></td>").appendTo(row), f = new NumericTextbox(c, _thisGlobals.Translation_Labels.widthAutoCalculate, _thisGlobals.ToolTipClassSelector, b.RealWidth, 20, d, SaveFields, !0); var g = b.DefaultValue; if (d = $("<td></td>").appendTo(row), b.AttrType == _thisGlobals.CrmFieldTypes.TextType || b.AttrType == _thisGlobals.CrmFieldTypes.MemoType) g && d.attr("data-item-default", g), f = $('<input style="width:130px;" type="text" />').attr("data-tilename-id", c).val(g ? g : "").on("blur", function (a) { a.stopPropagation(); var b = $(this).val(); b && b.length > 0 ? $(this).parent().attr("data-item-default", b) : $(this).parent().removeAttr("data-item-default"), SaveFields() }).appendTo(d); else if (b.AttrType == _thisGlobals.CrmFieldTypes.BooleanType) { var h = XrmServiceToolkit.Soap.RetrieveAttributeMetadata(_thisGlobals._CurConfiguration.Entity.SchemaName, b.SchemaName, !0), i = []; h.length > 0 && (i.push({ Label: DCrmEditableGrid.Helper.GetUserLocalizedLabel(h[0].OptionSet.FalseOption.Label), value: h[0].OptionSet.FalseOption.Value + "" }), i.push({ Label: DCrmEditableGrid.Helper.GetUserLocalizedLabel(h[0].OptionSet.TrueOption.Label), value: h[0].OptionSet.TrueOption.Value + "" })), g ? d.attr("data-item-default", g) : (g = i[0].Label + "{}" + i[0].value, d.attr("data-item-default", g)), f = new SelectBooleanCheck(c, 140, d, i, g, SaveFields) } else if (b.AttrType == _thisGlobals.CrmFieldTypes.DecimalType || b.AttrType == _thisGlobals.CrmFieldTypes.DoubleType || b.AttrType == _thisGlobals.CrmFieldTypes.MoneyType || b.AttrType == _thisGlobals.CrmFieldTypes.IntegerType) g && d.attr("data-item-default", g), f = new NumericTextbox(c, null, null, g ? g : "", 130, d, SaveFields, !1); else if (b.AttrType == _thisGlobals.CrmFieldTypes.LookupType || b.AttrType == _thisGlobals.CrmFieldTypes.CustomerType || b.AttrType == _thisGlobals.CrmFieldTypes.OwnerType) { b.DefaultView && d.attr("data-item-viewid", b.DefaultView).attr("data-item-viewentityobjecttypecode", b.DefaultViewObjectTypeCode); var j = DCrmEditableGrid.Helper.GenerateUUID(); if (f = $('<input style="width:100px;" type="text" />').attr("data-tilename-id", c).attr("id", j).on("blur", function (a) { a.stopPropagation(); var b = $(this), c = b.val(); c && "undefined" !== c && 0 != c.length || (b.parent().removeAttr("data-item-default"), g && b.attr("data-item-originalval", g), SaveFields()) }).appendTo(d), g && (d.attr("data-item-default", g), f.val(g.split("{}")[0]), f.attr("data-item-originalval", g)), f = $('<button class="picklistselectbtn" style="margin-left:5px;">...</button>').attr("data-item-parentinputid", j).attr("data-tilename-id", c).on("click", function (a) { a.stopPropagation(), _thisGlobals._DefaultLookupElemId = $(this).attr("data-item-parentinputid"); for (var c = $(this).parent().attr("data-item-viewid"), d = $(this).parent().attr("data-item-viewentityobjecttypecode"), e = [], f = b.LookupTargetEntity.split(","), g = 0; g < f.length; g++) e[g] = XrmServiceToolkit.Common.GetObjectTypeCode(f[g]); var h = "/_controls/lookup/lookupinfo.aspx?LookupStyle=single" + (c ? "&DefaultViewId=" + c + "&DefaultType=" + d : "") + "&objecttypes=" + e.join(","), i = new window.parent.Xrm.DialogOptions; i.width = 700, i.height = 700, window.parent.Xrm.Internal.openDialog(window.parent.Mscrm.CrmUri.create(h).toString(), i, null, null, LookupDefaultValueCallbackFunction) }).appendTo(d), g) { var k = g.split("{}")[2]; k && k.length > 0 && _thisGlobals.LookupViewHelperArray.push(new LookupViewHelper(k, d, b.DefaultView)) } else _thisGlobals.LookupViewHelperArray.push(new LookupViewHelper(b.LookupTargetEntity, d, b.DefaultView)) } else if (b.AttrType == _thisGlobals.CrmFieldTypes.DateTimeType) { var j = DCrmEditableGrid.Helper.GenerateUUID(); f = $('<input style="width:130px;" type="text" />').val(g || "").attr("data-tilename-id", c).attr("data-item-haschanged", "N").attr("id", j).appendTo(d), g && (d.attr("data-item-default", g), f.attr("data-item-originalval", g)), $("#" + j).datetimepicker({ timepicker: !1, format: _thisGlobals.userDatetimeSettings.DateFormat.replace(/[\/\/]/g, _thisGlobals.userDatetimeSettings.DateSeparator), formatDate: _thisGlobals.userDatetimeSettings.DateFormat.replace(/[\/\/]/g, _thisGlobals.userDatetimeSettings.DateSeparator), formatTime: _thisGlobals.userDatetimeSettings.TimeFormat.replace(":", _thisGlobals.userDatetimeSettings.TimeSeparator), onShow: function (a, b) { b.val() && b.val().length > 0 ? b.attr("data-item-openervalue", b.val()) : b.removeAttr("data-item-openervalue") }, onChangeDateTime: function (a, b) { var c = b.attr("data-item-openervalue") || "N"; b.val() != c ? b.attr("data-item-haschanged", "Y") : b.attr("data-item-haschanged", "N") }, onClose: function (a, b) { var c = b.attr("data-item-openervalue") || "N"; "Y" == b.attr("data-item-haschanged") && b.val() != c ? (b.parent().attr("data-item-default", b.val()), SaveFields()) : 0 == b.val().length && b.attr("data-item-openervalue") && (b.parent().removeAttr("data-item-default"), SaveFields()) } }) } else if (b.AttrType == _thisGlobals.CrmFieldTypes.OptionSetType) { var h = XrmServiceToolkit.Soap.RetrieveAttributeMetadata(_thisGlobals._CurConfiguration.Entity.SchemaName, b.SchemaName, !0), i = []; if (h.length > 0) for (var l = 0; l < h[0].OptionSet.Options.length; l++) i.push({ Label: DCrmEditableGrid.Helper.GetUserLocalizedLabel(h[0].OptionSet.Options[l].Label), value: h[0].OptionSet.Options[l].Value }); g && d.attr("data-item-default", g), f = new OptionSetSelect(c, 140, d, i, g, SaveFields) } d = $("<td></td>").appendTo(row), $('<div><button data-schemaname="' + b.SchemaName + '" data-item-label="' + b.Name + '" class="headerformattingbtn selectedfieldsformattingbtns">Header</button></div>').appendTo(d), d.find(".headerformattingbtn").on("click", function (a) { a.stopPropagation(), a.preventDefault(), $("#cellformattingcontainer").addClass("displaynone"), ResetHeaderFormattingElements(); var b = $(this).attr("data-item-label"), c = $("#headerformattingcontainer"); c.find(".headerformattinglabel").text(b); var d = $(this).attr("data-schemaname"); $(this).parent().parent().attr("id"); c.attr("data-schemaname", d); var f = _thisGlobals._CurConfiguration.GetFormattingOptions().GetHeader(d); return f && (f.BackgroundColor && $("#headerbkcolor").spectrum("set", f.BackgroundColor), f.TextColor && $("#headerfkcolor").spectrum("set", f.TextColor), f.FontCss && ($("#headerfontcss").val(f.FontCss), DeccoupleCss(f.FontCss, $("#" + f.HtmlHeaderId))), f.ApplyToColumn && $("#applyheaderformattoallcells").prop("checked", f.ApplyToColumn), c.attr("data-htmlheaderid", f.HtmlHeaderId)), c.removeClass("displaynone"), !1 }), d = $("<td></td>").appendTo(row), $('<div><button class="cellformattingbtn selectedfieldsformattingbtns" data-schemaname="' + b.SchemaName + '" data-item-attrtype="' + b.AttrType + '" data-item-label="' + b.Name + '" data-item-lookuptargetentity="' + b.LookupTargetEntity + '">Cell</button></div>').appendTo(d), d.find(".cellformattingbtn").on("click", function (a) { a.stopPropagation(), a.preventDefault(); var b = $(this); $("#headerformattingcontainer").addClass("displaynone"), ResetCellFormattingElements(); var c = $("#cellformattingcontainer"); c.find(".cellformattinglabel").text(b.attr("data-item-label")); var d = b.attr("data-item-attrtype"), e = b.attr("data-schemaname"), f = _thisGlobals._CurConfiguration.GetFormattingOptions().GetField(e); c.attr("data-schemaname", e).attr("data-item-attrtype", d).attr("data-item-lookuptargetentity", b.attr("data-item-lookuptargetentity")), $("#cellformatdateconditioninput").addClass("displaynone"), $("#cellformatconditioninput").addClass("displaynone"); var g = null; switch (d) { case _thisGlobals.CrmFieldTypes.TextType: case _thisGlobals.CrmFieldTypes.MemoType: case _thisGlobals.CrmFieldTypes.IntegerType: case _thisGlobals.CrmFieldTypes.DoubleType: case _thisGlobals.CrmFieldTypes.DecimalType: case _thisGlobals.CrmFieldTypes.MoneyType: $("#cellformatgeneralcondition").val("eq").removeClass("displaynone"), $("#cellformatoptionsetcondition").addClass("displaynone"), $("#cellformatdatetimeconditions").addClass("displaynone"), $("#cellformatconditioninput").removeClass("displaynone"), $("#cellformatconditionlookupbtn").addClass("displaynone"), $("#cellformatlookupcondition").addClass("displaynone"), g = { Select1: "cellformatgeneralcondition", Input1: "cellformatconditioninput" }; break; case _thisGlobals.CrmFieldTypes.LookupType: case _thisGlobals.CrmFieldTypes.OwnerType: case _thisGlobals.CrmFieldTypes.CustomerType: $("#cellformatgeneralcondition").addClass("displaynone"), $("#cellformatoptionsetcondition").addClass("displaynone"), $("#cellformatdatetimeconditions").addClass("displaynone"), $("#cellformatlookupcondition").val("eq").removeClass("displaynone"), $("#cellformatconditioninput").removeClass("displaynone"), $("#cellformatconditionlookupbtn").removeClass("displaynone"), g = { Select1: "cellformatlookupcondition", Input1: "cellformatconditioninput" }; break; case _thisGlobals.CrmFieldTypes.DateTimeType: $("#cellformatgeneralcondition").addClass("displaynone"), $("#cellformatoptionsetcondition").addClass("displaynone"), $("#cellformatconditionlookupbtn").addClass("displaynone"), $("#cellformatlookupcondition").addClass("displaynone"), $("#cellformatdatetimeconditions").val("on").removeClass("displaynone"), $("#cellformatdateconditioninput").removeClass("displaynone"), g = { Select1: "cellformatdatetimeconditions", Input1: "cellformatdateconditioninput" }; break; case _thisGlobals.CrmFieldTypes.BooleanType: case _thisGlobals.CrmFieldTypes.OptionSetType: case _thisGlobals.CrmFieldTypes.State: case _thisGlobals.CrmFieldTypes.Status: $("#cellformatgeneralcondition").val("eq").removeClass("displaynone"), $("#cellformatoptionsetcondition").removeClass("displaynone"), $("#cellformatdatetimeconditions").addClass("displaynone"), $("#cellformatconditionlookupbtn").addClass("displaynone"), $("#cellformatlookupcondition").addClass("displaynone"); var h = $("#cellformatoptionsetcondition"); h.empty(), h.append('<option value="-1">---</option>'); var i = XrmServiceToolkit.Soap.RetrieveAttributeMetadata(_thisGlobals._CurConfiguration.Entity.SchemaName, e, !0); if (i.length > 0) if (d == _thisGlobals.CrmFieldTypes.BooleanType) h.append('<option value="' + i[0].OptionSet.TrueOption.Value + '">' + DCrmEditableGrid.Helper.GetUserLocalizedLabel(i[0].OptionSet.TrueOption.Label) + "</option>"), h.append('<option value="' + i[0].OptionSet.FalseOption.Value + '">' + DCrmEditableGrid.Helper.GetUserLocalizedLabel(i[0].OptionSet.FalseOption.Label) + "</option>"); else for (var j = 0; j < i[0].OptionSet.Options.length; j++) h.append('<option value="' + i[0].OptionSet.Options[j].Value + '">' + DCrmEditableGrid.Helper.GetUserLocalizedLabel(i[0].OptionSet.Options[j].Label) + "</option>"); g = { Select1: "cellformatgeneralcondition", Select2: "cellformatoptionsetcondition" }; break; default: LogEx("Exception: No field type retrieved: " + fieldtype) } return f && (f.BackgroundColor && $("#conditionbackgroundcolor").spectrum("set", f.BackgroundColor), f.TextColor && $("#conditionforegroundcolor").spectrum("set", f.TextColor), f.FontCss && $("#cellfontcss").val(f.FontCss), f.Condition && g && (f.Condition.Operator && $("#" + g.Select1).val(f.Condition.Operator), f.Condition.Value && (g.Input1 ? $("#" + g.Input1).val(f.Condition.Value) : g.Select2 && $("#" + g.Select2).val(f.Condition.Value)), f.Condition.Guid), c.attr("data-cellid", f.HtmlCellId[0]).attr("data-cellbelowid", f.HtmlCellId[1])), c.removeClass("displaynone"), !1 }), d = $('<td><button class="entitylistbuttons"></button></td>').appendTo(row), d.find(".entitylistbuttons").on("click", function (a) { a.stopPropagation(); var b = $(this).parent().parent(), c = $(".flyout-ContentContainer").find("input[type='checkbox'][data-item-schema=" + b.attr("data-item-schema") + "]"); c && c.length && c.trigger("click") }) } function SetupColorPicker(a, b) { a.spectrum({ flat: !1, showInput: !0, allowEmpty: !0, preferredFormat: "hex", clickoutFiresChange: !1 }), b && a.spectrum("set", b), a.on("change.spectrum", function (a, b) { var c = $(this), d = c.attr("id"); if (b) { var e = b.toHexString(); if ("oddrowcolorinput" == d || "evenrowcolorinput" == d) { var f = _thisGlobals._CurConfiguration.GetFormattingOptions(); "oddrowcolorinput" == d && (f.OddRows = e), "evenrowcolorinput" == d && (f.EvenRows = e), c.parent().parent().parent().css("background-color", e), SetParentFormDirty() } } else { if ("oddrowcolorinput" == d || "evenrowcolorinput" == d) { var f = _thisGlobals._CurConfiguration.GetFormattingOptions(); "oddrowcolorinput" == d && (f.OddRows = null, $("#oddrowcolorinput").spectrum("set", _thisGlobals.DefaultBackgroundColor)), "evenrowcolorinput" == d && (f.EvenRows = null, $("#evenrowcolorinput").spectrum("set", _thisGlobals.DefaultBackgroundColor)), c.parent().parent().parent().css("background-color", "") } else "headerbkcolor" == d || "conditionbackgroundcolor" == d ? c.spectrum("set", _thisGlobals.DefaultBackgroundColor) : "headerfkcolor" != d && "conditionforegroundcolor" != d || c.spectrum("set", _thisGlobals.DefaultTextColor); SetParentFormDirty() } }) } function CreateTooltip() { _thisGlobals.TooltipControl ? _thisGlobals.TooltipControl.UnHookTooltips() : _thisGlobals.TooltipControl = new BareboneTip("data-tooltip", _thisGlobals.ToolTipClassSelector), _thisGlobals.TooltipControl.HookTooltips() } function DisplaySectionGroup(a, b) { var c = $("#maincontentsect" + a); c && c.length ? b ? c.removeClass("displaynone") : c.addClass("displaynone") : LogEx("Unable to get main content section") } function ParentFormSaving(a) { var b = !1; return void 0 == GetHiddenFieldValue(1) && (window.parent.Xrm.Utility.alertDialog(_thisGlobals.Translation_Labels.TragetEntityReq), b = !0), 1 == _thisGlobals.ParentFieldsFormType && setTimeout(function () { $("#configguid").val(_thisGlobals.xrmPage.data.entity.getId()) }, 1500), b } function SetParentTitle() { var a = "", b = GetHiddenFieldText(1); b && b.length > 0 && (a += b); var c = $("#makesortable").find("li"); if (c && c.length) for (var d = 0; d < c.length; d++) a += "-" + $(c[d]).find("span:first").attr("data-item-orglabel"); var e = _thisGlobals.xrmPage.data.entity.attributes.get(_thisGlobals.EntityNameField).getValue(); return (!e || e != a) && (_thisGlobals.xrmPage.data.entity.attributes.get(_thisGlobals.EntityNameField).setValue(a), !0) } function PopulateSavedFields() { if (_thisGlobals.ReloadedSavedFields = [], _thisGlobals._CurConfiguration.Fields) { var a = _thisGlobals._CurConfiguration.Fields.split(_thisGlobals._OuterSeperator); $.each(a, function (a, b) { var c = b.split(_thisGlobals._SEPERATOR); 1 != c.length && _thisGlobals.ReloadedSavedFields.push({ Name: c[0], SchemaName: c[1], AttrType: c[2], RequieredLevel: c[3], MaxLength: c[4], Format: c[5], MaxValue: c[6], MinValue: c[7], Precision: c[8], RealWidth: c[9], ReadOnly: c[10], LookupTargetEntity: c[11], DefaultValue: c.length >= 13 && c[12].length > 0 ? c[12] : null, DefaultView: c.length >= 14 && c[13].length > 0 ? c[13] : null, DefaultViewObjectTypeCode: 15 == c.length && c[14].length > 0 ? c[14] : null, RealIndex: "" }) }) } if (_thisGlobals.ReloadedFieldConditions = [], _thisGlobals._CurConfiguration.Conditions) { var a = _thisGlobals._CurConfiguration.Conditions.split(_thisGlobals._OuterSeperator); $.each(a, function (a, b) { var c = b.split(_thisGlobals._SEPERATOR); 1 != c.length && AddCondition(c[0], c[1], c[2], c[3], c[4], c[5], c[6], c[7]) }), DisplayConditions() } } function CheckFieldClicked(a) { SelectFieldsCallback(a), CreateTooltip() } function SaveFields(a) { if (a) return _thisGlobals.ReloadedFieldConditions = [], void (_thisGlobals._CurConfiguration.Conditions = void 0); var c, b = "", d = $("#selectedfieldstable").find("tbody:first").find("tr"); b = ""; for (var e = void 0, f = "", g = null, h = null, i = 0; i < d.length; i++) c = $(d[i]), e = $(d[i].cells[7]), f = c.attr("data-item-attrtype"), g = null, e.attr("data-item-default") ? g = e.attr("data-item-default") : f == _thisGlobals.CrmFieldTypes.DateTimeType && (g = e.find("input").val() || ""), void 0 != g && "undefined" != g && null != g && "null" != g || (g = ""), h = null, viewentityname = "", h = e.attr("data-item-viewid"), void 0 == h || "undefined" == h ? h = "" : viewentityname = e.attr("data-item-viewentityobjecttypecode"), i > 0 ? b += _thisGlobals._OuterSeperator + c.attr("data-item-label") + _thisGlobals._SEPERATOR + c.attr("data-item-schema") + _thisGlobals._SEPERATOR + c.attr("data-item-attrtype") + _thisGlobals._SEPERATOR + c.attr("data-item-requiered") + _thisGlobals._SEPERATOR + c.attr("data-item-maxlength") + _thisGlobals._SEPERATOR + c.attr("data-item-format") + _thisGlobals._SEPERATOR + c.attr("data-item-maxvalue") + _thisGlobals._SEPERATOR + c.attr("data-item-minvalue") + _thisGlobals._SEPERATOR + c.attr("data-item-precision") + _thisGlobals._SEPERATOR + c.attr("data-item-realwidth") + _thisGlobals._SEPERATOR + c.attr("data-item-readonly") + _thisGlobals._SEPERATOR + c.attr("data-item-lookuptargetentity") + _thisGlobals._SEPERATOR + g + _thisGlobals._SEPERATOR + h + _thisGlobals._SEPERATOR + viewentityname : b = c.attr("data-item-label") + _thisGlobals._SEPERATOR + c.attr("data-item-schema") + _thisGlobals._SEPERATOR + c.attr("data-item-attrtype") + _thisGlobals._SEPERATOR + c.attr("data-item-requiered") + _thisGlobals._SEPERATOR + c.attr("data-item-maxlength") + _thisGlobals._SEPERATOR + c.attr("data-item-format") + _thisGlobals._SEPERATOR + c.attr("data-item-maxvalue") + _thisGlobals._SEPERATOR + c.attr("data-item-minvalue") + _thisGlobals._SEPERATOR + c.attr("data-item-precision") + _thisGlobals._SEPERATOR + c.attr("data-item-realwidth") + _thisGlobals._SEPERATOR + c.attr("data-item-readonly") + _thisGlobals._SEPERATOR + c.attr("data-item-lookuptargetentity") + _thisGlobals._SEPERATOR + g + _thisGlobals._SEPERATOR + h + _thisGlobals._SEPERATOR + viewentityname; _thisGlobals._CurConfiguration.Fields = b, SetParentFormDirty() } function SelectFieldsCallback(a) {
    var b = $("#selectedfieldstable").find("tbody:first"); if (a.is(":checked")) {
        var c = {
            Name: a.attr("data-item-label"), SchemaName: a.attr("data-item-schema"), AttrType: a.attr("data-item-attrtype"), RequieredLevel: a.attr("data-item-requiered"), MaxLength: a.attr("data-item-maxlength"), Format: a.attr("data-item-format"), MaxValue: a.attr("data-item-maxvalue"), MinValue: a.attr("data-item-minvalue"), Precision: a.attr("data-item-precision"), RealIndex: a.attr("data-item-realindex"),
            RealWidth: a.attr("data-item-realwidth"), ReadOnly: a.attr("data-item-readonly"), LookupTargetEntity: a.attr("data-item-lookuptargetentity")
        }; SetupSelectedFieldRow(b, c); var d = $("#formattingcolors"), e = d.find("tbody tr"), f = $(e[0]), g = $(e[1]), h = _thisGlobals._CurConfiguration.GetFormattingOptions(); SetupSelectedFieldFormattingRow(d.find("thead tr"), f, g, c, h)
    } else { var i = $("#selectedfieldstable").find("tbody:first").find("tr[data-item-realindex=" + a.attr("data-item-realindex") + "]"); i && i.length && i.empty().remove(); var d = $("#formattingcolors"), j = a.attr("data-item-schema"), k = _thisGlobals._CurConfiguration.GetFormattingOptions(); k.RemoveHeader(j), k.RemoveField(j); var l = d.find("thead tr").find("th[data-schemaname=" + j + "]"), m = l[0].cellIndex; l.remove(); for (var n = d.find("tbody tr"), o = 0; o < n.length; o++) $(n[o].cells[m]).remove(); $("#cellformattingcontainer").hasClass("displaynone") || $("#cellformattingcontainer").attr("data-schemaname") != j || $("#cellformattingcontainer").addClass("displaynone"), $("#headerformattingcontainer").hasClass("displaynone") || $("#headerformattingcontainer").attr("data-schemaname") != j || $("#headerformattingcontainer").addClass("displaynone") } SaveFields()
} function GetHiddenFieldValue(a) { var b = void 0; if (1 == a ? b = _thisGlobals.DisplayOnEntityFieldName : 2 == a ? b = _thisGlobals.DisplayFromEntityFieldName : 3 == a ? b = _thisGlobals.FromEntityFieldsAttr : 6 == a && (b = _thisGlobals.FieldConditionValues), !b) return b; var c = _thisGlobals.xrmPage.data.entity.attributes.get(b).getValue(); return c ? 3 == a ? RetrieveEntityOutput(c, !0) : 4 == a ? c : 6 == a ? RetrieveEntityOutput(c, !0) : c.split("|")[0] : void 0 } function GetHiddenFieldText(a) { var b = void 0; if (1 == a ? b = _thisGlobals.DisplayOnEntityFieldName : 2 == a && (b = _thisGlobals.DisplayFromEntityFieldName), !b) return b; var c = _thisGlobals.xrmPage.data.entity.attributes.get(b).getValue(); return c ? c.split("|")[1] : void 0 } function RemoveCondition(a) { for (var b = -1, c = 0; c < _thisGlobals.ReloadedFieldConditions.length; c++) if (_thisGlobals.ReloadedFieldConditions[c].ConditionAttribute == a) { b = c; break } return b != -1 && (_thisGlobals.ReloadedFieldConditions.splice(b, 1), 0 == _thisGlobals.ReloadedFieldConditions.length && DisplaySectionGroup(7, !1), !0) } function DeleteAllConditions() { _thisGlobals.ReloadedFieldConditions = [], SaveConditions(), _thisGlobals._CurConfiguration.HasStatusField && AddCondition("statecode", "0", "eq", "Active", _thisGlobals.CrmFieldTypes.State, null, _thisGlobals._CurConfiguration.HasStatusField, "State"), SetParentFormDirty(), DisplaySectionGroup(7, !1) } function AddCondition(a, b, c, d, e, f, g, h) { LogIt("Loading attr " + a + " val " + b + " op " + c + " cl " + d + " fdt " + e + " llnames " + f + " orgattr " + g + " fname " + h); for (var i = 0; i < _thisGlobals.ReloadedFieldConditions.length; i++) if (_thisGlobals.ReloadedFieldConditions[i].ConditionAttribute == a) return void (_thisGlobals.ReloadedFieldConditions[i] = { ConditionAttribute: a, ConditionValue: b, ConditonOperator: c, ConditionLabel: d, CrmFieldType: e, LookupLogicalNames: f && "undefined" != f ? f : "", ConditionAttributeOrg: g, CrmFieldLabel: h }); var j = { ConditionAttribute: a, ConditionValue: b, ConditonOperator: c, ConditionLabel: d, CrmFieldType: e, LookupLogicalNames: f && "undefined" != f ? f : "", ConditionAttributeOrg: g, CrmFieldLabel: h }; return _thisGlobals.ReloadedFieldConditions.push(j), ("statecode" != a || _thisGlobals.ReloadedFieldConditions.length > 1) && DisplaySectionGroup(7, !0), j } function AddACondition(a) { DisplaySectionGroup(7, !0); for (var b = 0; b < _thisGlobals.ReloadedFieldConditions.length; b++) if (_thisGlobals.ReloadedFieldConditions[b].ConditionAttribute == a.ConditionAttribute) return void (_thisGlobals.ReloadedFieldConditions[b] = a); _thisGlobals.ReloadedFieldConditions.push(a) } function FindCondition(a) { for (var b = void 0, c = 0; c < _thisGlobals.ReloadedFieldConditions.length; c++) if (_thisGlobals.ReloadedFieldConditions[c].ConditionAttributeOrg == a) { b = jQuery.extend(!0, {}, _thisGlobals.ReloadedFieldConditions[c]); break } return b } function SaveConditions() { if (0 == _thisGlobals.ReloadedFieldConditions.length) return $("#conditionsfetchdisplay").html(""), void (_thisGlobals._CurConfiguration.Conditions = void 0); for (var a = "", b = "", c = 0; c < _thisGlobals.ReloadedFieldConditions.length; c++) b = _thisGlobals.ReloadedFieldConditions[c].ConditonOperator, c > 0 ? a += _thisGlobals._OuterSeperator + _thisGlobals.ReloadedFieldConditions[c].ConditionAttribute + _thisGlobals._SEPERATOR + (_thisGlobals.ReloadedFieldConditions[c].ConditionValue ? _thisGlobals.ReloadedFieldConditions[c].ConditionValue : "") + _thisGlobals._SEPERATOR + (_thisGlobals.ReloadedFieldConditions[c].OperatorFetchOp ? b + ";" + _thisGlobals.ReloadedFieldConditions[c].OperatorFetchOp : b) + _thisGlobals._SEPERATOR + (_thisGlobals.ReloadedFieldConditions[c].ConditionLabel ? _thisGlobals.ReloadedFieldConditions[c].ConditionLabel : "") + _thisGlobals._SEPERATOR + _thisGlobals.ReloadedFieldConditions[c].CrmFieldType + _thisGlobals._SEPERATOR + (_thisGlobals.ReloadedFieldConditions[c].LookupLogicalNames ? _thisGlobals.ReloadedFieldConditions[c].LookupLogicalNames : "") + _thisGlobals._SEPERATOR + (_thisGlobals.ReloadedFieldConditions[c].ConditionAttributeOrg ? _thisGlobals.ReloadedFieldConditions[c].ConditionAttributeOrg : "") + _thisGlobals._SEPERATOR + (_thisGlobals.ReloadedFieldConditions[c].CrmFieldLabel ? _thisGlobals.ReloadedFieldConditions[c].CrmFieldLabel : "") : a = _thisGlobals.ReloadedFieldConditions[c].ConditionAttribute + _thisGlobals._SEPERATOR + (_thisGlobals.ReloadedFieldConditions[c].ConditionValue ? _thisGlobals.ReloadedFieldConditions[c].ConditionValue : "") + _thisGlobals._SEPERATOR + (_thisGlobals.ReloadedFieldConditions[c].OperatorFetchOp ? b + ";" + _thisGlobals.ReloadedFieldConditions[c].OperatorFetchOp : b) + _thisGlobals._SEPERATOR + (_thisGlobals.ReloadedFieldConditions[c].ConditionLabel ? _thisGlobals.ReloadedFieldConditions[c].ConditionLabel : "") + _thisGlobals._SEPERATOR + _thisGlobals.ReloadedFieldConditions[c].CrmFieldType + _thisGlobals._SEPERATOR + (_thisGlobals.ReloadedFieldConditions[c].LookupLogicalNames ? _thisGlobals.ReloadedFieldConditions[c].LookupLogicalNames : "") + _thisGlobals._SEPERATOR + (_thisGlobals.ReloadedFieldConditions[c].ConditionAttributeOrg ? _thisGlobals.ReloadedFieldConditions[c].ConditionAttributeOrg : "") + _thisGlobals._SEPERATOR + (_thisGlobals.ReloadedFieldConditions[c].CrmFieldLabel ? _thisGlobals.ReloadedFieldConditions[c].CrmFieldLabel : ""); _thisGlobals._CurConfiguration.Conditions = a, DisplayConditions(), SetParentFormDirty() } function DisplayConditions() { var a = void 0, b = void 0, c = void 0, d = void 0, e = ""; try { for (var f = 0; f < _thisGlobals.ReloadedFieldConditions.length; f++) { var g = _thisGlobals.ReloadedFieldConditions[f]; a = g.ConditionAttribute, c = g.ConditionValue && "undefined" != g.ConditionValue ? g.ConditionValue : "", b = g.ConditonOperator, d = g.CrmFieldType; var h = "", i = ""; if (_thisGlobals.AllFieldsMetadata && _thisGlobals.AllFieldsMetadata.length > 0) for (var k = 0; k < _thisGlobals.AllFieldsMetadata.length; k++) if (_thisGlobals.AllFieldsMetadata[k].SchemaName == g.ConditionAttributeOrg) { h = '<span style="font-weight:bold;">' + _thisGlobals.AllFieldsMetadata[k].Name + "</span><br />"; break } if (d == _thisGlobals.CrmFieldTypes.DateTimeType && (c = c.split(_thisGlobals.userDatetimeSettings.DateSeparator).join("-")), c.contains(";")) { var l = c.split(";"); if (b.contains(";")) { var m = b.split(";")[1]; i += h + '&lt;condition attribute="' + a + '" operator="' + ("eq" == m ? "in" : "not-in") + '"&gt;<br />' } else i += h + '&lt;condition attribute="' + a + '" operator="' + ("eq" == b ? "in" : "not-in") + '"&gt;<br />'; for (var n = g.LookupLogicalNames && g.LookupLogicalNames.length > 0 ? g.LookupLogicalNames.split(";") : [], o = g.ConditionLabel && g.ConditionLabel.length > 0 ? g.ConditionLabel.split(";") : [], k = 0; k < l.length; k++) i += d == _thisGlobals.CrmFieldTypes.LookupType || d == _thisGlobals.CrmFieldTypes.CustomerType || d == _thisGlobals.CrmFieldTypes.OwnerType ? '&nbsp;&nbsp;&nbsp;&lt;value uiname="' + o[k] + '" uitype="' + n[k] + '"&gt;{' + l[k] + "}&lt;/value&gt;<br />" : "&nbsp;&nbsp;&nbsp;&lt;value&gt;" + l[k] + "&lt;/value&gt;<br />"; i += "&lt;/condition&gt;" } else i += 0 == c.length ? h + '&lt;condition attribute="' + a + '" operator="' + b + '" /&gt;<br />' : b.contains(";") ? h + '&lt;condition attribute="' + a + '" operator="' + b.split(";")[1] + '" value="' + c + '" /&gt;<br />' : h + '&lt;condition attribute="' + a + '" operator="' + b + '" value="' + c + '" /&gt;<br />'; i.length > 0 && (e += '<div class="displayconditionitem" data-item-schema="' + a + '" data-item-org-schema="' + g.ConditionAttributeOrg + '">' + i + "</div>") } } catch (a) { return LogEx("Exception: unable to get field conditions. " + a.message), void $("#conditionsfetchdisplay").html("") } $("#conditionsfetchdisplay").html(e), $("#conditionsfetchdisplay").find(".displayconditionitem").off("click").on("click", function (a) { if (_thisGlobals.FormIsReadOnly) return a.stopPropagation(), !1; var b = $(this), c = $(".flyout-ContentContainer").find("input[type='checkbox'][data-item-schema=" + b.attr("data-item-org-schema") + "]"); c && c.length && (c[0].scrollIntoView(), c.next().next().trigger("click"), a.stopPropagation()) }) } function GetFieldConditionSelectOptionLabelByValue(a, b) { var c = void 0; switch (a) { case _thisGlobals.CrmFieldTypes.TextType: case _thisGlobals.CrmFieldTypes.MemoType: c = _thisGlobals.FieldIds.stringconditions; break; case _thisGlobals.CrmFieldTypes.DateTimeType: c = _thisGlobals.FieldIds.datetimeconditions; break; case _thisGlobals.CrmFieldTypes.LookupType: c = _thisGlobals.FieldIds.lookupconditions; break; case _thisGlobals.CrmFieldTypes.OwnerType: c = _thisGlobals.FieldIds.systemuserlookup; break; case _thisGlobals.CrmFieldTypes.CustomerType: c = _thisGlobals.FieldIds.customerlookup; break; case _thisGlobals.CrmFieldTypes.BooleanType: case _thisGlobals.CrmFieldTypes.OptionSetType: case _thisGlobals.CrmFieldTypes.State: case _thisGlobals.CrmFieldTypes.Status: c = _thisGlobals.FieldIds.optionsetconditions; break; case _thisGlobals.CrmFieldTypes.IntegerType: case _thisGlobals.CrmFieldTypes.DoubleType: case _thisGlobals.CrmFieldTypes.DecimalType: case _thisGlobals.CrmFieldTypes.MoneyType: c = _thisGlobals.FieldIds.numericconditions } if (c) for (var d = $(c).find("option"), e = b.contains(";") ? b.split(";")[0] : b, f = 0; f < d.length; f++) { var g = $(d[f]); if (g.val() == e) return g.text() } return b } function FieldConditionSelectId(a) { var b = void 0; switch (a) { case _thisGlobals.CrmFieldTypes.TextType: case _thisGlobals.CrmFieldTypes.MemoType: b = { id: _thisGlobals.FieldIds.stringconditions, label: "#stringconditionslabel", SelectedOptionValue: "eq", ShowInput: !0 }; break; case _thisGlobals.CrmFieldTypes.DateTimeType: b = { id: _thisGlobals.FieldIds.datetimeconditions, label: "#datetimeconditionslabel", SelectedOptionValue: "on", ShowDate: !0 }; break; case _thisGlobals.CrmFieldTypes.LookupType: b = { id: _thisGlobals.FieldIds.lookupconditions, label: "#lookupconditionslabel", SelectedOptionValue: "eq", ShowInput: !0, ShowLookupBtn: !0 }; break; case _thisGlobals.CrmFieldTypes.OwnerType: b = { id: _thisGlobals.FieldIds.systemuserlookup, label: "#systemuserctllabel", SelectedOptionValue: "eq-userid" }; break; case _thisGlobals.CrmFieldTypes.CustomerType: b = { id: _thisGlobals.FieldIds.customerlookup, label: "#customerlookuplabel", SelectedOptionValue: "eq", ShowInput: !0, ShowLookupBtn: !0 }; break; case _thisGlobals.CrmFieldTypes.BooleanType: case _thisGlobals.CrmFieldTypes.OptionSetType: case _thisGlobals.CrmFieldTypes.State: case _thisGlobals.CrmFieldTypes.Status: b = { id: _thisGlobals.FieldIds.optionsetconditions, label: "#optionsetconditionslabel", SelectedOptionValue: "eq", ShowInput: !0, ShowSelectBtn: !0 }; break; case _thisGlobals.CrmFieldTypes.IntegerType: case _thisGlobals.CrmFieldTypes.DoubleType: case _thisGlobals.CrmFieldTypes.DecimalType: case _thisGlobals.CrmFieldTypes.MoneyType: b = { id: _thisGlobals.FieldIds.numericconditions, label: "#numericconditionslabel", SelectedOptionValue: "eq", ShowInput: !0 }; break; default: LogEx("Exception: No field type retrieved: " + a) } return b } function ConditionSelectOnChange(a) { $(a).off("change").on("change", function (a) { var b = $(this), c = b.find("option:selected"), d = b.attr("id"); _thisGlobals.CurFieldCondition.ConditonOperator = c.val(), _thisGlobals.CurFieldCondition.OperatorFetchOp = c.attr("data-fetchop"), _thisGlobals.CurFieldCondition.OperatorFetchVal = c.attr("data-fetchval"), _thisGlobals.CurFieldCondition.ConditionAttributeLookup = void 0, _thisGlobals.CurFieldCondition.ConditionAttributeOptionset = void 0, "stringconditions" == d || "numericconditions" == d ? _thisGlobals.CurFieldCondition.OperatorFetchOp ? $(_thisGlobals.FieldIds.fieldconditioninput).val("").show().focus() : $(_thisGlobals.FieldIds.fieldconditioninput).val("").hide() : "optionsetconditions" == d ? (_thisGlobals.CurFieldCondition.ConditionAttributeOptionset = _thisGlobals.CurFieldCondition.ConditionAttributeOrg, _thisGlobals.CurFieldCondition.OperatorFetchOp ? ("eq" == _thisGlobals.CurFieldCondition.OperatorFetchOp || "ne" == _thisGlobals.CurFieldCondition.OperatorFetchOp ? ($(_thisGlobals.FieldIds.picklistselect).show(), $(_thisGlobals.FieldIds.fieldconditioninput).val("").attr("readonly", "readonly")) : ($(_thisGlobals.FieldIds.picklistselect).hide(), _thisGlobals.CurFieldCondition.ConditionAttributeOptionset += "name", $(_thisGlobals.FieldIds.fieldconditioninput).val("").removeAttr("readonly")), $(_thisGlobals.FieldIds.fieldconditioninput).show().focus()) : ($(_thisGlobals.FieldIds.fieldconditioninput).val("").hide(), $(_thisGlobals.FieldIds.picklistselect).hide())) : "datetimeconditions" == d ? _thisGlobals.CurFieldCondition.OperatorFetchOp ? "olderthan-x-months" == _thisGlobals.CurFieldCondition.OperatorFetchOp ? ($(_thisGlobals.FieldIds.dateconditioninput).val("").hide(), $(_thisGlobals.FieldIds.fieldconditioninput).val("").removeAttr("readonly").show().focus()) : ($(_thisGlobals.FieldIds.dateconditioninput).val("").show().datetimepicker("show"), $(_thisGlobals.FieldIds.fieldconditioninput).val("").hide()) : _thisGlobals.CurFieldCondition.ConditonOperator.startsWith("last-x") || _thisGlobals.CurFieldCondition.ConditonOperator.startsWith("next-x") ? ($(_thisGlobals.FieldIds.dateconditioninput).val("").hide(), $(_thisGlobals.FieldIds.fieldconditioninput).val("").removeAttr("readonly").show().focus()) : ($(_thisGlobals.FieldIds.fieldconditioninput).val("").hide(), $(_thisGlobals.FieldIds.dateconditioninput).val("").hide()) : "lookupconditions" != d && "systemuserlookup" != d && "customerlookup" != d || (_thisGlobals.CurFieldCondition.ConditionAttributeLookup = _thisGlobals.CurFieldCondition.ConditionAttributeOrg, _thisGlobals.CurFieldCondition.OperatorFetchOp ? ("eq" == _thisGlobals.CurFieldCondition.OperatorFetchOp || "ne" == _thisGlobals.CurFieldCondition.OperatorFetchOp ? ($(_thisGlobals.FieldIds.lookupsearchbtn).show(), $(_thisGlobals.FieldIds.fieldconditioninput).val("").attr("readonly", "readonly")) : ($(_thisGlobals.FieldIds.lookupsearchbtn).hide(), _thisGlobals.CurFieldCondition.ConditionAttributeLookup += "name", $(_thisGlobals.FieldIds.fieldconditioninput).val("").removeAttr("readonly")), $(_thisGlobals.FieldIds.fieldconditioninput).show().focus()) : ($(_thisGlobals.FieldIds.lookupsearchbtn).hide(), $(_thisGlobals.FieldIds.fieldconditioninput).val("").hide())), a.stopPropagation() }) } function moveItems(a, b) { $(a).find(":selected").appendTo(b) } function moveAllItems(a, b) { $(a).children().appendTo(b) } function RetreiveSystemFormsForEntity(a) { var b = ""; b += '      <request i:type="b:RetrieveFilteredFormsRequest" xmlns:a="http://schemas.microsoft.com/xrm/2011/Contracts" xmlns:b="http://schemas.microsoft.com/crm/2011/Contracts">', b += '        <a:Parameters xmlns:c="http://schemas.datacontract.org/2004/07/System.Collections.Generic">', b += "          <a:KeyValuePairOfstringanyType>", b += "            <c:key>EntityLogicalName</c:key>", b += '            <c:value i:type="d:string" xmlns:d="http://www.w3.org/2001/XMLSchema">' + a.toLowerCase() + "</c:value>", b += "          </a:KeyValuePairOfstringanyType>", b += "          <a:KeyValuePairOfstringanyType>", b += "            <c:key>FormType</c:key>", b += '            <c:value i:type="a:OptionSetValue">', b += "              <a:Value>2</a:Value>", b += "            </c:value>", b += "          </a:KeyValuePairOfstringanyType>", b += "          <a:KeyValuePairOfstringanyType>", b += "            <c:key>SystemUserId</c:key>", b += '            <c:value i:type="d:guid" xmlns:d="http://schemas.microsoft.com/2003/10/Serialization/">' + _thisGlobals.LoggedInUserID + "</c:value>", b += "          </a:KeyValuePairOfstringanyType>", b += "        </a:Parameters>", b += '        <a:RequestId i:nil="true" />', b += "        <a:RequestName>RetrieveFilteredForms</a:RequestName>", b += "      </request>", _thisGlobals.CrmFormFieldsSchemas = []; var c = XrmServiceToolkit.Soap.Execute(b); c && RetreiveSystemFormsForEntityCallback(c) } function RetreiveSystemFormsForEntityCallback(a) { var b = void 0; if (a.childNodes && a.childNodes.length && (b = a.childNodes[0].textContent), void 0 == b && (b = a.text), b && b.length > 0) { b = b.replace("RetrieveFilteredFormsSystemForms", ""); var e, c = b.split("systemform"), a = XrmServiceToolkit.Soap.Retrieve("systemform", c[0], ["formxml"]), d = !1; if (a) { var f = a.attributes.formxml.value, g = $.parseXML(f), h = $(g), i = h.find("cell"); i.each(function () { if ($ctl = $(this).find("control"), 0 != $ctl.length && (_thisGlobals.MandatoryFieldsOptionsId = $ctl.attr("id"), void 0 != _thisGlobals.MandatoryFieldsOptionsId && "undefined" != _thisGlobals.MandatoryFieldsOptionsId && null != _thisGlobals.MandatoryFieldsOptionsId && _thisGlobals.MandatoryFieldsOptionsId.length > 0 && !_thisGlobals.MandatoryFieldsOptionsId.startsWith("header_"))) { e = _thisGlobals.MandatoryFieldsOptionsId.toLowerCase(), d = !1; for (var a = 0; a < _thisGlobals.CrmFormFieldsSchemas.length; a++) if (_thisGlobals.CrmFormFieldsSchemas[a] == e) { d = !0; break } d || _thisGlobals.CrmFormFieldsSchemas.push(e) } }) } } } function RetreiveFormNameFromFormId(a) { var b = "    <a:ColumnSet>     <a:AllColumns>false</a:AllColumns>     <a:Columns xmlns:b='http://schemas.microsoft.com/2003/10/Serialization/Arrays'>      <b:string>name</b:string>     </a:Columns>    </a:ColumnSet>    <a:Criteria>     <a:Conditions>      <a:ConditionExpression>       <a:AttributeName>formid</a:AttributeName>       <a:Operator>Equal</a:Operator>       <a:Values xmlns:b='http://schemas.microsoft.com/2003/10/Serialization/Arrays'>        <b:anyType i:type='c:string' xmlns:c='http://www.w3.org/2001/XMLSchema'>" + a + "</b:anyType>       </a:Values>      </a:ConditionExpression>     </a:Conditions>     <a:FilterOperator>And</a:FilterOperator>     <a:Filters />    </a:Criteria>    <a:Distinct>false</a:Distinct>    <a:EntityName>systemform</a:EntityName>    <a:LinkEntities />    <a:Orders />    <a:PageInfo>     <a:Count>0</a:Count>     <a:PageNumber>0</a:PageNumber>     <a:PagingCookie i:nil='true' />     <a:ReturnTotalRecordCount>true</a:ReturnTotalRecordCount>    </a:PageInfo>    <a:NoLock>false</a:NoLock>", c = XrmServiceToolkit.Soap.RetrieveMultiple(b); return c.length > 0 ? c[0].attributes.name.value : "" } function RetreiveFormXml(a) { XrmServiceToolkit.Soap.Retrieve("systemform", a, ["formxml"], RetreiveFormXmlCallback) } function RetreiveFormXmlCallback(a) { _thisGlobals.CrmFormFieldsSchemas = []; var b = a.attributes.formxml.value, c = $.parseXML(b), d = $(c), e = d.find("cell"); new Array; e.each(function () { $ctl = $(this).find("control"), 0 != $ctl.length && (_thisGlobals.MandatoryFieldsOptionsId = $ctl.attr("id"), void 0 != _thisGlobals.MandatoryFieldsOptionsId && null != _thisGlobals.MandatoryFieldsOptionsId && _thisGlobals.MandatoryFieldsOptionsId.length > 0 && !_thisGlobals.MandatoryFieldsOptionsId.startsWith("header_") && ($labels = $(this).find("labels"), $label = $labels.find("label"), $label.each(function () { var a = $(this).attr("description"); if (void 0 != a && null != a && a.length > 0) return void _thisGlobals.CrmFormFieldsSchemas.push(_thisGlobals.MandatoryFieldsOptionsId.toLowerCase()) }))) }) } function GetTranslationsFor(a) { var b = '<fetch version="1.0" output-format="xml-platform" mapping="logical" distinct="false"><entity name="dcrmeg_dcrmegtranslation"><attribute name="dcrmeg_dcrmegtranslationid" /><attribute name="dcrmeg_name" /><attribute name="dcrmeg_lcid" /><attribute name="dcrmeg_widthisautocalculated" /><attribute name="dcrmeg_width" /><attribute name="dcrmeg_systemfields" /><attribute name="dcrmeg_selectedgridheaders" /><attribute name="dcrmeg_selectfields" /><attribute name="dcrmeg_relatedentitylookup" /><attribute name="dcrmeg_readonly" /><attribute name="dcrmeg_maxrecordsperpage" /><attribute name="dcrmeg_fieldsontheform" /><attribute name="dcrmeg_displaysumfornumericvalues" /><attribute name="dcrmeg_displayonlyrelatedrecords" /><attribute name="dcrmeg_displaygridonentity" /><attribute name="dcrmeg_displaydatafromentity" /><attribute name="dcrmeg_customfields" /><attribute name="dcrmeg_allfields" /><attribute name="dcrmeg_targetentityisrequiered" /><attribute name="dcrmeg_entitytodisplaythegridonisrequiered" /><attribute name="dcrmeg_atleasetonefieldmustbeselected" /><attribute name="dcrmeg_fieldcondition" /><attribute name="dcrmeg_fieldvalue" /><attribute name="dcrmeg_setcondition" /><attribute name="dcrmeg_configcancel" /><attribute name="dcrmeg_removecondition" /><order attribute="dcrmeg_name" descending="false" /><filter type="and"><condition attribute="dcrmeg_lcid" operator="eq" value="' + a + '" /></filter></entity></fetch>'; return XrmServiceToolkit.Soap.Fetch(b) } function GetUserSettings(a) { for (var b = "", c = 1; c < arguments.length; c++) b += '<attribute name="' + arguments[c] + '" />'; var d = ['<fetch mapping="logical">', '<entity name="usersettings">', b, "<filter>", '<condition attribute="systemuserid" operator="eq" value="', a, '" />', "</filter>", "</entity>", "</fetch>"].join(""), e = XrmServiceToolkit.Soap.Fetch(d); return e.length > 0 ? e[0] : null } function GetCurrentUserDateTimeSettings() { var a = GetUserSettings(_thisGlobals.LoggedInUserID, "dateformatstring", "dateseparator", "timeformatstring", "timeseparator"); return { DateSeparator: a.attributes.dateseparator.value, DateFormat: a.attributes.dateformatstring.value, TimeFormat: a.attributes.timeformatstring.value, TimeSeparator: a.attributes.timeseparator.value, DateTimeFormat: a.attributes.dateformatstring.value + " " + a.attributes.timeformatstring.value } } function CallbackFunction(a) { var b = !0; if (a && a.items && a.items[0].id && a.items[0].name) { _thisGlobals.CurFieldCondition.LookupData = []; for (var d = 0; d < a.items.length; d++) _thisGlobals.CurFieldCondition.LookupData[d] = {}, _thisGlobals.CurFieldCondition.LookupData[d].LookupName = a.items[d].name, _thisGlobals.CurFieldCondition.LookupData[d].LookupId = a.items[d].id.replace("{", "").replace("}", ""), _thisGlobals.CurFieldCondition.LookupData[d].LookupLogicalName = a.items[d].typename, b ? (b = !1, _thisGlobals.CurFieldCondition.ConditionLabel = _thisGlobals.CurFieldCondition.LookupData[d].LookupName, _thisGlobals.CurFieldCondition.ConditionValue = _thisGlobals.CurFieldCondition.LookupData[d].LookupId, _thisGlobals.CurFieldCondition.LookupLogicalNames = _thisGlobals.CurFieldCondition.LookupData[d].LookupLogicalName) : (_thisGlobals.CurFieldCondition.ConditionLabel += ";" + _thisGlobals.CurFieldCondition.LookupData[d].LookupName, _thisGlobals.CurFieldCondition.ConditionValue += ";" + _thisGlobals.CurFieldCondition.LookupData[d].LookupId, _thisGlobals.CurFieldCondition.LookupLogicalNames += ";" + _thisGlobals.CurFieldCondition.LookupData[d].LookupLogicalName); _thisGlobals.CurFieldCondition.ConditionLabel ? $("#fieldconditioninput").val(_thisGlobals.CurFieldCondition.ConditionLabel) : $("#fieldconditioninput").val("") } } function InitializeSetupRoutines() {
    window.frameElement && $(window.frameElement).css("width", "100%"), _thisGlobals.xrmPage = window.parent.Xrm.Page, _thisGlobals.ParentFieldsFormType = _thisGlobals.xrmPage.ui.getFormType(), _thisGlobals.FormIsReadOnly = 3 == _thisGlobals.ParentFieldsFormType || 4 == _thisGlobals.ParentFieldsFormType, _thisGlobals.WaitDialog = $("#dcrmegProcessingDialog"), 1 != _thisGlobals.ParentFieldsFormType && $("#configguid").val(_thisGlobals.xrmPage.data.entity.getId()), _thisGlobals.ToolTipClassSelector = DCrmEditableGrid.Helper.GenerateRandomLetters(10), _thisGlobals.userDatetimeSettings = GetCurrentUserDateTimeSettings(), _thisGlobals.Translation_Labels.widthAutoCalculate = "0, width is auto calculated", _thisGlobals.Translation_Labels.width = "Width", _thisGlobals.Translation_Labels.readonly = "Read-only", _thisGlobals.Translation_Labels.TragetEntityReq = "Target entity is requiered.", _thisGlobals.Translation_Labels.EntityToDisplayReq = "Entity to display the grid on is requiered.", _thisGlobals.Translation_Labels.FieldReq = "At leaset one field must be selected for", _thisGlobals.Translation_Labels.FieldConditionBtn = "Filter", _thisGlobals.Translation_Labels.ConditionMissingError = "Please enter a value for the condition", _thisGlobals.Translation_Labels.Aggregate = "Aggrgate"; var a = _thisGlobals.xrmPage.context.getUserLcid(), b = GetTranslationsFor(a); if (b.length > 0) { var c = $("#displayentityfieldsoptions"); c.empty(), $('<option value="100000000"></option>').text(b[0].attributes.dcrmeg_fieldsontheform ? b[0].attributes.dcrmeg_fieldsontheform.value : "").appendTo(c), $('<option value="100000001"></option>').text(b[0].attributes.dcrmeg_customfields ? b[0].attributes.dcrmeg_customfields.value : "").appendTo(c), $('<option value="100000002"></option>').text(b[0].attributes.dcrmeg_systemfields ? b[0].attributes.dcrmeg_systemfields.value : "").appendTo(c), $('<option selected="selected" value="100000003"></option>').text(b[0].attributes.dcrmeg_allfields ? b[0].attributes.dcrmeg_allfields.value : "").appendTo(c), $("#dcrmeg_selectedgridheaders").text(b[0].attributes.dcrmeg_selectedgridheaders ? b[0].attributes.dcrmeg_selectedgridheaders.value : ""), _thisGlobals.Translation_Labels.widthAutoCalculate = b[0].attributes.dcrmeg_widthisautocalculated ? b[0].attributes.dcrmeg_widthisautocalculated.value : "", _thisGlobals.Translation_Labels.width = b[0].attributes.dcrmeg_width ? b[0].attributes.dcrmeg_width.value : "", _thisGlobals.Translation_Labels.readonly = b[0].attributes.dcrmeg_readonly ? b[0].attributes.dcrmeg_readonly.value : "", $("#dcrmeg_relatedentitylookup").text(b[0].attributes.dcrmeg_relatedentitylookup ? b[0].attributes.dcrmeg_relatedentitylookup.value : ""), $("#dcrmeg_maxrecordsperpage").text(b[0].attributes.dcrmeg_maxrecordsperpage ? b[0].attributes.dcrmeg_maxrecordsperpage.value : ""), $("#dcrmeg_displaysumfornumericvalues").text(b[0].attributes.dcrmeg_displaysumfornumericvalues ? b[0].attributes.dcrmeg_displaysumfornumericvalues.value : ""), $("#dcrmeg_displayonlyrelatedrecords").text(b[0].attributes.dcrmeg_displayonlyrelatedrecords ? b[0].attributes.dcrmeg_displayonlyrelatedrecords.value : ""), $("#dcrmeg_displaygridonentity").text(b[0].attributes.dcrmeg_displaygridonentity ? b[0].attributes.dcrmeg_displaygridonentity.value : ""), $("#dcrmeg_displaydatafromentity").text(b[0].attributes.dcrmeg_displaydatafromentity ? b[0].attributes.dcrmeg_displaydatafromentity.value : ""), $("#dcrmeg_targetentityisrequiered").text(b[0].attributes.dcrmeg_targetentityisrequiered ? b[0].attributes.dcrmeg_targetentityisrequiered.value : ""), $("#dcrmeg_entitytodisplaythegridonisrequiered").text(b[0].attributes.dcrmeg_entitytodisplaythegridonisrequiered ? b[0].attributes.dcrmeg_entitytodisplaythegridonisrequiered.value : ""), $("#dcrmeg_atleasetonefieldmustbeselected").text(b[0].attributes.dcrmeg_atleasetonefieldmustbeselected ? b[0].attributes.dcrmeg_atleasetonefieldmustbeselected.value : ""), _thisGlobals.Translation_Labels.FieldConditionBtn = b[0].attributes.dcrmeg_fieldcondition ? b[0].attributes.dcrmeg_fieldcondition.value : "", _thisGlobals.Translation_Labels.ConditionMissingError = b[0].attributes.dcrmeg_pleaseenteravalueforthecondition ? b[0].attributes.dcrmeg_pleaseenteravalueforthecondition.value : "", $("#fieldconditionslabel").text(b[0].attributes.dcrmeg_fieldvalue ? b[0].attributes.dcrmeg_fieldvalue.value : ""), $("#deleteallfieldconditionsbtn").text(b[0].attributes.dcrmeg_deleteallfieldconditions ? b[0].attributes.dcrmeg_deleteallfieldconditions.value : ""), $("#setfieldcondition").text(b[0].attributes.dcrmeg_setcondition ? b[0].attributes.dcrmeg_setcondition.value : ""), $("#cancelfieldcondition").text(b[0].attributes.dcrmeg_configcancel ? b[0].attributes.dcrmeg_configcancel.value : ""), $("#removefieldcondition").text(b[0].attributes.dcrmeg_removecondition ? b[0].attributes.dcrmeg_removecondition.value : "") } if ($("#dcrmeg_displaygridonentity").addClass(_thisGlobals.ToolTipClassSelector).attr(_thisGlobals.ToolTipAttrName, $("#dcrmeg_displaygridonentity").text()), $("#dcrmeg_displaydatafromentity").addClass(_thisGlobals.ToolTipClassSelector).attr(_thisGlobals.ToolTipAttrName, $("#dcrmeg_displaydatafromentity").text()), $("#dcrmeg_displaydatafromentity_copy").addClass(_thisGlobals.ToolTipClassSelector).attr(_thisGlobals.ToolTipAttrName, $("#dcrmeg_displaydatafromentity_copy").text()), $("#dcrmeg_displaysumfornumericvalues").addClass(_thisGlobals.ToolTipClassSelector).attr(_thisGlobals.ToolTipAttrName, $("#dcrmeg_displaysumfornumericvalues").text()), $("#dcrmeg_maxrecordsperpage").addClass(_thisGlobals.ToolTipClassSelector).attr(_thisGlobals.ToolTipAttrName, $("#dcrmeg_maxrecordsperpage").text()), $("#dcrmeg_displayonlyrelatedrecords").addClass(_thisGlobals.ToolTipClassSelector).attr(_thisGlobals.ToolTipAttrName, $("#dcrmeg_displayonlyrelatedrecords").text()), $("#dcrmeg_relatedentitylookup").addClass(_thisGlobals.ToolTipClassSelector).attr(_thisGlobals.ToolTipAttrName, $("#dcrmeg_relatedentitylookup").text()), $("#deleteallfieldconditionsbtn").addClass(_thisGlobals.ToolTipClassSelector).attr(_thisGlobals.ToolTipAttrName, $("#deleteallfieldconditionsbtn").text()), $("#autosavechanges_label").addClass(_thisGlobals.ToolTipClassSelector).attr(_thisGlobals.ToolTipAttrName, $("#autosavechanges_label").text()), $("#hideautosave_label").addClass(_thisGlobals.ToolTipClassSelector).attr(_thisGlobals.ToolTipAttrName, $("#hideautosave_label").text()), $("#allowcreate_label").addClass(_thisGlobals.ToolTipClassSelector).attr(_thisGlobals.ToolTipAttrName, $("#allowcreate_label").text()), $("#allowdelete_label").addClass(_thisGlobals.ToolTipClassSelector).attr(_thisGlobals.ToolTipAttrName, $("#allowdelete_label").text()), $("#refreshaftercreate_label").addClass(_thisGlobals.ToolTipClassSelector).attr(_thisGlobals.ToolTipAttrName, $("#refreshaftercreate_label").text()), $("#refreshaftersave_label").addClass(_thisGlobals.ToolTipClassSelector).attr(_thisGlobals.ToolTipAttrName, $("#refreshaftersave_label").text()), $("#createnewbtnclick_label").addClass(_thisGlobals.ToolTipClassSelector).attr(_thisGlobals.ToolTipAttrName, $("#createnewbtnclick_label").text()), $("#booleaneditorbehaviour_label").addClass(_thisGlobals.ToolTipClassSelector).attr(_thisGlobals.ToolTipAttrName, $("#booleaneditorbehaviour_label").text()), $("#gridtitlelabel").addClass(_thisGlobals.ToolTipClassSelector).attr(_thisGlobals.ToolTipAttrName, $("#gridtitlelabel").text()), $("#pastefromexcellabel").addClass(_thisGlobals.ToolTipClassSelector).attr(_thisGlobals.ToolTipAttrName, $("#pastefromexcellabel").text()), $("#displayclearfilterbuttonlabel").addClass(_thisGlobals.ToolTipClassSelector).attr(_thisGlobals.ToolTipAttrName, $("#displayclearfilterbuttonlabel").text()), $("#displayheaderfilterlabel").addClass(_thisGlobals.ToolTipClassSelector).attr(_thisGlobals.ToolTipAttrName, $("#displayheaderfilterlabel").text()), $("#displayexportbuttonlabel").addClass(_thisGlobals.ToolTipClassSelector).attr(_thisGlobals.ToolTipAttrName, $("#displayexportbuttonlabel").text()), $("#displaysetrecordstatelabel").addClass(_thisGlobals.ToolTipClassSelector).attr(_thisGlobals.ToolTipAttrName, $("#displaysetrecordstatelabel").text()), $("#displayclonerecordlabel").addClass(_thisGlobals.ToolTipClassSelector).attr(_thisGlobals.ToolTipAttrName, $("#displayclonerecordlabel").text()), $("#displayclonerecordbuttonlabel").addClass(_thisGlobals.ToolTipClassSelector).attr(_thisGlobals.ToolTipAttrName, $("#displayclonerecordbuttonlabel").text()), $("#openrecordbehavoirlabel").addClass(_thisGlobals.ToolTipClassSelector).attr(_thisGlobals.ToolTipAttrName, $("#openrecordbehavoirlabel").text()), "undefined" != window.parent.OnFormSaveFunctionCallback && void 0 != window.parent.OnFormSaveFunctionCallback && "function" == typeof window.parent.OnFormSaveFunctionCallback && window.parent.OnFormSaveFunctionCallback(ParentFormSaving), $("#displayonentity").on("change", function (a) { var b = $(this).val(), c = $(this).find("option:selected").text(); void 0 != b && null != b && "0" != b && (_thisGlobals.xrmPage.data.entity.attributes.get(_thisGlobals.DisplayOnEntityFieldName).setValue(b + "|" + c), ResetEntityGrid(), SetParentTitle(), SetParentFormDirty()) }), $("#entitiesAreRelated").on("click", function (a) { var b = $(this).prop("checked"); _thisGlobals._CurConfiguration.Entity.RelatedToDisplayOnEntity = b, SetParentFormDirty() }), $("#relatedEntityLookupSelect").on("change", function (a) {
    var b = $(this).val(); _thisGlobals._CurConfiguration.Entity.RelatedToDisplayOnLookupSchemaName = b, $("#relatedEntityLookup").val(b), SetParentFormDirty()
    }), $("#displaySum").on("click", function (a) { _thisGlobals._CurConfiguration.DisplaySum = $(this).prop("checked"), SetParentFormDirty() }), $("#gridtitle").on("blur", function (a) { _thisGlobals._CurConfiguration.GridTitle = $(this).val(), SetParentFormDirty() }), $("#displayclearfilterbutton").on("click", function (a) { _thisGlobals._CurConfiguration.DisplayClearFilterButton = $(this).prop("checked"), SetParentFormDirty() }), $("#displayheaderfilter").on("click", function (a) { _thisGlobals._CurConfiguration.DisplayHeaderFilter = $(this).prop("checked"), SetParentFormDirty() }), $("#displayexportbutton").on("click", function (a) { _thisGlobals._CurConfiguration.DisplayExportButton = $(this).prop("checked"), SetParentFormDirty() }), $("#displaysetrecordstate").on("click", function (a) { _thisGlobals._CurConfiguration.DisplaySetRecordState = $(this).prop("checked"), SetParentFormDirty() }), $("#displayclonerecord").on("click", function (a) { _thisGlobals._CurConfiguration.DisplayCloneRecord = $(this).prop("checked"), SetParentFormDirty() }), $("#displayclonerecordbutton").on("click", function (a) { _thisGlobals._CurConfiguration.DisplayCloneRecordButton = $(this).prop("checked"), SetParentFormDirty() }), $("#openrecordbehavoir").on("change", function (a) { var b = $(this).val(); _thisGlobals._CurConfiguration.OpenRecordBehavoir = b, SetParentFormDirty() }), $("#autosavechanges_check").on("click", function (a) { _thisGlobals._CurConfiguration.AutoSaveChanges = $(this).prop("checked"), SetParentFormDirty() }), $("#hideautosave_check").on("click", function (a) { _thisGlobals._CurConfiguration.HideAutosaveButton = $(this).prop("checked"), SetParentFormDirty() }), $("#allowcreate_check").on("click", function (a) { _thisGlobals._CurConfiguration.AllowCreateNew = $(this).prop("checked"), SetParentFormDirty() }), $("#allowdelete_check").on("click", function (a) { _thisGlobals._CurConfiguration.AllowDelete = $(this).prop("checked"), SetParentFormDirty() }), $("#refreshaftercreate_check").on("click", function (a) { _thisGlobals._CurConfiguration.RefreshAfterCreate = $(this).prop("checked"), SetParentFormDirty() }), $("#refreshaftersave_check").on("click", function (a) { _thisGlobals._CurConfiguration.RefreshAfterSave = $(this).prop("checked"), SetParentFormDirty() }), $("#pastefromexcel_check").on("click", function (a) { _thisGlobals._CurConfiguration.PasteFromExcel = $(this).prop("checked"), SetParentFormDirty() }), $("#displayentityfieldsoptions").on("change", function (a) { var b = $(this).val(); _thisGlobals._CurConfiguration.FieldDisplayOption = parseInt(b), SetupFieldsDisplayOption(), SetParentFormDirty() }), $("#maxrecordperpage").on("change", function (a) { var b = $(this).val(); _thisGlobals._CurConfiguration.RecordsPerPage = b, SetParentFormDirty() }), $("#createnewbtnclick").on("change", function (a) { var b = $(this).val(); _thisGlobals._CurConfiguration.NewBtnBehavoir = b, SetParentFormDirty() }), $("#booleaneditorbehaviour").on("change", function (a) { var b = $(this).val(); _thisGlobals._CurConfiguration.BooleanEditorBehavoir = b, SetParentFormDirty() }), $("#cancelsetpicklistcondition").on("click", function (a) { $("#picklistconditionflyout").hide("slow") }), $("#picklistselect").on("click", function (a) { var b = _thisGlobals._CurConfiguration.Entity.SchemaName, c = XrmServiceToolkit.Soap.RetrieveAttributeMetadata(b, _thisGlobals.CurFieldCondition.ConditionAttributeOrg, !0), d = []; if (c.length > 0) if (_thisGlobals.CurFieldCondition.CrmFieldType == _thisGlobals.CrmFieldTypes.BooleanType) d.push({ Label: DCrmEditableGrid.Helper.GetUserLocalizedLabel(c[0].OptionSet.TrueOption.Label), value: c[0].OptionSet.TrueOption.Value }), d.push({ Label: DCrmEditableGrid.Helper.GetUserLocalizedLabel(c[0].OptionSet.FalseOption.Label), value: c[0].OptionSet.FalseOption.Value }); else for (var e = 0; e < c[0].OptionSet.Options.length; e++) d.push({ Label: DCrmEditableGrid.Helper.GetUserLocalizedLabel(c[0].OptionSet.Options[e].Label), value: c[0].OptionSet.Options[e].Value }); if (_thisGlobals.PickListCheckboxListCtl && _thisGlobals.PickListCheckboxListCtl.empty(), _thisGlobals.PickListCheckboxListCtl = DCrmEditableGrid.Helper.PicklistCheckboxList(d), _thisGlobals.CurFieldCondition.PicklistData && _thisGlobals.CurFieldCondition.PicklistData.length > 0) for (var f = _thisGlobals.PickListCheckboxListCtl.find("input"), e = 0; e < f.length; e++) for (var g = 0; g < _thisGlobals.CurFieldCondition.PicklistData.length; g++) $(f[e]).attr("data-item-value") == _thisGlobals.CurFieldCondition.PicklistData[g].Value && $(f[e]).prop("checked", !0); $("#picklistconditionflyout").show("slow") }), $("#setpicklistcondition").on("click", function (a) { var c = 0, d = _thisGlobals.PickListCheckboxListCtl.find("input"); if (d && d.length) { _thisGlobals.CurFieldCondition.PicklistData = []; for (var e = 0; e < d.length; e++) $(d[e]).is(":checked") && (_thisGlobals.CurFieldCondition.PicklistData.push({ Label: $(d[e]).attr("data-item-label"), Value: $(d[e]).attr("data-item-value") }), c = _thisGlobals.CurFieldCondition.PicklistData.length - 1, c > 0 ? (_thisGlobals.CurFieldCondition.ConditionLabel += ";" + _thisGlobals.CurFieldCondition.PicklistData[c].Label, _thisGlobals.CurFieldCondition.ConditionValue += ";" + _thisGlobals.CurFieldCondition.PicklistData[c].Value, c++) : (_thisGlobals.CurFieldCondition.ConditionLabel = _thisGlobals.CurFieldCondition.PicklistData[c].Label, _thisGlobals.CurFieldCondition.ConditionValue = _thisGlobals.CurFieldCondition.PicklistData[c].Value)); _thisGlobals.CurFieldCondition.ConditionLabel ? $("#fieldconditioninput").val(_thisGlobals.CurFieldCondition.ConditionLabel) : $("#fieldconditioninput").val("") } $("#picklistconditionflyout").hide("slow") }), $("#lookupsearchbtn").on("click", function (a) { for (var b = [], c = [], d = [], e = 0; e < _thisGlobals.CurFieldCondition.LookupEntities.length; e++) { b[e] = XrmServiceToolkit.Common.GetObjectTypeCode(_thisGlobals.CurFieldCondition.LookupEntities[e]), c[e] = "", d[e] = _thisGlobals.CurFieldCondition.LookupEntities[e] + "id"; var f = XrmServiceToolkit.Soap.RetrieveEntityMetadata(["Attributes"], _thisGlobals.CurFieldCondition.LookupEntities[e], !1); if (f.length > 0) for (var g = void 0, h = 0, i = f[0].Attributes.length; h < i; h++) if (g = f[0].Attributes[h], g && g.IsPrimaryName) { c[e] = g.SchemaName.toLowerCase(); break } } var j = "/_controls/lookup/lookupinfo.aspx?LookupStyle=multi&objecttypes=" + b.join(","), k = new window.parent.Xrm.DialogOptions; k.width = 700, k.height = 700, window.parent.Xrm.Internal.openDialog(window.parent.Mscrm.CrmUri.create(j).toString(), k, null, null, CallbackFunction) }), $("#cancelfieldcondition").on("click", function (a) { _thisGlobals.CurFieldCondition = void 0, $("#fieldconditionflyout").hide("slow") }), $("#setfieldcondition").on("click", function (a) { if (_thisGlobals.CurFieldCondition.CrmFieldType == _thisGlobals.CrmFieldTypes.TextType || _thisGlobals.CurFieldCondition.CrmFieldType == _thisGlobals.CrmFieldTypes.MemoType || _thisGlobals.CurFieldCondition.CrmFieldType == _thisGlobals.CrmFieldTypes.IntegerType || _thisGlobals.CurFieldCondition.CrmFieldType == _thisGlobals.CrmFieldTypes.DoubleType || _thisGlobals.CurFieldCondition.CrmFieldType == _thisGlobals.CrmFieldTypes.DecimalType || _thisGlobals.CurFieldCondition.CrmFieldType == _thisGlobals.CrmFieldTypes.MoneyType ? (_thisGlobals.CurFieldCondition.ConditionValue = $(_thisGlobals.FieldIds.fieldconditioninput).val(), _thisGlobals.CurFieldCondition.ConditionLabel = _thisGlobals.CurFieldCondition.ConditionValue) : _thisGlobals.CurFieldCondition.CrmFieldType == _thisGlobals.CrmFieldTypes.DateTimeType ? (_thisGlobals.CurFieldCondition.ConditionValue = $(_thisGlobals.FieldIds.dateconditioninput).val(), _thisGlobals.CurFieldCondition.ConditionLabel = _thisGlobals.CurFieldCondition.ConditionValue) : _thisGlobals.CurFieldCondition.CrmFieldType == _thisGlobals.CrmFieldTypes.OptionSetType || _thisGlobals.CurFieldCondition.CrmFieldType == _thisGlobals.CrmFieldTypes.State || _thisGlobals.CurFieldCondition.CrmFieldType == _thisGlobals.CrmFieldTypes.Status ? _thisGlobals.CurFieldCondition.ConditionAttributeOptionset && _thisGlobals.CurFieldCondition.ConditionAttributeOptionset != _thisGlobals.CurFieldCondition.ConditionAttributeOrg && (_thisGlobals.CurFieldCondition.ConditionAttribute = _thisGlobals.CurFieldCondition.ConditionAttributeOptionset, _thisGlobals.CurFieldCondition.ConditionValue = $(_thisGlobals.FieldIds.fieldconditioninput).val(), _thisGlobals.CurFieldCondition.ConditionLabel = _thisGlobals.CurFieldCondition.ConditionValue) : _thisGlobals.CurFieldCondition.CrmFieldType != _thisGlobals.CrmFieldTypes.LookupType && _thisGlobals.CurFieldCondition.CrmFieldType != _thisGlobals.CrmFieldTypes.OwnerType && _thisGlobals.CurFieldCondition.CrmFieldType != _thisGlobals.CrmFieldTypes.CustomerType || _thisGlobals.CurFieldCondition.ConditionAttributeLookup && _thisGlobals.CurFieldCondition.ConditionAttributeLookup != _thisGlobals.CurFieldCondition.ConditionAttributeOrg && (_thisGlobals.CurFieldCondition.ConditionAttribute = _thisGlobals.CurFieldCondition.ConditionAttributeLookup, _thisGlobals.CurFieldCondition.ConditionValue = $(_thisGlobals.FieldIds.fieldconditioninput).val(), _thisGlobals.CurFieldCondition.ConditionLabel = _thisGlobals.CurFieldCondition.ConditionValue), !("none" === $(_thisGlobals.FieldIds.fieldconditioninput).css("display") && "none" === $(_thisGlobals.FieldIds.dateconditioninput).css("display") || void 0 != _thisGlobals.CurFieldCondition.ConditionValue && "undefined" != _thisGlobals.CurFieldCondition.ConditionValue && void 0 != _thisGlobals.CurFieldCondition.ConditionValue.length && 0 != _thisGlobals.CurFieldCondition.ConditionValue.length)) return void window.parent.Xrm.Utility.alertDialog(_thisGlobals.Translation_Labels.ConditionMissingError); _thisGlobals.CurFieldCondition.OperatorFetchVal && (_thisGlobals.CurFieldCondition.ConditionValue = _thisGlobals.CurFieldCondition.OperatorFetchVal.replace("{0}", _thisGlobals.CurFieldCondition.ConditionValue)), "not-null" != _thisGlobals.CurFieldCondition.ConditonOperator && "null" != _thisGlobals.CurFieldCondition.ConditonOperator || (_thisGlobals.CurFieldCondition.ConditionValue = "", _thisGlobals.CurFieldCondition.ConditionLabel = ""), LogIt("Before Save Label [" + _thisGlobals.CurFieldCondition.ConditionLabel + "] Value [" + _thisGlobals.CurFieldCondition.ConditionValue + "] Op [" + _thisGlobals.CurFieldCondition.ConditonOperator + "] fetchop [" + _thisGlobals.CurFieldCondition.OperatorFetchOp + "] fetchval [" + _thisGlobals.CurFieldCondition.OperatorFetchVal + "]"), AddACondition(_thisGlobals.CurFieldCondition), SaveConditions(), $("#fieldconditionflyout").hide("slow"); var b = "<span> " + _thisGlobals.CurFieldCondition.CrmFieldLabel + " " + GetFieldConditionSelectOptionLabelByValue(_thisGlobals.CurFieldCondition.CrmFieldType, _thisGlobals.CurFieldCondition.ConditonOperator) + " " + (_thisGlobals.CurFieldCondition.ConditionLabel && "undefined" != _thisGlobals.CurFieldCondition.ConditionLabel ? _thisGlobals.CurFieldCondition.ConditionLabel : "") + "</span>"; $("#" + _thisGlobals.CurFieldCondition.BtnId).attr("data-tooltip", b).addClass("checklistbuttoncondition"), _thisGlobals.CurFieldCondition = void 0 }), $("#removefieldcondition").on("click", function (a) { RemoveCondition(_thisGlobals.CurFieldCondition.ConditionAttribute), SaveConditions(), $("#fieldconditionflyout").hide("slow"), $("#" + _thisGlobals.CurFieldCondition.BtnId).attr("data-tooltip", _thisGlobals.Translation_Labels.FieldConditionBtn).removeClass("checklistbuttoncondition"), _thisGlobals.CurFieldCondition = void 0 }), $("#deleteallfieldconditionsbtn").on("click", function (a) { var b = $("#listoffieldstoselect").find(".checklistbuttoncondition"); if (b && b.length) { DeleteAllConditions(); for (var c = 0; c < b.length; c++) { var d = $(b[c]), e = $("#" + d.attr("data-tilename-id")); "statecode" != e.attr("data-item-schema") && d.attr("data-tooltip", _thisGlobals.Translation_Labels.FieldConditionBtn).removeClass("checklistbuttoncondition") } } a.stopPropagation() }), $("#cellformattingokbtn").on("click", function (a) { a.stopPropagation(); var b = $("#cellformattingcontainer"), c = b.attr("data-schemaname"), d = b.attr("data-item-attrtype"), e = $("#conditionbackgroundcolor").spectrum("get").toHexString(), f = $("#conditionforegroundcolor").spectrum("get").toHexString(), g = _thisGlobals._CurConfiguration.GetFormattingOptions(), h = g.GetField(c), i = null; switch (d) { case _thisGlobals.CrmFieldTypes.TextType: case _thisGlobals.CrmFieldTypes.MemoType: var j = $("#cellformatgeneralcondition option:selected").val(); j && "-1" != j && (i = { Operator: j, Value: $("#cellformatconditioninput").val() }); break; case _thisGlobals.CrmFieldTypes.IntegerType: var j = $("#cellformatgeneralcondition option:selected").val(); j && "-1" != j && (i = { Operator: j, Value: parseInt($("#cellformatconditioninput").val()) }); break; case _thisGlobals.CrmFieldTypes.DoubleType: case _thisGlobals.CrmFieldTypes.DecimalType: case _thisGlobals.CrmFieldTypes.MoneyType: var j = $("#cellformatgeneralcondition option:selected").val(); j && "-1" != j && (i = { Operator: j, Value: parseFloat($("#cellformatconditioninput").val()) }); break; case _thisGlobals.CrmFieldTypes.LookupType: case _thisGlobals.CrmFieldTypes.OwnerType: case _thisGlobals.CrmFieldTypes.CustomerType: var j = $("#cellformatlookupcondition option:selected").val(); if (j && "-1" != j) { var k = $("#cellformatconditioninput").parent().attr("data-item-default"); if (k) { var l = k.split("{}"); i = { Operator: j, Value: l[0], Guid: l[1] } } } break; case _thisGlobals.CrmFieldTypes.DateTimeType: var j = $("#cellformatdatetimeconditions option:selected").val(); j && "-1" != j && (i = { Operator: j, Value: $("#cellformatdateconditioninput").val() }); break; case _thisGlobals.CrmFieldTypes.BooleanType: case _thisGlobals.CrmFieldTypes.OptionSetType: case _thisGlobals.CrmFieldTypes.State: case _thisGlobals.CrmFieldTypes.Status: var j = $("#cellformatgeneralcondition option:selected").val(), m = $("#cellformatoptionsetcondition option:selected").val(); j && "-1" != j && m && (i = { Operator: j, Value: m }); break; default: LogEx("Exception: No field type retrieved: " + fieldtype) } if (null == i) return void b.addClass("displaynone"); var n = $("#" + h.HtmlCellId[0]), o = $("#" + h.HtmlCellId[1]); n.css("background-color", e).css("color", f), o.css("background-color", e).css("color", f); var p = { HtmlCellId: h.HtmlCellId, SchemaName: c, BackgroundColor: e, TextColor: f, FontCss: null, Condition: i }; $("#cellfontcss").val() ? (DeccoupleCss($("#cellfontcss").val(), n), DeccoupleCss($("#cellfontcss").val(), o), p.FontCss = $("#cellfontcss").val()) : h && h.FontCss && (DeccoupleCss(h.FontCss, n, !0), DeccoupleCss(h.FontCss, o, !0)), g.AddOrUpdateField(c, p), b.addClass("displaynone"), SetParentFormDirty() }), $("#cellformattingcancelbtn").on("click", function (a) { a.stopPropagation(), $("#cellformattingcontainer").addClass("displaynone") }), $("#cellformattingresetbtn").on("click", function (a) { a.stopPropagation(), ResetCellFormattingElements() }), $("#listoffieldstoselectfilter").on("keypress", function (a) { var b = a.which || a.keycode; a.stopPropagation(); try { var c = $(this).val() + String.fromCharCode(b); if (c && c.length && c.length > 0) { c = c.toLowerCase(), LogIt("keypress " + c); var d = $(".flyout-ContentContainer").find("input[type='checkbox']"); if (d && d.length) for (var e = 0; e < d.length; e++) { var f = $(d[e]); if (f.attr("data-item-label").toLowerCase().startsWith(c)) { d[e].scrollIntoView(); break } } } } catch (a) { } }), $("#addentitytodisplaybutton").on("click", function (a) { a.stopPropagation(); var b = $("#displayfromentity").val(), c = $("#displayfromentity").find("option:selected").text(); if (void 0 != b && null != b && "0" != b && !EntityGridEntityExists(b)) { var d = { SchemaName: b, Label: c }, e = new DCrmEGConfigurationManager(d); AddToMainConfiguration(e), SetParentTitle(), SetParentFormDirty(), DisplaySelectedEntityInfo(e.Li, b) } }), $("#configuresorting").on("click", function (a) { var b = $("#selectedfieldstable").find("tbody:first").find("tr"); if (b && b.length && b.length > 0) { var c, d = $("#sorttypeprimary"), e = $("#sorttypesecondary"); d.empty(), $('<option selected="selected" value="-1">---</option>').appendTo(d), e.empty(), $('<option selected="selected" value="-1">---</option>').appendTo(e); for (var f = 0; f < b.length; f++) c = $(b[f]), $('<option value="' + c.attr("data-item-schema") + '">' + c.attr("data-item-label") + "</option>").appendTo(d), $('<option value="' + c.attr("data-item-schema") + '">' + c.attr("data-item-label") + "</option>").appendTo(e); if (_thisGlobals._CurConfiguration.SortOrder) { var g = _thisGlobals._CurConfiguration.SortOrder.split(";"); d.val(g[0]), $('input[name="sorttypeprimaryradio"][value="' + g[1] + '"]').prop("checked", !0), g.length > 2 && (e.val(g[2]), $('input[name="sorttypesecondaryradio"][value="' + g[3] + '"]').prop("checked", !0)) } $("#colsorttypedilog").show("slow") } }), $("#sorttypeok").on("click", function (a) { var b = void 0, c = $("#sorttypeprimary").val(), d = $("#sorttypesecondary").val(), e = $("input[name=sorttypeprimaryradio]:checked").val(), f = $("input[name=sorttypesecondaryradio]:checked").val(); "-1" != c && (b = c + ";" + e), "-1" != d && (b += ";" + d + ";" + f), $("#colsorttypedilog").hide("slow"), b && b.length > 0 ? _thisGlobals._CurConfiguration.SortOrder = b : _thisGlobals._CurConfiguration.SortOrder = void 0, SetParentFormDirty() }), $("#sorttypecancel").on("click", function (a) { $("#colsorttypedilog").hide("slow") }), _thisGlobals.FormIsReadOnly) { var d = GetHiddenFieldText(1); $("#displayonentity").html('<option value="0">' + d + "</option>"), $("#displayfromentity").html('<option value="0">--</option>'), $("#displayonentity").prop("disabled", "disabled"), $("#displayfromentity").prop("disabled", "disabled"), $("#maxrecordperpage").prop("disabled", "disabled"), $("#createnewbtnclick").prop("disabled", "disabled"), $("#booleaneditorbehaviour").prop("disabled", "disabled"), $("#autosavechanges_check").prop("disabled", "disabled"), $("#hideautosave_check").prop("disabled", "disabled"), $("#allowcreate_check").prop("disabled", "disabled"), $("#allowdelete_check").prop("disabled", "disabled"), $("#refreshaftercreate_check").prop("disabled", "disabled"), $("#refreshaftersave_check").prop("disabled", "disabled"), $("#pastefromexcel_check").prop("disabled", "disabled"), $("#displayentityfieldsoptions").prop("disabled", "disabled"), $("#entitiesAreRelated").attr("disabled", "disabled"), $("#displaySum").attr("disabled", "disabled"), $("#gridtitle").attr("disabled", "disabled"), $("#displayclearfilterbutton").attr("disabled", "disabled"), $("#displayheaderfilter").attr("disabled", "disabled"), $("#displayexportbutton").attr("disabled", "disabled"), $("#displaysetrecordstate").attr("disabled", "disabled"), $("#displayclonerecord").attr("disabled", "disabled"), $("#displayclonerecordbutton").attr("disabled", "disabled"), $("#openrecordbehavoir").prop("disabled", "disabled"), $("#deleteallfieldconditionsbtn").attr("disabled", "disabled"), LoadDCrmEGConfiguration(), $(".entitylistbuttons").hide() } else RetreiveEntityList(), $("#dateconditioninput").datetimepicker({ timepicker: !1, format: _thisGlobals.userDatetimeSettings.DateFormat, formatDate: _thisGlobals.userDatetimeSettings.DateFormat, formatTime: _thisGlobals.userDatetimeSettings.TimeFormat, onChangeDateTime: function (a, b) { } }), $("#cellformatdateconditioninput").datetimepicker({ timepicker: !1, format: _thisGlobals.userDatetimeSettings.DateFormat, formatDate: _thisGlobals.userDatetimeSettings.DateFormat, formatTime: _thisGlobals.userDatetimeSettings.TimeFormat }), EntityGridMakeSortable(); CreateTooltip(), SetupColorPicker($("#oddrowcolorinput"), _thisGlobals.DefaultBackgroundColor), SetupColorPicker($("#evenrowcolorinput"), _thisGlobals.DefaultBackgroundColor), SetupColorPicker($("#headerbkcolor"), _thisGlobals.DefaultBackgroundColor), SetupColorPicker($("#headerfkcolor"), _thisGlobals.DefaultTextColor), SetupColorPicker($("#conditionbackgroundcolor"), _thisGlobals.DefaultBackgroundColor), SetupColorPicker($("#conditionforegroundcolor"), _thisGlobals.DefaultTextColor), $("#headerformattingokbtn").on("click", function (a) { a.stopPropagation(); var b = $("#headerformattingcontainer"); b.addClass("displaynone"); var c = b.attr("data-schemaname"), d = $("#headerbkcolor").spectrum("get").toHexString(), e = $("#headerfkcolor").spectrum("get").toHexString(), f = _thisGlobals._CurConfiguration.GetFormattingOptions(), g = f.GetHeader(c), h = $("#" + g.HtmlHeaderId); h.css("background-color", d), h.css("color", e); var i = { HtmlHeaderId: g.HtmlHeaderId, SchemaName: c, BackgroundColor: d, TextColor: e, FontCss: null, ApplyToColumn: !1 }; if ($("#headerfontcss").val() ? (DeccoupleCss($("#headerfontcss").val(), h), i.FontCss = $("#headerfontcss").val()) : g && g.FontCss && DeccoupleCss(g.FontCss, h, !0), $("#applyheaderformattoallcells").prop("checked")) { i.ApplyToColumn = !0; var j = h[0].cellIndex, k = $("#formattingcolors").find("tbody tr"), l = $(k[0].cells[j]); l.find("div:first").css("background-color", i.BackgroundColor).css("color", i.TextColor), l = $(k[1].cells[j]), l.find("div:first").css("background-color", i.BackgroundColor).css("color", i.TextColor) } else { var j = h[0].cellIndex, k = $("#formattingcolors").find("tbody tr"), l = $(k[0].cells[j]); l.find("div:first").css("background-color", "").css("color", ""), l = $(k[1].cells[j]), l.find("div:first").css("background-color", "").css("color", "") } f.AddOrUpdateHeader(c, i), SetParentFormDirty() }), $("#headerformattingcancelbtn").on("click", function (a) { a.stopPropagation(), $("#headerformattingcontainer").addClass("displaynone") }), $("#headerformattingresetbtn").on("click", function (a) { a.stopPropagation(), ResetHeaderFormattingElements() }), $("#listoflookupfieldstoselectcancelbtn").on("click", function (a) { a.stopPropagation(), $("#listoflookupentityfieldsflyout").hide() }), $("#listoflookupfieldstoselectokbtn").on("click", function (a) { a.stopPropagation(); var b = $("#listoflookupentityfieldstoselect").find("input[type=checkbox]"); b && $.each(b, function (a, b) { var c = $(b); c.is(":checked") && console.log(c.attr("id")) }), $("#listoflookupentityfieldsflyout").hide() })
} function LookupEntityFieldsCheckboxListClickHandler(a) { console.log("Check clicked [" + a.is(":checked") + "]") } function EntityGridMakeSortable() { $("#makesortable").sortable({ onDragStart: function (a, b, c) { var d = a.parent().parent(); "LI" != d[0].tagName ? _thisGlobals.BeforeDragParentLi = void 0 : _thisGlobals.BeforeDragParentLi = FindDCrmEGConfigurationBySchema(d.find("span:first").attr("data-item-schemaname")), c(a, b) }, onDrop: function (a, b, c) { var d = a.parent().parent(), e = a.find("span:first"), f = e.attr("data-item-schemaname"), g = FindDCrmEGConfigurationBySchema(f); if ("LI" == d[0].tagName) { var h = $(d).find("span:first"), i = h.attr("data-item-schemaname"), j = XrmServiceToolkit.Soap.RetrieveEntityMetadata(["Relationships"], f, !1); if (j && j.length > 0) { var k = e.next(); k && k.length && "LABEL" == k[0].tagName && k.empty().remove(); var l = GetEntityRelationships(j[0].ManyToOneRelationships, i); l ? (e.text(e.attr("data-item-orglabel") + " "), $('<label> <input data-item-schema="' + f + '" onclick="InnerRelationshipHandler(event, this);" checked="checked" type="checkbox"></input>' + l + " = " + h.attr("data-item-orglabel") + "</label>").insertAfter(e), g.Entity.ParentLiId = $(d).attr("id"), g.Entity.RelatedToParentLI = !0, g.Entity.RelatedToParentLILookupSchemaName = l, g.Entity.ParentSchemaName = i) : (g.Entity.ParentLiId = void 0, g.Entity.RelatedToParentLI = !1, g.Entity.RelatedToParentLILookupSchemaName = void 0, g.Entity.ParentSchemaName = i); var m = FindDCrmEGConfigurationBySchema(i); m.ChildConfigurations.push(jQuery.extend(!0, {}, g)), _thisGlobals.BeforeDragParentLi ? _thisGlobals.BeforeDragParentLi.RemoveChild(f) : RemoveDCrmEGConfiguration(f, !1) } else ResetLiData(e, a, g) } else ResetLiData(e, a, g); SetParentTitle(), SetParentFormDirty(), c(a, b) } }) } function ResetAllUI() { $("#selectedfieldstable").find("tbody:first").empty(); var a = $("#formattingcolors"), b = a.find("thead:first").find("tr"), c = b.find("th"); $.each(c, function (a, b) { a > 0 && $(b).remove() }); var d = a.find("tbody tr"); $.each(d, function (a, b) { var c = $(b).find("td"); $.each(c, function (a, b) { a > 0 && $(b).remove() }) }), $("#oddrowcolorinput").spectrum("set", _thisGlobals.DefaultBackgroundColor), $("#evenrowcolorinput").spectrum("set", _thisGlobals.DefaultBackgroundColor), $("#oddrowcolorinput").parent().parent().parent().css("background-color", ""), $("#evenrowcolorinput").parent().parent().parent().css("background-color", ""), $("#headerformattingcontainer").addClass("displaynone"), $("#cellformattingcontainer").addClass("displaynone"), $("#listoffieldstoselectlabel").text(""), $("#conditionsfetchdisplay").html(""), _thisGlobals.SelectFieldsCheckboxList && _thisGlobals.SelectFieldsCheckboxList.DestroyYourself(), DisplaySectionGroup(2, !1), DisplaySectionGroup(4, !1), DisplaySectionGroup(41, !1), DisplaySectionGroup(5, !1), DisplaySectionGroup(51, !1) } function ResetLiData(a, b, c) { a.text(a.attr("data-item-orglabel")); var d = a.next(); d && d.length && "LABEL" == d[0].tagName && d.empty().remove(), c.Entity.ParentLiId = void 0, c.Entity.RelatedToParentLI = !1, c.Entity.RelatedToParentLILookupSchemaName = void 0, c.Entity.ParentSchemaName = void 0, _thisGlobals.BeforeDragParentLi && _thisGlobals.BeforeDragParentLi.RemoveChild(c.Entity.SchemaName); var e = jQuery.extend(!0, {}, c); RemoveDCrmEGConfiguration(c.Entity.SchemaName, !1), AddToMainConfiguration(e) } function ResetEntityGrid() { var a = $("#makesortable"); a.attr("data-item-lastfocus") && $("#" + a.attr("data-item-lastfocus")).find("div:first").removeClass("selectedli"); var b = $("#makesortable").find("li"); if (b && b.length) for (var c = 0; c < b.length; c++) { var d = FindDCrmEGConfigurationByLiId($(b[c]).attr("id")), e = RetreiveEntityRelationShips(d.Entity.SchemaName); d.Entity.RelatedToDisplayOnEntity = e.length > 0, d.Entity.RelatedToDisplayOnLookupSchemaName = e.length > 0 ? e[0] : void 0 } ResetAllUI(), _thisGlobals._CurConfiguration = void 0 } function EntityGridEntityExists(a) { var b = $("#makesortable").find("li"); if (b && b.length) for (var d = 0; d < b.length; d++) if ($(b[d]).find("span:first").attr("data-item-schemaname") == a) return !0; return !1 } function GetEntitesDispayOrder() { var a = $("#makesortable").find("li"), b = ""; if (a && a.length) for (var c = 0; c < a.length; c++) c > 0 ? b += _thisGlobals._SEPERATOR + $(a[c]).find("span:first").attr("data-item-schemaname") : b = $(a[c]).find("span:first").attr("data-item-schemaname"); return b } function SetParentFormDirty() { SaveDCrmEGConfiguration(), _thisGlobals.xrmPage.data.setFormDirty(!0) } function ResetEntityGridDisplayOrder() { var a = GetEntitesDispayOrder(); _thisGlobals.xrmPage.data.entity.attributes.get(_thisGlobals.HeaderFieldNames).setValue(a), _thisGlobals.xrmPage.data.setFormDirty(!0) } function RetreiveEntityRelationShips(a) { $("#entitiesAreRelated").prop("checked", !1), $("#relatedEntityLookupSelect").empty(), $("#relatedEntityLookup").val(""); var b = XrmServiceToolkit.Soap.RetrieveEntityMetadata(["Relationships"], a, !1); if (b && b.length > 0) { var c = GetEntityRelationshipsMain(b[0].ManyToOneRelationships); return c.length > 0 && $("#relatedEntityLookupSelect").find("option:eq(0)").prop("selected", !0), c } return !1 } function GetEntityRelationshipsMain(a, b) { b = b || GetHiddenFieldValue(1); var c = []; if (b && a && a.length) for (var d = 0; d < a.length; d++) a[d].ReferencedEntity == b && (c.push(a[d].ReferencingAttribute), $("#relatedEntityLookupSelect").append('<option value="' + a[d].ReferencingAttribute + '">' + a[d].ReferencingAttribute + "</option>")); return c } function GetEntityRelationships(a, b) { b = b || GetHiddenFieldValue(1); var c = !1; if (b && a && a.length) for (var d = 0; d < a.length; d++) if (a[d].ReferencedEntity == b) { c = a[d].ReferencingAttribute; break } return c } function DisplaySelectedEntityInfo(a, b) { var c = $("#makesortable"); c.attr("data-item-lastfocus") && $("#" + c.attr("data-item-lastfocus")).find("div:first").removeClass("selectedli"), a.find("div:first").addClass("selectedli"), c.attr("data-item-lastfocus", a.attr("id")), ResetAllUI(), _thisGlobals._CurConfiguration = FindDCrmEGConfigurationBySchema(b); var d = RetreiveEntityRelationShips(b); d.length > 0 ? ($("#entitiesAreRelated").prop("checked", _thisGlobals._CurConfiguration.Entity.RelatedToDisplayOnEntity), $("#relatedEntityLookupSelect").val(_thisGlobals._CurConfiguration.Entity.RelatedToDisplayOnLookupSchemaName), $("#relatedEntityLookup").val(_thisGlobals._CurConfiguration.Entity.RelatedToDisplayOnLookupSchemaName), DisplaySectionGroup(2, !0)) : ($("#entitiesAreRelated").prop("checked", !1), $("#relatedEntityLookupSelect").empty(), $("#relatedEntityLookup").val(""), DisplaySectionGroup(2, !1)), $("#gridtitle").val(_thisGlobals._CurConfiguration.GridTitle), $("#displayclearfilterbutton").prop("checked", _thisGlobals._CurConfiguration.DisplayClearFilterButton), $("#displayheaderfilter").prop("checked", _thisGlobals._CurConfiguration.DisplayHeaderFilter), $("#displayexportbutton").prop("checked", _thisGlobals._CurConfiguration.DisplayExportButton), $("#displaysetrecordstate").prop("checked", _thisGlobals._CurConfiguration.DisplaySetRecordState), $("#displayclonerecord").prop("checked", _thisGlobals._CurConfiguration.DisplayCloneRecord), $("#displayclonerecordbutton").prop("checked", _thisGlobals._CurConfiguration.DisplayCloneRecordButton), $("#displaySum").prop("checked", _thisGlobals._CurConfiguration.DisplaySum), $("#autosavechanges_check").prop("checked", _thisGlobals._CurConfiguration.AutoSaveChanges), $("#hideautosave_check").prop("checked", _thisGlobals._CurConfiguration.HideAutosaveButton), $("#allowcreate_check").prop("checked", _thisGlobals._CurConfiguration.AllowCreateNew), $("#allowdelete_check").prop("checked", _thisGlobals._CurConfiguration.AllowDelete), $("#refreshaftercreate_check").prop("checked", _thisGlobals._CurConfiguration.RefreshAfterCreate), $("#refreshaftersave_check").prop("checked", _thisGlobals._CurConfiguration.RefreshAfterSave), $("#pastefromexcel_check").prop("checked", _thisGlobals._CurConfiguration.PasteFromExcel), $("#maxrecordperpage").val(_thisGlobals._CurConfiguration.RecordsPerPage), $("#createnewbtnclick").val(_thisGlobals._CurConfiguration.NewBtnBehavoir), $("#booleaneditorbehaviour").val(_thisGlobals._CurConfiguration.BooleanEditorBehavoir), $("#openrecordbehavoir").val(_thisGlobals._CurConfiguration.OpenRecordBehavoir), RetreiveEntityMetadata(b) } function AddToMainConfiguration(a) { _thisGlobals.DCrmEGConfiguration.push(a) } function RetrieveEntityOutput(a, b) { var c = null; if (b) { var d = CryptoJS.AES.decrypt(a, _thisGlobals.TargetOutputEncSeed); c = d.toString(CryptoJS.enc.Utf8) } else { var e = CryptoJS.AES.encrypt(a, _thisGlobals.TargetOutputEncSeed); c = e.toString() } return c } function LoadDCrmEGConfiguration() {
    if (1 != _thisGlobals.ParentFieldsFormType) {
        var a = void 0, b = void 0, c = _thisGlobals.xrmPage.data.entity.attributes.get(_thisGlobals.HeaderFieldNames).getValue(), d = c ? RetrieveEntityOutput(c, !0).split(_thisGlobals._SEPERATOR) : ""; c = _thisGlobals.xrmPage.data.entity.attributes.get(_thisGlobals.DisplayFromEntityFieldName).getValue(); var e = c ? RetrieveEntityOutput(c, !0).split(_thisGlobals._pSeperator) : ""; c = _thisGlobals.xrmPage.data.entity.attributes.get(_thisGlobals.FromEntityFieldsAttr).getValue(); var f = c ? RetrieveEntityOutput(c, !0).split(_thisGlobals._pSeperator) : ""; c = _thisGlobals.xrmPage.data.entity.attributes.get(_thisGlobals.FieldConditionValues).getValue(); var g = c ? RetrieveEntityOutput(c, !0).split(_thisGlobals._pSeperator) : ""; c = _thisGlobals.xrmPage.data.entity.attributes.get("dcrmeg_entitiesinfo").getValue(); for (var h = c ? c.split(_thisGlobals._pSeperator) : null, i = 0; i < d.length; i++) {
            a = void 0; var j = FindEntityGridInfo(d[i], e), k = { SchemaName: j[0], Label: j[1] }; if (k.isRelated = !1, "true" == j[2] && (k.isRelated = !0, k.related = j[3]), k.RelatedToParentLI = "true" == j[4], k.RelatedToParentLILookupSchemaName = j[5].length > 0 ? j[5] : void 0, k.ParentSchemaName = j[6].length > 0 ? j[6] : void 0, k.ParentSchemaName && (a = FindDCrmEGConfigurationBySchema(k.ParentSchemaName), a && (k.ParentLiId = a.Li.attr("id"), k.parentContainer = a.Li.find("ol:first").attr("id"))), j[7].length > 0 && (k.HasStatusField = j[7]), k.DisplaySum = j[8], k.FieldDisplayOption = parseInt(j[9]), k.RecordsPerPage = j[10], j.length > 11 && (k.AutoSaveChanges = j[11], k.AllowCreateNew = j[12], k.AllowDelete = j[13], k.RefreshAfterCreate = !(j.length > 14) || j[14], k.RefreshAfterSave = j.length > 15 && j[15], k.SortOrder = j.length > 16 && j[16].length > 0 ? j[16] : void 0, k.NewBtnBehavoir = j.length > 17 ? j[17] : void 0, k.BooleanEditorBehavoir = j.length > 18 ? j[18] : void 0, k.HideAutosaveButton = j.length > 19 ? j[19] : void 0, k.GridTitle = j.length > 20 ? j[20] : void 0, k.DisplayClearFilterButton = !(j.length > 21) || j[21], k.DisplayHeaderFilter = !(j.length > 22) || j[22], k.DisplayExportButton = !(j.length > 23) || j[23], k.DisplaySetRecordState = !(j.length > 24) || j[24], k.DisplayCloneRecord = !(j.length > 25) || j[25], k.DisplayCloneRecordButton = !(j.length > 26) || j[26], k.OpenRecordBehavoir = j.length > 27 ? j[27] : void 0, k.PasteFromExcel = j.length > 28 && j[28]), b = new DCrmEGConfigurationManager(k), b.Fields = FindEntiyGridFields(k.SchemaName, f), g.length > 0 && (b.Conditions = FindEntiyGridFields(k.SchemaName, g)), h) for (var l = 0; l < h.length; l++) {
                var m = h[l].split(_thisGlobals._OuterSeperator); if (m[1] == k.SchemaName) {
                    var n = new FormattingOptions(m[1]), o = m[0].split(_thisGlobals._SEPERATOR);
                    if (o[0] && o[0].length > 0) for (var p = o[0].split("[H]"), q = 0; q < p.length; q++) p[q] && p[q].length > 0 && n.Headers.push(JSON.parse(p[q])); if (o[1] && o[1].length > 0) for (var r = o[1].split("[F]"), q = 0; q < r.length; q++) r[q] && r[q].length > 0 && n.Fields.push(JSON.parse(r[q])); o[2] && o[2].length > 0 && (n.OddRows = o[2]), o[3] && o[3].length > 0 && (n.EvenRows = o[3]), b.Formattings = n
                }
            } if (k.ParentSchemaName && a) { var s = b.Li.find("span:first"), t = k.RelatedToParentLI ? "checked=checked" : ""; s.text(b.Entity.Label + " "), k.RelatedToParentLILookupSchemaName && $('<label> <input type="checkbox" ' + t + '  data-item-schema="' + k.SchemaName + '" onclick="InnerRelationshipHandler(event, this);"></input>' + k.RelatedToParentLILookupSchemaName + " = " + a.Entity.Label + "</label>").insertAfter(s), a.ChildConfigurations.push(b) } else AddToMainConfiguration(b)
        } _thisGlobals.DCrmEGConfiguration.length > 0 && DisplaySelectedEntityInfo(_thisGlobals.DCrmEGConfiguration[0].Li, _thisGlobals.DCrmEGConfiguration[0].Entity.SchemaName)
    }
} function InnerRelationshipHandler(a, b) { a.stopPropagation(); var c = $(b).attr("data-item-schema"), d = FindDCrmEGConfigurationBySchema(c); return d && (d.Entity.RelatedToParentLI = !!$(b).is(":checked"), SetParentFormDirty()), !1 } function FindEntityGridInfo(a, b) { for (var c = void 0, d = 0; d < b.length; d++) { var e = b[d].split(_thisGlobals._SEPERATOR); if (e[0] == a) { c = e; break } } return c } function FindEntiyGridFields(a, b) { for (var c = void 0, d = 0; d < b.length; d++) { var e = b[d].split(_thisGlobals._OuterSeperator); if (e[e.length - 1] == a) { e.splice(e.length - 1, 1), c = e.join(_thisGlobals._OuterSeperator); break } } return c } function SaveDCrmEGConfiguration() { _thisGlobals._Entityinfo = "", _thisGlobals._Fieldsinfo = "", _thisGlobals._Conditioninfo = "", _thisGlobals._FormattingInfo = ""; for (var b = 0; b < _thisGlobals.DCrmEGConfiguration.length; b++) if (b > 0 && (_thisGlobals._Entityinfo += _thisGlobals._pSeperator), _thisGlobals._Entityinfo += _thisGlobals.DCrmEGConfiguration[b].Entity.SchemaName + _thisGlobals._SEPERATOR + _thisGlobals.DCrmEGConfiguration[b].Entity.Label + _thisGlobals._SEPERATOR + _thisGlobals.DCrmEGConfiguration[b].Entity.RelatedToDisplayOnEntity + _thisGlobals._SEPERATOR + CheckValue(_thisGlobals.DCrmEGConfiguration[b].Entity.RelatedToDisplayOnLookupSchemaName) + _thisGlobals._SEPERATOR + _thisGlobals.DCrmEGConfiguration[b].Entity.RelatedToParentLI + _thisGlobals._SEPERATOR + CheckValue(_thisGlobals.DCrmEGConfiguration[b].Entity.RelatedToParentLILookupSchemaName) + _thisGlobals._SEPERATOR + CheckValue(_thisGlobals.DCrmEGConfiguration[b].Entity.ParentSchemaName) + _thisGlobals._SEPERATOR + CheckValue(_thisGlobals.DCrmEGConfiguration[b].HasStatusField) + _thisGlobals._SEPERATOR + _thisGlobals.DCrmEGConfiguration[b].DisplaySum + _thisGlobals._SEPERATOR + _thisGlobals.DCrmEGConfiguration[b].FieldDisplayOption + _thisGlobals._SEPERATOR + _thisGlobals.DCrmEGConfiguration[b].RecordsPerPage + _thisGlobals._SEPERATOR + _thisGlobals.DCrmEGConfiguration[b].AutoSaveChanges + _thisGlobals._SEPERATOR + _thisGlobals.DCrmEGConfiguration[b].AllowCreateNew + _thisGlobals._SEPERATOR + _thisGlobals.DCrmEGConfiguration[b].AllowDelete + _thisGlobals._SEPERATOR + _thisGlobals.DCrmEGConfiguration[b].RefreshAfterCreate + _thisGlobals._SEPERATOR + _thisGlobals.DCrmEGConfiguration[b].RefreshAfterSave + _thisGlobals._SEPERATOR + CheckValue(_thisGlobals.DCrmEGConfiguration[b].SortOrder) + _thisGlobals._SEPERATOR + _thisGlobals.DCrmEGConfiguration[b].NewBtnBehavoir + _thisGlobals._SEPERATOR + _thisGlobals.DCrmEGConfiguration[b].BooleanEditorBehavoir + _thisGlobals._SEPERATOR + _thisGlobals.DCrmEGConfiguration[b].HideAutosaveButton + _thisGlobals._SEPERATOR + _thisGlobals.DCrmEGConfiguration[b].GridTitle + _thisGlobals._SEPERATOR + _thisGlobals.DCrmEGConfiguration[b].DisplayClearFilterButton + _thisGlobals._SEPERATOR + _thisGlobals.DCrmEGConfiguration[b].DisplayHeaderFilter + _thisGlobals._SEPERATOR + _thisGlobals.DCrmEGConfiguration[b].DisplayExportButton + _thisGlobals._SEPERATOR + _thisGlobals.DCrmEGConfiguration[b].DisplaySetRecordState + _thisGlobals._SEPERATOR + _thisGlobals.DCrmEGConfiguration[b].DisplayCloneRecord + _thisGlobals._SEPERATOR + _thisGlobals.DCrmEGConfiguration[b].DisplayCloneRecordButton + _thisGlobals._SEPERATOR + _thisGlobals.DCrmEGConfiguration[b].OpenRecordBehavoir + _thisGlobals._SEPERATOR + _thisGlobals.DCrmEGConfiguration[b].PasteFromExcel, _thisGlobals.DCrmEGConfiguration[b].Fields && (b > 0 && (_thisGlobals._Fieldsinfo += _thisGlobals._pSeperator), _thisGlobals._Fieldsinfo += _thisGlobals.DCrmEGConfiguration[b].Fields + _thisGlobals._OuterSeperator + _thisGlobals.DCrmEGConfiguration[b].Entity.SchemaName), _thisGlobals.DCrmEGConfiguration[b].Conditions && (b > 0 && (_thisGlobals._Conditioninfo += _thisGlobals._pSeperator), _thisGlobals._Conditioninfo += _thisGlobals.DCrmEGConfiguration[b].Conditions + _thisGlobals._OuterSeperator + _thisGlobals.DCrmEGConfiguration[b].Entity.SchemaName), _thisGlobals.DCrmEGConfiguration[b].Formattings && (_thisGlobals._FormattingInfo.length > 0 ? _thisGlobals._FormattingInfo += _thisGlobals._pSeperator + _thisGlobals.DCrmEGConfiguration[b].Formattings.SaveData() : _thisGlobals._FormattingInfo = _thisGlobals.DCrmEGConfiguration[b].Formattings.SaveData()), _thisGlobals.DCrmEGConfiguration[b].ChildConfigurations.length > 0) for (var c = 0; c < _thisGlobals.DCrmEGConfiguration[b].ChildConfigurations.length; c++) SaveDCrmEGConfigurationInternal(_thisGlobals.DCrmEGConfiguration[b].ChildConfigurations[c]); var d = GetEntitesDispayOrder(); _thisGlobals.xrmPage.data.entity.attributes.get(_thisGlobals.HeaderFieldNames).setValue(RetrieveEntityOutput(d, !1)), _thisGlobals.xrmPage.data.entity.attributes.get(_thisGlobals.DisplayFromEntityFieldName).setValue(RetrieveEntityOutput(_thisGlobals._Entityinfo, !1)), _thisGlobals.xrmPage.data.entity.attributes.get(_thisGlobals.FromEntityFieldsAttr).setValue(RetrieveEntityOutput(_thisGlobals._Fieldsinfo, !1)), _thisGlobals.xrmPage.data.entity.attributes.get(_thisGlobals.FieldConditionValues).setValue(RetrieveEntityOutput(_thisGlobals._Conditioninfo, !1)), _thisGlobals.xrmPage.data.entity.attributes.get("dcrmeg_entitiesinfo").setValue(_thisGlobals._FormattingInfo) } function SaveDCrmEGConfigurationInternal(a) { if (_thisGlobals._Entityinfo += _thisGlobals._pSeperator + a.Entity.SchemaName + _thisGlobals._SEPERATOR + a.Entity.Label + _thisGlobals._SEPERATOR + a.Entity.RelatedToDisplayOnEntity + _thisGlobals._SEPERATOR + CheckValue(a.Entity.RelatedToDisplayOnLookupSchemaName) + _thisGlobals._SEPERATOR + a.Entity.RelatedToParentLI + _thisGlobals._SEPERATOR + CheckValue(a.Entity.RelatedToParentLILookupSchemaName) + _thisGlobals._SEPERATOR + CheckValue(a.Entity.ParentSchemaName) + _thisGlobals._SEPERATOR + CheckValue(a.HasStatusField) + _thisGlobals._SEPERATOR + a.DisplaySum + _thisGlobals._SEPERATOR + a.FieldDisplayOption + _thisGlobals._SEPERATOR + a.RecordsPerPage + _thisGlobals._SEPERATOR + a.AutoSaveChanges + _thisGlobals._SEPERATOR + a.AllowCreateNew + _thisGlobals._SEPERATOR + a.AllowDelete + _thisGlobals._SEPERATOR + a.RefreshAfterCreate + _thisGlobals._SEPERATOR + a.RefreshAfterSave + _thisGlobals._SEPERATOR + CheckValue(a.SortOrder) + _thisGlobals._SEPERATOR + a.NewBtnBehavoir + _thisGlobals._SEPERATOR + a.BooleanEditorBehavoir + _thisGlobals._SEPERATOR + a.HideAutosaveButton + _thisGlobals._SEPERATOR + a.GridTitle + _thisGlobals._SEPERATOR + a.DisplayClearFilterButton + _thisGlobals._SEPERATOR + a.DisplayHeaderFilter + _thisGlobals._SEPERATOR + a.DisplayExportButton + _thisGlobals._SEPERATOR + a.DisplaySetRecordState + _thisGlobals._SEPERATOR + a.DisplayCloneRecord + _thisGlobals._SEPERATOR + a.DisplayCloneRecordButton + _thisGlobals._SEPERATOR + a.OpenRecordBehavoir + _thisGlobals._SEPERATOR + a.PasteFromExcel, a.Fields && (_thisGlobals._Fieldsinfo += _thisGlobals._pSeperator + a.Fields + _thisGlobals._OuterSeperator + a.Entity.SchemaName), a.Conditions && (_thisGlobals._Conditioninfo += _thisGlobals._pSeperator + a.Conditions + _thisGlobals._OuterSeperator + a.Entity.SchemaName), a.Formattings && (_thisGlobals._FormattingInfo.length > 0 ? _thisGlobals._FormattingInfo += _thisGlobals._pSeperator + a.Formattings.SaveData() : _thisGlobals._FormattingInfo = a.Formattings.SaveData()), a.ChildConfigurations.length > 0) for (var b = 0; b < a.ChildConfigurations.length; b++) SaveDCrmEGConfigurationInternal(a.ChildConfigurations[b]) } function CheckValue(a) { return a && "undefined" != a ? a : "" } function UpdateDCrmEGConfiguration(a) { for (var b = 0; b < _thisGlobals.DCrmEGConfiguration.length; b++) { if (_thisGlobals.DCrmEGConfiguration[b].Entity.SchemaName == a.Entity.SchemaName) { _thisGlobals.DCrmEGConfiguration[b] = a; break } if (_thisGlobals.DCrmEGConfiguration[b].ChildConfigurations.length > 0) for (var c = 0; c < _thisGlobals.DCrmEGConfiguration[b].ChildConfigurations.length; c++) { var d = UpdateDCrmEGConfigurationInternal(_thisGlobals.DCrmEGConfiguration[b].ChildConfigurations[c], a); if (d) break } } } function UpdateDCrmEGConfigurationInternal(a, b) { var c = !1; if (a.Entity.SchemaName == b.Entity.SchemaName) return a = b, !0; if (a.ChildConfigurations.length > 0) for (var d = 0; d < a.ChildConfigurations.length; d++) { var c = UpdateDCrmEGConfigurationInternal(a.ChildConfigurations[d], b); if (c) break } return c } function FindDCrmEGConfigurationBySchema(a, b) { for (var c = void 0, d = 0; d < _thisGlobals.DCrmEGConfiguration.length; d++) { if (_thisGlobals.DCrmEGConfiguration[d].Entity.SchemaName == a) { c = _thisGlobals.DCrmEGConfiguration[d]; break } if (_thisGlobals.DCrmEGConfiguration[d].ChildConfigurations.length > 0) for (var e = 0; e < _thisGlobals.DCrmEGConfiguration[d].ChildConfigurations.length && !(c = FindDCrmEGConfiguration(_thisGlobals.DCrmEGConfiguration[d].ChildConfigurations[e], a)) ; e++); } return c && b && (c = jQuery.extend(!0, {}, c)), c } function FindDCrmEGConfiguration(a, b) { var c = void 0; if (a.Entity.SchemaName == b) c = a; else if (a.ChildConfigurations.length > 0) for (var d = 0; d < a.ChildConfigurations.length && !(c = FindDCrmEGConfiguration(a.ChildConfigurations[d], b)) ; d++); return c } function AllConfigsHaveFields() { _thisGlobals._Entityinfo = ""; for (var a = 0; a < _thisGlobals.DCrmEGConfiguration.length; a++) if (void 0 == _thisGlobals.DCrmEGConfiguration[a].Fields && (_thisGlobals._Entityinfo.length > 0 && (_thisGlobals._Entityinfo += ","), _thisGlobals._Entityinfo += _thisGlobals.DCrmEGConfiguration[a].Entity.Label), _thisGlobals.DCrmEGConfiguration[a].ChildConfigurations.length > 0) for (var b = 0; b < _thisGlobals.DCrmEGConfiguration[a].ChildConfigurations.length; b++) AllConfigsHaveFieldsInternal(_thisGlobals.DCrmEGConfiguration[a].ChildConfigurations[b]); return _thisGlobals._Entityinfo } function AllConfigsHaveFieldsInternal(a) { void 0 == a.Fields && (_thisGlobals._Entityinfo.length > 0 && (_thisGlobals._Entityinfo += ","), _thisGlobals._Entityinfo += a.Entity.Label), a.ChildConfigurations.length > 0 && AllConfigsHaveFieldsInternal(a) } function FindDCrmEGConfigurationByLiId(a, b) { for (var c = void 0, d = 0; d < _thisGlobals.DCrmEGConfiguration.length; d++) { if (_thisGlobals.DCrmEGConfiguration[d].Entity.LiId == a) { c = _thisGlobals.DCrmEGConfiguration[d]; break } if (_thisGlobals.DCrmEGConfiguration[d].ChildConfigurations.length > 0) for (var e = 0; e < _thisGlobals.DCrmEGConfiguration[d].ChildConfigurations.length && !(c = FindDCrmEGConfigurationLiId(_thisGlobals.DCrmEGConfiguration[d].ChildConfigurations[e], a)) ; e++); } return c && b && (c = jQuery.extend(!0, {}, c)), c } function FindDCrmEGConfigurationLiId(a, b) { var c = void 0; if (a.Entity.LiId == b) c = a; else if (a.ChildConfigurations.length > 0) for (var d = 0; d < a.ChildConfigurations.length && !(c = FindDCrmEGConfigurationLiId(a.ChildConfigurations[d], b)) ; d++); return c } function RemoveDCrmEGConfiguration(a, b) { for (var c = -1, d = 0; d < _thisGlobals.DCrmEGConfiguration.length; d++) if (_thisGlobals.DCrmEGConfiguration[d].Entity.SchemaName == a) { c = d; break } return c != -1 && (b && RemoveChildConfiguration(_thisGlobals.DCrmEGConfiguration[c]), _thisGlobals.DCrmEGConfiguration[c] = void 0, _thisGlobals.DCrmEGConfiguration.splice(c, 1), !0) } function RemoveChildConfiguration(a) { if (a) { a.DestroyLi(); for (var b = 0; b < a.ChildConfigurations.length; b++) RemoveChildConfiguration(a.ChildConfigurations[b]); a.ChildConfigurations = [] } } function CloneObject(a) { return jQuery.extend(!0, {}, a) } function GetBrowserLanguage() { var a = navigator.languages ? navigator.languages[0] : navigator.language || navigator.userLanguage || navigator.browserLanguage; _thisGlobals.xrmPage.data.entity.attributes.get(_thisGlobals.HeaderFieldNames).setValue(a) } String.prototype.capitalizeFirstLetter = function () { return this && this.length > 0 ? this.charAt(0).toUpperCase() + this.slice(1) : "" }, String.prototype.contains = function (a, b) { return null != b && void 0 != b || (b = !1), b ? this.toLowerCase().indexOf(a.toLowerCase()) != -1 : this.indexOf(a) != -1 }, String.prototype.startsWith = function (a) { return this.slice(0, a.length) == a }, String.prototype.endsWith = function (a) { return this.slice(-a.length) == a }, Array.prototype.ExactMatchExists = function (a) { for (var b = 0; b < this.length; b++) if (a == this[b]) return !0; return !1 }, function (a) { a.extend(!0, window, { DCrmEditableGrid: { Globals: { xrmPage: void 0, LoggedInUserID: void 0, Translation_Labels: {}, WaitDialog: void 0, ToolTipClassSelector: "", PickListCheckboxListCtl: void 0, _DefaultLookupElemId: "", EntityNameField: "dcrmeg_name", DisplayOnEntityFieldName: "dcrmeg_displayonentityhidden", DisplayFromEntityFieldName: "dcrmeg_displayfromentityhidden", FromEntityFieldsAttr: "dcrmeg_fromentityfieldsattrhidden", FieldConditionValues: "dcrmeg_fieldcondition", HeaderFieldNames: "dcrmeg_headerfieldnameshidden", AllFieldsMetadata: void 0, SelectFieldsCheckboxList: void 0, ReloadedSavedFields: [], ReloadedFieldConditions: [], CurFieldCondition: void 0, TooltipControl: void 0, ParentFieldsFormType: 0, FormIsReadOnly: !1, CrmFormFieldsSchemas: [], MandatoryFieldsOptionsId: null, EntityToGetMetadataFor: "", DCrmEGConfiguration: [], BeforeDragParentLi: void 0, _CurConfiguration: void 0, _Entityinfo: "", _Fieldsinfo: "", _Conditioninfo: "", CrmFieldTypes: { LookupType: "lookup", CustomerType: "customer", OwnerType: "owner", BooleanType: "boolean", OptionSetType: "picklist", DateTimeType: "datetime", TextType: "string", MemoType: "memo", IntegerType: "integer", DoubleType: "double", DecimalType: "decimal", MoneyType: "money", State: "state", Status: "status" }, FieldIds: { FieldConditionFlyout: "#fieldconditionflyout", stringconditions: "#stringconditions", datetimeconditions: "#datetimeconditions", lookupconditions: "#lookupconditions", systemuserlookup: "#systemuserlookup", customerlookup: "#customerlookup", optionsetconditions: "#optionsetconditions", numericconditions: "#numericconditions", fieldconditioninput: "#fieldconditioninput", dateconditioninput: "#dateconditioninput", lookupsearchbtn: "#lookupsearchbtn", picklistselect: "#picklistselect" }, _SEPERATOR: "||", _OuterSeperator: "[]", _pSeperator: "%%", TargetOutputEncSeed: "5CD566B7B6D04BE19572", userDatetimeSettings: void 0, ToolTipAttrName: "data-tooltip", DefaultBackgroundColor: "#FFF", DefaultTextColor: "#000", Debug: !1 } } }), a.extend(!0, window, { DCrmEditableGrid: { Helper: { GenerateUUID: function () { var a = (new Date).getTime(), b = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (b) { var c = (a + 16 * Math.random()) % 16 | 0; return a = Math.floor(a / 16), ("x" == b ? c : 7 & c | 8).toString(16) }); return b }, GenerateRandomLetters: function (a) { for (var b = "", c = a || 10, d = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", e = 0; e < c; e++) b += d.charAt(Math.floor(Math.random() * d.length)); return b }, CheckboxList: function (b, c, d, e, f) { var h, g = "0", i = e || a("#listoffieldstoselect"), j = a("<div></div").addClass("flyout-ContentContainer").appendTo(i), k = c; return a.each(b, function (b, c) { h = "<div><table><tbody><tr><td>SchemaName</td><td>" + c.SchemaName + "</td></tr><tr><td>FieldType</td><td>" + c.AttrType + "</td></tr><tr><td>RequiredLevel</td><td>" + c.RequieredLevel + "</td></tr>", c.Format && "A" != c.Format && (h += "<tr><td>Format</td><td>" + c.Format + "</td></tr>"), c.MaxLength && "A" != c.MaxLength && (h += "<tr><td>MaxLength</td><td>" + c.MaxLength + "</td></tr>"), c.MaxValue && "A" != c.MaxValue && (h += "<tr><td>MaxValue</td><td>" + c.MaxValue + "</td></tr>"), c.MinValue && "A" != c.MinValue && (h += "<tr><td>MinValue</td><td>" + c.MinValue + "</td></tr>"), c.Precision && "A" != c.Precision && (h += "<tr><td>Precision</td><td>" + c.Precision + "</td></tr>"), c.LookupTargetEntity && "A" != c.LookupTargetEntity && (h += "<tr><td>Target</td><td>" + c.LookupTargetEntity + "</td></tr>"), h += "</tbody></table></div>"; var e = DCrmEditableGrid.Helper.GenerateUUID(), i = DCrmEditableGrid.Helper.GenerateUUID(), l = a("<div></div>").addClass("selectFieldsCheckList").attr("data-button-id", e).attr("data-check-id", i).attr(_thisGlobals.ToolTipAttrName, h).addClass(_thisGlobals.ToolTipClassSelector).on("click", function (b) { if (k && "DIV" == b.target.tagName) { var c = a("#" + a(this).attr("data-check-id")); c.is(":checked") ? c.prop("checked", !1) : c.prop("checked", !0), k(c) } }).appendTo(j), m = a('<input type="checkbox"></input>').attr("id", i).attr("data-item-realindex", "" + b).attr("data-item-label", c.Name).attr("data-item-schema", c.SchemaName).attr("data-item-attrtype", c.AttrType).attr("data-item-readonly", c.ReadOnly).attr("data-item-requiered", c.RequieredLevel).attr("data-item-maxlength", c.MaxLength).attr("data-item-format", c.Format).attr("data-item-maxvalue", c.MaxValue).attr("data-item-minvalue", c.MinValue).attr("data-item-precision", c.Precision).attr("data-item-realwidth", g).attr("data-item-lookuptargetentity", c.LookupTargetEntity).appendTo(l); if (a("<label></label>").attr("for", i).text(c.Name).attr(_thisGlobals.ToolTipAttrName, h).addClass(_thisGlobals.ToolTipClassSelector).appendTo(l), m.on("click", function (b) { b.stopPropagation(), k && k(a(this)) }), d && d.length > 0 && a.each(d, function (a, b) { b.Name == c.Name && (m.prop("checked", !0), b.RealIndex = m.attr("data-item-realindex"), m.attr("data-item-realwidth", b.RealWidth), m.attr("data-item-readonly", b.ReadOnly)) }), !_thisGlobals.FormIsReadOnly && 1 != f) { var n = FindCondition(c.SchemaName), o = "fieldoptionsettingbutton", p = _thisGlobals.Translation_Labels.FieldConditionBtn; n && (o += " checklistbuttoncondition", p = "<span>" + c.Name + " " + GetFieldConditionSelectOptionLabelByValue(n.CrmFieldType, n.ConditonOperator) + " " + (n.ConditionLabel && "undefined" != n.ConditionLabel ? n.ConditionLabel : "") + "</span>"), a("<button></button>").attr("data-tilename-id", i).attr("data-tooltip", p).attr("id", e).addClass(o).addClass(_thisGlobals.ToolTipClassSelector).appendTo(l).on("click", function (b) { b.stopPropagation(); var c = a("#" + a(this).attr("data-tilename-id")), d = a(this).attr("id"), e = c.attr("data-item-attrtype"), f = FieldConditionSelectId(e); if (_thisGlobals.CurFieldCondition = FindCondition(c.attr("data-item-schema")), _thisGlobals.CurFieldCondition) if (a("#removefieldcondition").show(), _thisGlobals.CurFieldCondition.LookupEntities = void 0, _thisGlobals.CurFieldCondition.LookupData = [], _thisGlobals.CurFieldCondition.PicklistData = [], _thisGlobals.CurFieldCondition.ConditionAttributeOrg = c.attr("data-item-schema"), _thisGlobals.CurFieldCondition.CrmFieldLabel = c.attr("data-item-label"), _thisGlobals.CurFieldCondition.ConditionValue && "undefined" != _thisGlobals.CurFieldCondition.ConditionValue) { if (_thisGlobals.CurFieldCondition.CrmFieldType == _thisGlobals.CrmFieldTypes.BooleanType || _thisGlobals.CurFieldCondition.CrmFieldType == _thisGlobals.CrmFieldTypes.OptionSetType || _thisGlobals.CurFieldCondition.CrmFieldType == _thisGlobals.CrmFieldTypes.State || _thisGlobals.CurFieldCondition.CrmFieldType == _thisGlobals.CrmFieldTypes.Status) if (_thisGlobals.CurFieldCondition.ConditionValue.contains("%")) f.ShowSelectBtn = !1, _thisGlobals.CurFieldCondition.ConditionAttributeOptionset = _thisGlobals.CurFieldCondition.ConditionAttribute; else for (var g = _thisGlobals.CurFieldCondition.ConditionValue.split(";"), h = _thisGlobals.CurFieldCondition.ConditionLabel.split(";"), i = 0; i < g.length; i++) _thisGlobals.CurFieldCondition.PicklistData.push({ Label: h[i], Value: g[i] }); else if (_thisGlobals.CurFieldCondition.CrmFieldType == _thisGlobals.CrmFieldTypes.LookupType || _thisGlobals.CurFieldCondition.CrmFieldType == _thisGlobals.CrmFieldTypes.CustomerType || _thisGlobals.CurFieldCondition.CrmFieldType == _thisGlobals.CrmFieldTypes.OwnerType) if (_thisGlobals.CurFieldCondition.ConditionValue.contains("%")) f.ShowLookupBtn = !1, _thisGlobals.CurFieldCondition.ConditionAttributeLookup = _thisGlobals.CurFieldCondition.ConditionAttribute; else for (var g = _thisGlobals.CurFieldCondition.ConditionValue.split(";"), h = _thisGlobals.CurFieldCondition.ConditionLabel.split(";"), j = _thisGlobals.CurFieldCondition.LookupLogicalNames.split(";"), i = 0; i < g.length; i++) _thisGlobals.CurFieldCondition.LookupData.push({ LookupName: h[i], LookupId: g[i], LookupLogicalName: j[i] }) } else f.ShowSelectBtn = !1, f.ShowLookupBtn = !1; else _thisGlobals.CurFieldCondition = {}, _thisGlobals.CurFieldCondition.ConditonOperator = f.SelectedOptionValue, _thisGlobals.CurFieldCondition.ConditionAttribute = c.attr("data-item-schema"), _thisGlobals.CurFieldCondition.ConditionAttributeOrg = c.attr("data-item-schema"), _thisGlobals.CurFieldCondition.CrmFieldLabel = c.attr("data-item-label"), _thisGlobals.CurFieldCondition.CrmFieldType = c.attr("data-item-attrtype"), _thisGlobals.CurFieldCondition.ConditionValue = void 0, _thisGlobals.CurFieldCondition.ConditionLabel = void 0, _thisGlobals.CurFieldCondition.LookupEntities = void 0, _thisGlobals.CurFieldCondition.LookupData = [], _thisGlobals.CurFieldCondition.PicklistData = [], a("#removefieldcondition").hide(); _thisGlobals.CurFieldCondition.BtnId = d, _thisGlobals.CurFieldCondition.Selectid = f.id, c.attr("data-item-lookuptargetentity") && (_thisGlobals.CurFieldCondition.LookupEntities = c.attr("data-item-lookuptargetentity").split(",")), a(f.id).attr("data-item-org-schema", c.attr("data-item-schema")), a(_thisGlobals.FieldIds.fieldconditioninput).removeAttr("readonly"), a(_thisGlobals.FieldIds.fieldconditioninput).val(""), a(_thisGlobals.FieldIds.dateconditioninput).val(""), a(".conditionscontainer").addClass("hideconditionscontainer"), a(f.label).addClass(_thisGlobals.ToolTipClassSelector).text(c.attr("data-item-label")).attr("data-tooltip", c.attr("data-item-label")), a(f.id).parent().removeClass("hideconditionscontainer"); var k = _thisGlobals.CurFieldCondition.ConditonOperator.split(";"); _thisGlobals.CurFieldCondition.ConditonOperator = k[0]; var l = !0; l = "#datetimeconditions" == f.id ? "on" == _thisGlobals.CurFieldCondition.ConditonOperator || "on-or-after" == _thisGlobals.CurFieldCondition.ConditonOperator || "on-or-before" == _thisGlobals.CurFieldCondition.ConditonOperator || "olderthan-x-months" == _thisGlobals.CurFieldCondition.ConditonOperator : "not-null" != _thisGlobals.CurFieldCondition.ConditonOperator && "null" != _thisGlobals.CurFieldCondition.ConditonOperator && "eq-userid" != _thisGlobals.CurFieldCondition.ConditonOperator && "ne-userid" != _thisGlobals.CurFieldCondition.ConditonOperator && "eq-userteams" != _thisGlobals.CurFieldCondition.ConditonOperator && "eq-useroruserteams" != _thisGlobals.CurFieldCondition.ConditonOperator, k.length > 1 && (_thisGlobals.CurFieldCondition.OperatorFetchOp = k[1]), a(f.id).val(_thisGlobals.CurFieldCondition.ConditonOperator), f.ShowInput && l ? (a(_thisGlobals.FieldIds.fieldconditioninput).val(_thisGlobals.CurFieldCondition.ConditionLabel), a(_thisGlobals.FieldIds.fieldconditioninput).show()) : a(_thisGlobals.FieldIds.fieldconditioninput).hide(), f.ShowLookupBtn && l ? (a(_thisGlobals.FieldIds.lookupsearchbtn).show(), a(_thisGlobals.FieldIds.fieldconditioninput).attr("readonly", "readonly")) : a(_thisGlobals.FieldIds.lookupsearchbtn).hide(), f.ShowSelectBtn && l ? a(_thisGlobals.FieldIds.picklistselect).show() : (a(_thisGlobals.FieldIds.fieldconditioninput).attr("readonly", "readonly"), a(_thisGlobals.FieldIds.picklistselect).hide()), f.ShowDate && l ? (a(_thisGlobals.FieldIds.dateconditioninput).val(_thisGlobals.CurFieldCondition.ConditionLabel), a(_thisGlobals.FieldIds.dateconditioninput).show()) : a(_thisGlobals.FieldIds.dateconditioninput).hide(), a(_thisGlobals.FieldIds.FieldConditionFlyout).show("slow"), f.ShowInput && l && (f.ShowLookupBtn || a(_thisGlobals.FieldIds.fieldconditioninput).removeAttr("readonly"), a(_thisGlobals.FieldIds.fieldconditioninput).focus()), ConditionSelectOnChange(f.id), CreateTooltip() }) } f && a("<button></button>").attr("data-tilename-id", i).attr("data-tooltip", "Editable field. Click to lock field").attr("id", e).addClass("lookupfieldseditable").addClass(_thisGlobals.ToolTipClassSelector).appendTo(l).on("click", function (b) { b.stopPropagation(); var c = a(this); c.hasClass("lookupfieldslocked") ? c.removeClass("lookupfieldslocked").attr("data-tooltip", "Editable field. Click to lock field.") : c.addClass("lookupfieldslocked").attr("data-tooltip", "Locked field. Click to make field editable.") }) }), j.DestroyYourself = function () { i.empty() }, j.GetContent = function () { return j }, j }, PicklistCheckboxList: function (b, c) { var d = a("#picklistchecklist"), e = c; return a.each(b, function (b, c) { var f = a("<div></div>").addClass("selectFieldsCheckList").appendTo(d), g = DCrmEditableGrid.Helper.GenerateUUID(), h = a('<input type="checkbox"></input>').attr("id", g).attr("data-item-value", "" + c.value).attr("data-item-label", "" + c.Label).appendTo(f); a("<label></label>").attr("for", g).text(c.Label).insertAfter(h), h.on("click", function (b) { e && e(a(this)), b.stopPropagation() }) }), d }, GetUserLocalizedLabel: function (a, b) { return a.UserLocalizedLabel && a.UserLocalizedLabel.Label ? a.UserLocalizedLabel.Label : a.LocalizedLabels && a.LocalizedLabels.length > 0 ? a.LocalizedLabels[0].Label : b ? b : "" } } } }) }(jQuery); var _thisGlobals = DCrmEditableGrid.Globals; _thisGlobals.xrmPage = window.parent.Xrm.Page, _thisGlobals.LoggedInUserID = _thisGlobals.xrmPage.context.getUserId(), Date.parseDate = function (a, b) { if (b = b || _thisGlobals.userDatetimeSettings.DateFormat, 0 == a.trim().length) return new Date; var c = a.trim().split(" "), d = c[0].trim().replace(/[\/\/]/g, _thisGlobals.userDatetimeSettings.DateSeparator).split(_thisGlobals.userDatetimeSettings.DateSeparator), e = void 0; b.contains(_thisGlobals.userDatetimeSettings.TimeFormat) && (e = c[1].trim().replace(":", _thisGlobals.userDatetimeSettings.TimeSeparator).split(_thisGlobals.userDatetimeSettings.TimeSeparator)); var f = b.toLowerCase().replace(/[\/\/]/g, _thisGlobals.userDatetimeSettings.DateSeparator).split(_thisGlobals.userDatetimeSettings.DateSeparator); d[0] = d[0].trim(), d[1] = d[1].trim(), d[2] = d[2].trim(); var g = "", h = "", i = ""; f[0].startsWith("y") ? g = d[0] : f[1].startsWith("y") ? g = d[1] : f[2].startsWith("y") && (g = d[2]), f[0].startsWith("m") ? h = d[0] : f[1].startsWith("m") ? h = d[1] : f[2].startsWith("m") && (h = d[2]), f[0].startsWith("d") ? i = d[0] : f[1].startsWith("d") ? i = d[1] : f[2].startsWith("d") && (i = d[2]); var j; return j = e ? new Date(g, h - 1, i, e[0].trim(), e[1].trim()) : new Date(g, h - 1, i) }, Date.prototype.dateFormat = function (a) { var b = new XDate(this).toString(a); return b }; var BareboneTip = function () { function a(a, b) { var c = this; c.TargettingClass = b, c.TooltipContainer = $('<div class="tinytipclass"></div>').on("mouseenter", function (a) { $(this).hide() }).appendTo("body"), c.TooltipAttr = a, c.HighlightRows = !1, c.HighLightedCell = void 0, c.HookTooltips = function () { $("." + c.TargettingClass).on("mouseover", function (a) { if (a.target) { var b = $(a.target), d = b.attr(c.TooltipAttr); if (d && d.length && d.length > 0) { c.TooltipContainer.html(d.replace(/\n/g, "<br />")); var f = b.offset().top, g = b.offset().left, h = b.outerWidth(), i = c.TooltipContainer.outerHeight(); g += h / 2, g -= c.TooltipContainer.outerWidth() / 2, g < 0 && (g = 0); var j = $(window).width() - (g + h); j < 0 && (g += j), f = f - i - 2, f < 0 && (f = b.offset().top + b.height() + 2), c.TooltipContainer.css({ left: g, top: f }).show() } } }).on("mouseleave", function (a) { c.TooltipContainer.hide() }) }, c.UnHookTooltips = function () { $("." + c.TargettingClass).off("mouseover").off("mouseleave") } } return a }(), NumericTextbox = function () { function a(a, b, c, d, e, f, g, h) { var i = this; i.SaveFuncPtr = g, i.InitialInputValue = d, i.$input = $('<input style="width:' + e + 'px;" value="' + d + '" type="text" />').attr("data-tilename-id", a).attr("data-item-forwidth", h ? "1" : "0").keydown(function (a) { $.inArray(a.keyCode, [46, 8, 9, 27, 13, 110]) !== -1 || 65 == a.keyCode && a.ctrlKey === !0 || 67 == a.keyCode && a.ctrlKey === !0 || 86 == a.keyCode && a.ctrlKey === !0 || 88 == a.keyCode && a.ctrlKey === !0 || a.keyCode >= 35 && a.keyCode <= 39 || (a.shiftKey || a.keyCode < 48 || a.keyCode > 57) && (a.keyCode < 96 || a.keyCode > 105) && (a.preventDefault(), a.stopPropagation()) }).blur(function (a) { var b = $(this), c = b.val(), d = !1; "1" == b.attr("data-item-forwidth") ? (null != c && 0 != c.length || b.val("0"), $("#" + b.attr("data-tilename-id")).attr("data-item-realwidth", "" + c), d = !0) : c && c.length > 0 ? (b.parent().attr("data-item-default", c), d = !0) : i.InitialInputValue.length > 0 && (b.parent().removeAttr("data-item-default"), d = !0), d && i.SaveFuncPtr && i.SaveFuncPtr() }).appendTo(f), h && i.$input.attr("data-tooltip", b).addClass(c).prop("maxlength", 2), i.GetInput = function () { return i.$input } } return a }(), SelectBooleanCheck = function () { function a(a, b, c, d, e, f) { var g = this; g.SaveFuncPtr = f; var h = '<option selected="selected" value="1">True</option><option value="0">False</option>'; d.length > 0 && (h = e ? "<option " + (e.split("{}")[1] == d[0].value ? 'selected="selected"' : "") + ' value="' + d[0].value + '">' + d[0].Label + "</option><option " + (e.split("{}")[1] == d[1].value ? 'selected="selected"' : "") + ' value="' + d[1].value + '">' + d[1].Label + "</option>" : '<option selected="selected" value="' + d[0].value + '">' + d[0].Label + '</option><option value="' + d[1].value + '">' + d[1].Label + "</option>"), g.$input = $('<select style="width:' + b + 'px;">' + h + "</select>").attr("data-tilename-id", a).on("change", function (a) { a.stopPropagation(); var b = $(this).val(), c = $(this).find(":selected").text(); $(this).parent().attr("data-item-default", c + "{}" + b), g.SaveFuncPtr && g.SaveFuncPtr() }).appendTo(c), g.GetInput = function () { return g.$input } } return a }(), OptionSetSelect = function () { function a(a, b, c, d, e, f) { var g = this; g.SaveFuncPtr = f; var h = '<option selected="selected" value="-1">---</option>'; if (d.length > 0) for (var i = e ? e.split("{}")[1] : "-1", j = 0; j < d.length; j++) h += "<option " + (i == d[j].value ? 'selected="selected"' : "") + ' value="' + d[j].value + '">' + d[j].Label + "</option>"; g.$input = $('<select style="width:' + b + 'px;">' + h + "</select>").attr("data-tilename-id", a).on("change", function (a) { a.stopPropagation(); var b = $(this).val(), c = $(this).find(":selected").text(); "-1" != b ? $(this).parent().attr("data-item-default", c + "{}" + b) : $(this).parent().removeAttr("data-item-default"), g.SaveFuncPtr && g.SaveFuncPtr() }).appendTo(c), g.GetInput = function () { return g.$input } } return a }(); _thisGlobals.LookupViewHelperArray = []; var LookupViewHelper = function () {
    function a(a, b, c) {
        var d = this; d.IdCounter = 1, d.CurEntityProcessing = null, d.DefaultViewId = c, d.ViewEntitySchemaName = a.split(","), d.Select2Id = DCrmEditableGrid.Helper.GenerateUUID(); var e = $('<div class="lookupselect2class" style="width:160px;margin-top:5px;margin-bottom:5px;"></div>').appendTo(b); d.Select2Jq = $('<select id="' + d.Select2Id + '"></select>').appendTo(e), d.CallbackErrorHandler = function (a) { console.error("Exception " + a) }, d.UserViewsCallback = function (a) { if (a && a.length > 0) for (var b = 0; b < a.length; b++) d.IdCounter++, d.Select2Views.append($('<option id="' + (b + d.IdCounter) + '" value="' + a[b].attributes.userqueryid.value + '" savedqueryid="' + a[b].attributes.userqueryid.value + '">' + a[b].attributes.name.value + "</option>")) }, d.SavedViewsCallback = function (a) { var b = $('<optgroup label="' + d.CurEntityProcessing.capitalizeFirstLetter() + '" id="-1"></optgroup>'); if (a && a.length > 0) for (var c = 0; c < a.length; c++) d.IdCounter++, b.append($('<option id="' + (c + d.IdCounter) + '" data-item-viewentityobjecttypecode="' + d.EntityObjectTypeCode + '" value="' + a[c].attributes.savedqueryid.value + '" savedqueryid="' + a[c].attributes.savedqueryid.value + '">' + a[c].attributes.name.value + "</option>")); d.Select2Views.append(b) }, d.Select2Views = d.Select2Jq.select2({ placeholder: "Set Default View", maximumSelectionLength: 1, allowClear: !0 }).on("select2:select", function (a) { var b = d.Select2Jq.find("option:selected"), c = $(b[0]).attr("savedqueryid"); c && d.Select2Jq.parent().parent().attr("data-item-viewid", c).attr("data-item-viewentityobjecttypecode", $(b[0]).attr("data-item-viewentityobjecttypecode")), SaveFields() }).on("select2:unselect", function (a) { d.Select2Jq.parent().parent().removeAttr("data-item-viewid").removeAttr("data-item-viewentityobjecttypecode"), SaveFields() }); for (var f = 0; f < d.ViewEntitySchemaName.length; f++) { d.CurEntityProcessing = d.ViewEntitySchemaName[f], d.EntityObjectTypeCode = XrmServiceToolkit.Common.GetObjectTypeCode(d.CurEntityProcessing); var g = '<fetch version="1.0" output-format="xml-platform" mapping="logical" distinct="false"><entity name="savedquery"><attribute name="name" /><attribute name="savedqueryid" /><order attribute="name" descending="false" /><filter><condition attribute="statecode" operator="eq" value="0" /><condition attribute="querytype" operator="eq" value="0" /><condition attribute="fetchxml" operator="not-null" /><condition attribute="returnedtypecode" operator="eq" value="' + d.EntityObjectTypeCode + '" /></filter></entity></fetch>', h = XrmServiceToolkit.Soap.Fetch(g); d.SavedViewsCallback(h) } d.DefaultViewId ? d.Select2Views.val(d.DefaultViewId).trigger("change") : d.Select2Views.val(null).trigger("change");
    } return a
}(), FormattingOptions = function () { function a(a) { var e = this; e.EntitySchemaName = a, e.Headers = [], e.Fields = [], e.EvenRows = null, e.OddRows = null, e.SaveData = function () { var b = "", c = ""; if (e.Headers.length > 0) for (var d = 0; d < e.Headers.length; d++) { c = e.Headers[d].HtmlHeaderId, delete e.Headers[d].HtmlHeaderId; var f = JSON.stringify(e.Headers[d]); b += d > 0 ? "[H]" + f : f, e.Headers[d].HtmlHeaderId = c } if (b += _thisGlobals._SEPERATOR, e.Fields.length > 0) for (var d = 0; d < e.Fields.length; d++) { c = e.Fields[d].HtmlCellId, delete e.Fields[d].HtmlCellId; var g = JSON.stringify(e.Fields[d]); b += d > 0 ? "[F]" + g : g, e.Fields[d].HtmlCellId = c } return b += e.OddRows ? _thisGlobals._SEPERATOR + e.OddRows : _thisGlobals._SEPERATOR, b += e.EvenRows ? _thisGlobals._SEPERATOR + e.EvenRows : _thisGlobals._SEPERATOR, b.length > 0 && (b += _thisGlobals._OuterSeperator + e.EntitySchemaName), b }, e.ResetFormattingOptions = function () { e.Headers = [], e.Fields = [], e.EvenRows = null, e.OddRows = null }, e.AddHeader = function (a, b, c, d, f, g) { var h = { HtmlHeaderId: a, SchemaName: b, BackgroundColor: c ? c : _thisGlobals.DefaultBackgroundColor, TextColor: d ? d : _thisGlobals.DefaultTextColor, FontCss: f, ApplyToColumn: g }; e.Headers.push(h) }, e.AddOrUpdateHeader = function (a, b) { for (var c = 0; c < e.Headers.length; c++) if (e.Headers[c].SchemaName == a) return void (e.Headers[c] = b); e.Headers.push(b) }, e.RemoveHeader = function (a) { b(e.Headers, a) }, e.UpdateHeader = function (a, b) { c(e.Headers, a, b) }, e.GetHeader = function (a) { return d(e.Headers, a) }, e.AddField = function (a, b, c, d, f, g) { var h = { HtmlCellId: a, SchemaName: b, BackgroundColor: c ? c : _thisGlobals.DefaultBackgroundColor, TextColor: d ? d : _thisGlobals.DefaultTextColor, FontCss: f, Condition: g }; e.Fields.push(h) }, e.AddOrUpdateField = function (a, b) { for (var c = 0; c < e.Fields.length; c++) if (e.Fields[c].SchemaName == a) return void (e.Fields[c] = b); e.Fields.push(b) }, e.RemoveField = function (a) { b(e.Fields, a) }, e.UpdateField = function (a, b) { c(e.Fields, a, b) }, e.GetField = function (a) { return d(e.Fields, a) } } function b(a, b) { if (0 != a.length) { for (var c = -1, d = 0; d < a.length; d++) if (a.SchemaName == b) { c = d; break } c != -1 && a.splice(c, 1) } } function c(a, b, c) { if (0 != a.length) for (var d = 0; d < a.length; d++) if (a[d].SchemaName == b) { a[d] = c; break } } function d(a, b) { if (0 == a.length) return null; for (var c = 0; c < a.length; c++) if (a[c].SchemaName == b) return a[c] } return a }(), DCrmEGConfigurationManager = function () { function a(a) { var b = this, c = "#makesortable"; a.parentContainer && (c = "#" + a.parentContainer); var d = DCrmEditableGrid.Helper.GenerateUUID(), e = void 0; if (a.isRelated) RetreiveEntityRelationShips(a.SchemaName), e = a.related; else { var f = RetreiveEntityRelationShips(a.SchemaName); f.length > 0 && (e = f[0]) } b.Entity = { LiId: d, SchemaName: a.SchemaName, Label: a.Label, RelatedToDisplayOnEntity: a.isRelated, RelatedToDisplayOnLookupSchemaName: e ? e : void 0, ParentLiId: a.ParentLiId ? a.ParentLiId : void 0, RelatedToParentLI: a.RelatedToParentLI, ParentSchemaName: a.ParentSchemaName ? a.ParentSchemaName : void 0, RelatedToParentLILookupSchemaName: a.RelatedToParentLILookupSchemaName ? a.RelatedToParentLILookupSchemaName : void 0 }, b.GridTitle = a.GridTitle && a.GridTitle.length && a.GridTitle.length > 0 ? a.GridTitle : a.Label, b.DisplayClearFilterButton = !a.DisplayClearFilterButton || "false" != a.DisplayClearFilterButton, b.DisplayHeaderFilter = !a.DisplayHeaderFilter || "false" != a.DisplayHeaderFilter, b.DisplayExportButton = !a.DisplayExportButton || "false" != a.DisplayExportButton, b.DisplaySetRecordState = !a.DisplaySetRecordState || "false" != a.DisplaySetRecordState, b.DisplayCloneRecord = !a.DisplayCloneRecord || "false" != a.DisplayCloneRecord, b.DisplayCloneRecordButton = !a.DisplayCloneRecordButton || "false" != a.DisplayCloneRecordButton, b.OpenRecordBehavoir = a.OpenRecordBehavoir && "undefined" != a.OpenRecordBehavoir ? a.OpenRecordBehavoir : "10", b.HasStatusField = a.HasStatusField ? a.HasStatusField : void 0, b.DisplaySum = !a.DisplaySum || "false" != a.DisplaySum, b.FieldDisplayOption = a.FieldDisplayOption ? a.FieldDisplayOption : 100000003, b.RecordsPerPage = a.RecordsPerPage ? a.RecordsPerPage : "5", b.AutoSaveChanges = !a.AutoSaveChanges || "false" != a.AutoSaveChanges, b.AllowCreateNew = !a.AllowCreateNew || "false" != a.AllowCreateNew, b.AllowDelete = !a.AllowDelete || "false" != a.AllowDelete, b.RefreshAfterCreate = !a.RefreshAfterCreate || "false" != a.RefreshAfterCreate, b.RefreshAfterSave = !(!a.RefreshAfterSave || "true" != a.RefreshAfterSave), b.PasteFromExcel = !(!a.PasteFromExcel || "true" != a.PasteFromExcel), b.SortOrder = a.SortOrder && "undefined" != a.SortOrder ? a.SortOrder : void 0, b.NewBtnBehavoir = a.NewBtnBehavoir && "undefined" != a.NewBtnBehavoir ? a.NewBtnBehavoir : "30", b.BooleanEditorBehavoir = a.BooleanEditorBehavoir && "undefined" != a.BooleanEditorBehavoir ? a.BooleanEditorBehavoir : "20", b.HideAutosaveButton = !(!a.HideAutosaveButton || "true" != a.HideAutosaveButton), b.Fields = void 0, b.Conditions = void 0, b.Formattings = void 0, b.GetFormattingOptions = function () { return b.Formattings ? b.Formattings : (b.Formattings = new FormattingOptions(b.Entity.SchemaName), b.Formattings) }, b.ChildConfigurations = [], b.LinkEntityFields = void 0, b.SetLinkEntityFields = function (a, c, d, e) { void 0 == b.LinkEntityFields && (b.LinkEntityFields = []); for (var f = { Name: a, From: c, To: d, Alias: DCrmEditableGrid.Helper.GenerateRandomLetters(15), Fields: e }, g = 0; g < b.LinkEntityFields.length; g++) if (b.LinkEntityFields[g].To == d) return void (b.LinkEntityFields[g] = f); b.LinkEntityFields.push(f) }, b.SaveLinkEntityFields = function () { if (b.LinkEntityFields && b.LinkEntityFields.length && b.LinkEntityFields.length > 0) { var a = JSON.stringify(b.LinkEntityFields); a ? console.log(JSON.parse(a)) : console.log("Nothing????") } }, b.GetLinkEntityFields = function (a) { for (var c = 0; c < b.LinkEntityFields.length; c++) if (b.LinkEntityFields[c].To == a) return b.LinkEntityFields[c]; return null }, b.RemoveLinkEntityFields = function (a) { for (var c = -1, d = 0; d < b.LinkEntityFields.length; d++) if (b.LinkEntityFields[d].To == a) { c = d; break } c > -1 && b.LinkEntityFields.splice(c, 1) }, b.Li = $('<li><div class="entitygridinfocontainer"><span class="EntityGridLabels" data-item-orglabel="' + a.Label + '" data-item-schemaname="' + a.SchemaName + '">' + a.Label + '</span><button class="entitylistbuttons"></button></div><ol id="' + DCrmEditableGrid.Helper.GenerateUUID() + '"></ol></li>').attr("id", d).appendTo($(c)), b.Li.find(".entitygridinfocontainer").on("click", function (a) { if (a.stopPropagation(), a.target && "DIV" == a.target.tagName) { var c = $(this).parent(); DisplaySelectedEntityInfo(c, b.Entity.SchemaName) } }), b.Li.find("span:first").on("click", function (a) { a.stopPropagation(); var c = $(this).parent().parent(); DisplaySelectedEntityInfo(c, b.Entity.SchemaName) }), b.Li.find(".entitylistbuttons").on("click", function (a) { a.stopPropagation(), $(this).parent().find("first:label").empty().remove(); var c = $(this).parent().parent(), d = $("#makesortable"); if (d.attr("data-item-lastfocus")) { var e = d.attr("data-item-lastfocus"); e == c.attr("id") ? (d.removeAttr("data-item-lastfocus"), ResetAllUI()) : FindDCrmEGConfigurationByLiId(e) && ResetAllUI() } RemoveDCrmEGConfiguration(b.Entity.SchemaName, !0), b.DestroyLi(), SetParentTitle(), SetParentFormDirty() }), b.RemoveChild = function (a) { for (var c = -1, d = FindDCrmEGConfigurationBySchema(b.Entity.SchemaName), e = 0; e < d.ChildConfigurations.length; e++) if (d.ChildConfigurations[e].Entity.SchemaName == a) { c = e; break } c != -1 && d.ChildConfigurations.splice(c, 1) }, b.RemoveChildByLiId = function (a) { for (var c = -1, d = FindDCrmEGConfigurationBySchema(b.Entity.SchemaName), e = 0; e < d.ChildConfigurations.length; e++) if (d.ChildConfigurations[e].Entity.LiId == a) { c = e; break } c != -1 && d.ChildConfigurations.splice(c, 1) }, b.DestroyLi = function () { b.Li && (b.Li.find(".entitylistbuttons").off("click"), b.Li.find(".entitygridinfocontainer").off("click"), b.Li.find("span").off("click"), b.Li.empty().remove()) } } return a }();