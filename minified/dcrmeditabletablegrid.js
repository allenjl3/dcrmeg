function DisplayCrmAlertDialog(a) { window.parent.Xrm.Utility.alertDialog(a) } function LogIt(a, b) { _thisGlobals.Debug && "undefined" != typeof console && "undefined" != typeof console.debug && console.log(a, b) } function LogEx(a, b) { "undefined" != typeof console && "undefined" != typeof console.debug && console.error(a, b) } function DisplayNewButtonMenu(a, b) { var c = $('<ul class="contextMenuPlugin"><div class="gutterLine"></div></ul>').appendTo("body"), d = $("<div></div>").addClass("InvisibleFrame").appendTo("body").on("contextmenu click", function (a) { return a.stopPropagation(), d.remove(), c.remove(), !1 }).show(), f = $('<li><a href="#" class="contextMenuLink" id="newinline"><span class="itemTitle">Inline</span></a></li>').appendTo(c); f = $('<li><a href="#" class="contextMenuLink" id="newwindow"><span class="itemTitle">Window</span></a></li>').appendTo(c), c.find("a").click(function (b) { var e = $(this).attr("id"), f = void 0; if ("newinline" == e) f = CreateInlineRecord(a); else if ("newwindow" == e) try { if (window.parent.DCrmEgGridBeforeCreateNewRecord) { var g = window.parent.DCrmEgGridBeforeCreateNewRecord(null, a.activeOptions.ParentEntityInfo); if (!g) return d.remove(), c.remove(), !1 } if (a.activeOptions.ParentChildLookupInfo.Related) { if ("regardingobjectid" == a.activeOptions.ParentChildLookupInfo.LookupSchemaName) return d.remove(), c.remove(), DisplayCrmAlertDialog("Unable to set Regarding. Please use the create Inline menu.\r\nMSDN: You can't set the values for partylist or regarding lookups using openEntityForm."), !1; var h = {}; h[a.activeOptions.ParentChildLookupInfo.LookupSchemaName] = a.activeOptions.ParentChildLookupInfo.Guid, h[a.activeOptions.ParentChildLookupInfo.LookupSchemaName + "name"] = a.activeOptions.ParentChildLookupInfo.PrimaryNameAttributeValue; var i = a.activeOptions.ParentChildLookupInfo.LookupSchemaName; (i.endsWith("customerid") || i.endsWith("ownerid")) && (h[a.activeOptions.ParentChildLookupInfo.LookupSchemaName + "type"] = a.activeOptions.ParentChildLookupInfo.ParentSchemaName), window.parent.Xrm.Utility.openEntityForm(a.activeOptions.ParentEntityInfo.ParentEntitySchemaname, null, h) } else window.parent.Xrm.Utility.openEntityForm(a.activeOptions.ParentEntityInfo.ParentEntitySchemaname, null, null) } catch (a) { f = a.message } d.remove(), c.remove(), f && DisplayCrmAlertDialog("Unable to create new record due to exception:\r" + f) }), c.show(), c.css({ zIndex: 100006, left: b.offset().left, top: b.offset().top + b.outerHeight() + 2 }).on("contextmenu", function () { return e.stopPropagation(), !1 }) } function CloneRecord(a, b, c) { var d = void 0; try { var e = b ? b : a.contextMenuTarget.parent().clone(), f = !1; void 0 != c && 1 != c || (f = !0), a.contextMenuTarget = void 0; var g = a.mainTable.find("thead th"), h = e[0].cells, i = void 0, j = void 0, k = ""; e.removeAttr(_thisGlobals.DataAttr.Cell.RecordGuid).removeClass(_thisGlobals.DefaultGridOptions.rowSelectedCss), e.find("td").each(function () { $(this).removeAttr("id") }); var l = a.activeOptions.ParentEntityInfo.ParentEntitySchemaname, m = new XrmServiceToolkit.Soap.BusinessEntity(l), n = ["transactioncurrencyid", "createdby", "createdon", , "modifiedby", "modifiedon", "ownerid"]; a.activeOptions.ParentChildLookupInfo.Related && (m.attributes[a.activeOptions.ParentChildLookupInfo.LookupSchemaName] = { id: a.activeOptions.ParentChildLookupInfo.Guid, logicalName: a.activeOptions.ParentChildLookupInfo.ParentSchemaName, type: a.activeOptions.ParentChildLookupInfo.Type }); for (var o = 1; o < g.length; o++) { i = $(h[o]); var p = $(g[o]), q = parseInt(p.attr(_thisGlobals.DataAttr.Header.EditorType)), r = p.attr(_thisGlobals.DataAttr.Header.SchemaName); if (k = "", j = void 0, q == DCrmEditableGrid.Editors.None && (q = parseInt(p.attr(_thisGlobals.DataAttr.Header.ReadOnlyEditorType))), !n.ExactMatchExists(r)) if (q == DCrmEditableGrid.Editors.Text || q == DCrmEditableGrid.Editors.Description) k = _thisHelpers.GetActiveCellText(i), k && k.length > 0 && (m.attributes[r] = k, j = k); else if (q == DCrmEditableGrid.Editors.Numeric) k = _thisHelpers.GetActiveCellText(i), k && k.length > 0 && (j = parseInt(_thisHelpers.RemoveNumericFormat(k)), m.attributes[r] = { value: j, type: "int" }); else if (q == DCrmEditableGrid.Editors.Decimal) k = _thisHelpers.GetActiveCellText(i), k && k.length > 0 && (j = parseFloat(_thisHelpers.RemoveNumericFormat(k).replace(_thisGlobals.userCurrencySettings.DecimalSymbol, ".")), m.attributes[r] = { value: j, type: "decimal" }); else if (q == DCrmEditableGrid.Editors.Currency) k = _thisHelpers.GetActiveCellText(i), k && k.length > 0 && (j = parseFloat(_thisHelpers.RemoveNumericFormat(k).replace(_thisGlobals.userCurrencySettings.DecimalSymbol, ".")), m.attributes[r] = { value: j, type: "Money" }); else if (q == DCrmEditableGrid.Editors.DatePicker) k = _thisHelpers.GetActiveCellText(i), k && k.length > 0 && (j = Date.parseDate(k), m.attributes[r] = j); else if (q == DCrmEditableGrid.Editors.DateTimePicker) k = _thisHelpers.GetActiveCellText(i), k && k.length > 0 && (j = Date.parseDate(k), m.attributes[r] = { value: j, type: "dateTime" }); else if (q == DCrmEditableGrid.Editors.Checkbox) k = _thisHelpers.GetActiveCellText(i), k && k.length > 0 && (j = k == a.GridEditors[o].CheckedLabel, m.attributes[r] = { value: j, type: "boolean" }); else if (q == DCrmEditableGrid.Editors.OptionSet) { if (k = _thisHelpers.GetActiveCellText(i), k && k.length > 0) { var s = i.attr(_thisGlobals.DataAttr.Cell.Optionset.SelectedValue); s && (j = parseInt(s)), m.attributes[r] = { value: j, type: "OptionSetValue" } } } else q != DCrmEditableGrid.Editors.Lookup && q != DCrmEditableGrid.Editors.CustomerType || a.activeOptions.ParentChildLookupInfo.LookupSchemaName != r && (k = _thisHelpers.GetActiveCellText(i), k && k.length > 0 && (m.attributes[r] = { id: _thisHelpers.AddCurlyBrace(i.attr(_thisGlobals.DataAttr.Cell.Lookup.Guid)), logicalName: i.attr(_thisGlobals.DataAttr.Cell.Lookup.LogicalName), type: "EntityReference" })) } if (window.parent.DCrmEgGridBeforeCreateNewRecord) { var t = window.parent.DCrmEgGridBeforeCreateNewRecord(m, a.activeOptions.ParentEntityInfo); if (!t) return void _thisHelpers.WaitDialog() } var u = XrmServiceToolkit.Soap.Create(m); e.attr(_thisGlobals.DataAttr.Cell.RecordGuid, u).attr(_thisGlobals.DataAttr.Row.SubGrid.ChildGridOpen, _thisGlobals.DataAttr.NO); for (var o = 0; o < g.length; o++) o > 0 && $(h[o]).attr(_thisGlobals.DataAttr.Cell.RecordGuid, u); a.mainTable.find("tbody:first").append(e); for (var v = a.GetBodyRows(), o = 0; o < v.length; o++) $(v[o]).attr(_thisGlobals.DataAttr.Row.InternalIndex, o); if (a.activeOptions.TotalRecordsCount++, $("#" + a.activeOptions.GridContainerIds.TotalRecords).text(_thisGlobals.Translation_Labels.TotalRecords + " " + a.activeOptions.TotalRecordsCount), a.activeOptions.TotalRecordsCount > a.activeOptions.PagerSize && $("#" + a.activeOptions.GridContainerIds.Pager).show(), window.parent.DCrmEgGridCreateNewRecord) { var w = { NewRecordGuid: u }; window.parent.DCrmEgGridCreateNewRecord(w, a.activeOptions.ParentEntityInfo) } f && (a.activeOptions.RefreshAfterCreate ? a.RefreshGridRows() : a.ResetRowHighlighting()) } catch (a) { d = a.message } d && DisplayCrmAlertDialog("Unable to clone record due to exception:\r" + d) } function CreateInlineRecord(a) { var b = void 0, c = ""; try { "Mobile" == _thisGlobals.xrmPage.context.client.getClient() && (c = ' style="height:30px;"') } catch (a) { } try { for (var d = a.mainTable.find("thead th"), e = $("<tr" + c + "></tr>"), f = void 0, g = void 0, i = 0; i < d.length; i++) if (i > 0) $('<td tabindex="1"></td>').html('<span class="fieldcelltext"></span>').appendTo(e); else { var j = $('<td style="text-align:center"></td>').appendTo(e); !a.activeOptions.ParentFormIsReadOnly && a.activeOptions.UserCanDelete && a.activeOptions.AllowDelete && ($chk = $("<input type='checkbox' />").attr(_thisGlobals.ToolTipAttrName, _thisGlobals.Translation_Labels.SelectRecord).click(function (b) { var c = $(this).parent().parent(); if (c && c.length) if ($(this).is(":checked")) a.activeOptions.selectedRows[a.activeOptions.selectedRows.length] = c[0], $(c[0]).addClass(_thisGlobals.DefaultGridOptions.rowSelectedCss); else { $(c[0]).removeClass(_thisGlobals.DefaultGridOptions.rowSelectedCss); for (var d = a.activeOptions.selectedRows.length - 1; d >= 0; d--) if ($(a.activeOptions.selectedRows[d]).attr(_thisGlobals.DataAttr.Row.InternalIndex) === $(c[0]).attr(_thisGlobals.DataAttr.Row.InternalIndex)) { a.activeOptions.selectedRows.splice(d, 1); break } } b.stopPropagation() }).appendTo(j)), a.activeOptions.HasChildGrids ? $openRec = $("<img></img>").attr("src", _thisGlobals.DefaultGridOptions.ExpandRecordIcon).addClass("firstColOpenImg").attr(_thisGlobals.DataAttr.Row.SubGrid.ChildGridOpen, _thisGlobals.DataAttr.NO).click(function (b) { b.stopPropagation(), $this = $(this); var c = $this.parent().parent(); if ($this.attr(_thisGlobals.DataAttr.Row.SubGrid.ChildGridOpen) == _thisGlobals.DataAttr.NO) { $this.attr(_thisGlobals.DataAttr.Row.SubGrid.ChildGridOpen, _thisGlobals.DataAttr.YES), $this.attr("src", _thisGlobals.DefaultGridOptions.CollapsedRecordIcon); var e = _thisHelpers.GenerateUUID(), f = _thisHelpers.GenerateUUID(), g = $('<tr><td colspan="' + d.length + '"></td></tr>').attr("id", f).attr(_thisGlobals.DataAttr.Row.SubGrid.Id, e).insertAfter($this.parent().parent()); c.attr(_thisGlobals.DataAttr.Row.SubGrid.Row.Id, f), c[0].DSubGridRow = g, $gridParentDiv = $("<div></div>").attr("id", e).addClass("subgridparentdiv").appendTo(g.find("td:first")), c.addClass("bgSelectedSubGridRow"), a.SelectedRecordGuid = c.attr(_thisGlobals.DataAttr.Cell.RecordGuid), _thisHelpers.WaitDialog(!0), ParentGridSelectedRecord(a, $gridParentDiv), a.ResetColResizerHeight() } else { $this.attr(_thisGlobals.DataAttr.Row.SubGrid.ChildGridOpen, _thisGlobals.DataAttr.NO), $this.attr("src", _thisGlobals.DefaultGridOptions.ExpandRecordIcon), c.removeClass("bgSelectedSubGridRow"); var h = c.attr(_thisGlobals.DataAttr.Row.SubGrid.Row.Id); if (h) { if (c[0].DSubGridRow) { var e = c[0].DSubGridRow.attr(_thisGlobals.DataAttr.Row.SubGrid.Id); c[0].DSubGridRow = void 0, a.SelectedRecordGuid = c.attr(_thisGlobals.DataAttr.Cell.RecordGuid), ParentGridSelectedRecord(a, e, !0) } $("#" + h).empty().remove(), c.removeAttr(_thisGlobals.DataAttr.Row.SubGrid.Row.Id), a.ResetColResizerHeight() } } }).appendTo(j) : $openRec = $("<img></img>").attr("src", _thisGlobals.DefaultGridOptions.OpenRecordIcon).attr(_thisGlobals.ToolTipAttrName, _thisGlobals.Translation_Labels.OpenRecord).attr(_thisGlobals.DataAttr.Row.SubGrid.ChildGridOpen, _thisGlobals.DataAttr.NO).click(function (b) { b.stopPropagation(); var c = $(this).parent().parent(); c && c.length > 0 && window.parent.Xrm.Utility.openEntityForm(a.activeOptions.ParentEntityInfo.ParentEntitySchemaname, $(c).attr(_thisGlobals.DataAttr.Cell.RecordGuid)) }).appendTo(j) } f = e[0].cells; var k = a.activeOptions.ParentEntityInfo.ParentEntitySchemaname, l = new XrmServiceToolkit.Soap.BusinessEntity(k), m = ["transactioncurrencyid", "createdby", "createdon", , "modifiedby", "modifiedon", "ownerid"]; a.activeOptions.ParentChildLookupInfo.Related && (l.attributes[a.activeOptions.ParentChildLookupInfo.LookupSchemaName] = { id: a.activeOptions.ParentChildLookupInfo.Guid, logicalName: a.activeOptions.ParentChildLookupInfo.ParentSchemaName, type: a.activeOptions.ParentChildLookupInfo.Type }); for (var n = void 0, o = "", p = { RecordGuid: void 0, Fields: [], RowIndex: -1, InlineCreate: !0 }, i = 1; i < d.length; i++) { g = $(f[i]); var q = $(d[i]), r = parseInt(q.attr(_thisGlobals.DataAttr.Header.EditorType)), s = q.attr(_thisGlobals.DataAttr.Header.SchemaName), t = q.attr(_thisGlobals.DataAttr.Header.Required) == _thisGlobals.DataAttr.YES, u = q.attr(_thisGlobals.DataAttr.Header.DefaultValueForCreate); o = "", n = void 0; var v = {}; if (v.ReadOnly = !1, v.SchemaName = s, v.FieldType = q.attr("data-crmfieldtype"), v.FieldIndex = i, v.BackgroundColor = null, v.ForgroundColor = null, v.Value = void 0, v.FormattedValue = void 0, r == DCrmEditableGrid.Editors.None && (r = parseInt(q.attr(_thisGlobals.DataAttr.Header.ReadOnlyEditorType))), !m.ExactMatchExists(s)) if (r == DCrmEditableGrid.Editors.Text || r == DCrmEditableGrid.Editors.Description) u ? (o = u, l.attributes[s] = o, _thisHelpers.SetActiveCellText(g, o)) : t && (o = _thisHelpers.GetActiveCellText(q) + Math.floor(1e3 * Math.random() + 1), l.attributes[s] = o, _thisHelpers.SetActiveCellText(g, o)), n = o, v.Value = n, v.FormattedValue = o; else if (r == DCrmEditableGrid.Editors.Numeric) u ? (n = parseInt(u), l.attributes[s] = { value: n, type: "int" }, o = _thisHelpers.AddIntegerFormat(u), _thisHelpers.SetActiveCellText(g, o)) : t && (n = 1, l.attributes[s] = { value: 1, type: "int" }, o = _thisHelpers.AddIntegerFormat(n), _thisHelpers.SetActiveCellText(g, o)), v.Value = n, v.FormattedValue = o; else if (r == DCrmEditableGrid.Editors.Decimal) u ? (n = parseFloat(u), l.attributes[s] = { value: n, type: "decimal" }, o = _thisHelpers.AddDecimalFormat(n, a.GridEditors[i].Precision), _thisHelpers.SetActiveCellText(g, o)) : t && (n = 1, l.attributes[s] = { value: n, type: "decimal" }, o = _thisHelpers.AddDecimalFormat(n, a.GridEditors[i].Precision), _thisHelpers.SetActiveCellText(g, o)), v.Value = n, v.FormattedValue = o; else if (r == DCrmEditableGrid.Editors.Currency) u ? (n = parseFloat(u), l.attributes[s] = { value: n, type: "Money" }, o = _thisHelpers.AddCurrencyFormat(n, a.GridEditors[i].Precision, a.activeOptions.EntityCurrencySymbol), _thisHelpers.SetActiveCellText(g, o)) : t && (n = 1, l.attributes[s] = { value: n, type: "Money" }, o = _thisHelpers.AddCurrencyFormat(n, a.GridEditors[i].Precision, a.activeOptions.EntityCurrencySymbol), _thisHelpers.SetActiveCellText(g, o)), v.Value = n, v.FormattedValue = o; else if (r == DCrmEditableGrid.Editors.DatePicker) u ? (n = Date.parseDate(u), l.attributes[s] = n, o = n.dateFormat(_thisGlobals.userDatetimeSettings.DateFormat), _thisHelpers.SetActiveCellText(g, o)) : t && (n = new Date, l.attributes[s] = n, o = n.dateFormat(_thisGlobals.userDatetimeSettings.DateFormat), _thisHelpers.SetActiveCellText(g, o)), v.Value = n, v.FormattedValue = o; else if (r == DCrmEditableGrid.Editors.DateTimePicker) u ? (n = Date.parseDate(u), l.attributes[s] = { value: n, type: "dateTime" }, o = n.dateFormat(_thisGlobals.userDatetimeSettings.DateFormat + " " + _thisGlobals.userDatetimeSettings.TimeFormat), _thisHelpers.SetActiveCellText(g, o)) : t && (n = new Date, l.attributes[s] = { value: n, type: "dateTime" }, o = n.dateFormat(_thisGlobals.userDatetimeSettings.DateFormat + " " + _thisGlobals.userDatetimeSettings.TimeFormat), _thisHelpers.SetActiveCellText(g, o)), v.Value = n, v.FormattedValue = o; else if (r == DCrmEditableGrid.Editors.Checkbox) { if (u) { var w = u.split("{}"); n = "1" == w[1], l.attributes[s] = { value: n, type: "boolean" }, o = w[0], _thisHelpers.SetActiveCellText(g, w[0]) } else t && (n = !0, l.attributes[s] = { value: n, type: "boolean" }, o = a.GridEditors[i].CheckedLabel, _thisHelpers.SetActiveCellText(g, o)); v.Value = n, v.FormattedValue = o } else if (r == DCrmEditableGrid.Editors.OptionSet) { if (u) { var w = u.split("{}"); n = parseInt(w[1]), l.attributes[s] = { value: n, type: "OptionSetValue" }, o = w[0], _thisHelpers.SetActiveCellText(g, w[0]), g.attr(_thisGlobals.DataAttr.Cell.Optionset.SelectedValue, n).attr(_thisGlobals.DataAttr.Cell.OriginalAttrValue, n) } else t && (n = parseInt(a.GridEditors[i].optionsData[0].value), l.attributes[s] = { value: n, type: "OptionSetValue" }, o = a.GridEditors[i].optionsData[0].text, _thisHelpers.SetActiveCellText(g, o), g.attr(_thisGlobals.DataAttr.Cell.Optionset.SelectedValue, n).attr(_thisGlobals.DataAttr.Cell.OriginalAttrValue, n)); v.Value = n, v.FormattedValue = o } else r == DCrmEditableGrid.Editors.Status && LogIt("Detected state or state reason. By passing [" + s + "]"); if (r == DCrmEditableGrid.Editors.Text && a.activeOptions.columneditors[i - 1] && a.activeOptions.columneditors[i - 1].Format && (v.Format = a.activeOptions.columneditors[i - 1].Format, g.attr(_thisGlobals.DataAttr.Cell.Format, v.Format)), r != DCrmEditableGrid.Editors.Numeric && r != DCrmEditableGrid.Editors.Decimal && r != DCrmEditableGrid.Editors.Currency || g.addClass("NumericTextbox"), r == DCrmEditableGrid.Editors.Lookup || r == DCrmEditableGrid.Editors.CustomerType) if (a.activeOptions.ParentChildLookupInfo.LookupSchemaName == s) a.activeOptions.columneditors[i - 1].LookupData.LookupId = l.attributes[s].id || "", a.activeOptions.columneditors[i - 1].LookupData.LookupLogicalName = l.attributes[s].logicalName, g.attr(_thisGlobals.DataAttr.Cell.Lookup.Guid, l.attributes[s].id).attr(_thisGlobals.DataAttr.Cell.Lookup.LogicalName, l.attributes[s].logicalName).attr(_thisGlobals.DataAttr.Cell.OriginalAttrValue, l.attributes[s].id).attr(_thisGlobals.DataAttr.Cell.Lookup.OriginalLogicalName, l.attributes[s].logicalName), a.activeOptions.columneditors[i - 1].LookupData.LookupName = a.activeOptions.ParentChildLookupInfo.PrimaryNameAttributeValue, g = $(e[0].cells[i]), _thisHelpers.SetActiveCellText(g, a.activeOptions.ParentChildLookupInfo.PrimaryNameAttributeValue), v.LookupGuid = l.attributes[s].id, v.LookupLogicalName = l.attributes[s].logicalName, v.LookupName = a.activeOptions.ParentChildLookupInfo.PrimaryNameAttributeValue, v.FormattedValue = v.LookupName, v.Value = v.LookupName; else if (u) { var w = u.split("{}"); l.attributes[s] = { id: "{" + w[1] + "}", logicalName: w[2], type: "EntityReference" }, a.activeOptions.columneditors[i - 1].LookupData.LookupId = l.attributes[s].id || "", a.activeOptions.columneditors[i - 1].LookupData.LookupLogicalName = l.attributes[s].logicalName, g.attr(_thisGlobals.DataAttr.Cell.Lookup.Guid, l.attributes[s].id).attr(_thisGlobals.DataAttr.Cell.Lookup.LogicalName, l.attributes[s].logicalName).attr(_thisGlobals.DataAttr.Cell.OriginalAttrValue, l.attributes[s].id).attr(_thisGlobals.DataAttr.Cell.Lookup.OriginalLogicalName, l.attributes[s].logicalName), a.activeOptions.columneditors[i - 1].LookupData.LookupName = w[0], g = $(e[0].cells[i]), _thisHelpers.SetActiveCellText(g, w[0]), v.LookupGuid = l.attributes[s].id, v.LookupLogicalName = l.attributes[s].logicalName, v.LookupName = w[0], v.FormattedValue = v.LookupName, v.Value = v.LookupName } p.Fields.push(v) } if (window.parent.DCrmEgGridBeforeCreateNewRecord) { var x = window.parent.DCrmEgGridBeforeCreateNewRecord(l, a.activeOptions.ParentEntityInfo); if (!x) return void _thisHelpers.WaitDialog() } var y = XrmServiceToolkit.Soap.Create(l); e.attr(_thisGlobals.DataAttr.Cell.RecordGuid, y).attr(_thisGlobals.DataAttr.Row.SubGrid.ChildGridOpen, _thisGlobals.DataAttr.NO), p.RecordGuid = y, FireGridRowOnload(e, p, a.activeOptions.ParentEntityInfo); for (var i = 0; i < d.length; i++) i > 0 && (g = $(f[i]), g.attr(_thisGlobals.DataAttr.Cell.RecordGuid, y)); a.mainTable.find("tbody:first").append(e); for (var z = a.GetBodyRows(), i = 0; i < z.length; i++) $(z[i]).attr(_thisGlobals.DataAttr.Row.InternalIndex, i); if (a.activeOptions.TotalRecordsCount++, $("#" + a.activeOptions.GridContainerIds.TotalRecords).text(_thisGlobals.Translation_Labels.TotalRecords + " " + a.activeOptions.TotalRecordsCount), a.activeOptions.TotalRecordsCount > a.activeOptions.PagerSize && $("#" + a.activeOptions.GridContainerIds.Pager).show(), window.parent.DCrmEgGridCreateNewRecord) { var A = { NewRecordGuid: y }; window.parent.DCrmEgGridCreateNewRecord(A, a.activeOptions.ParentEntityInfo) } a.activeOptions.RefreshAfterCreate ? a.RefreshGridRows() : a.ResetRowHighlighting() } catch (a) { b = a.message } return b } function EntityStateExists(a) { for (var b = 0; b < _thisGlobals.EntityStates.length; b++) if (_thisGlobals.EntityStates[b].SchemaName == a) return _thisGlobals.EntityStates[b]; return null } function DisplayRecordState(a, b, c, d) { var e = EntityStateExists(a); if (null == e) { var f = XrmServiceToolkit.Soap.RetrieveAttributeMetadata(a, "statecode", !0), g = { SchemaName: a, Status: [], StatusReason: [] }; if (f.length > 0) for (var h = 0; h < f[0].OptionSet.Options.length; h++) g.Status.push({ text: _thisHelpers.GetUserLocalizedLabel(f[0].OptionSet.Options[h].Label), value: f[0].OptionSet.Options[h].Value }); if (f = XrmServiceToolkit.Soap.RetrieveAttributeMetadata(a, "statuscode", !0), f.length > 0) for (var h = 0; h < f[0].OptionSet.Options.length; h++) g.StatusReason.push({ text: _thisHelpers.GetUserLocalizedLabel(f[0].OptionSet.Options[h].Label), value: f[0].OptionSet.Options[h].Value, state: f[0].OptionSet.Options[h].State }); _thisGlobals.EntityStates.push(g), e = g } var i = '<fetch version="1.0" output-format="xml-platform" mapping="logical" distinct="false"><entity name="' + a + '"><attribute name="' + b + '" /><attribute name="statuscode" /><attribute name="statecode" /><filter type="and"><condition attribute="' + b + '" operator="eq" uitype="' + a + '" value="' + _thisHelpers.AddCurlyBrace(c) + '" /></filter></entity></fetch>', j = XrmServiceToolkit.Soap.Fetch(i, !1); if (j && j.length > 0) { var k = j[0].attributes.statecode.value, l = j[0].attributes.statuscode ? j[0].attributes.statuscode.value : -1, m = new $.fn.DCrmEditableGrid.SetEntityState(e, c, k, l, d); m.show().css({ left: 350, top: 100 }) } } function RetrieveEntityOutput(a, b) { var c = null; if (b) { var d = CryptoJS.AES.decrypt(a, _thisGlobals.TargetOutputEncSeed); c = d.toString(CryptoJS.enc.Utf8) } else { var e = CryptoJS.AES.encrypt(a, _thisGlobals.TargetOutputEncSeed); c = e.toString() } return c } function getWebresourceParameter() { var a = void 0; try { if ("" != location.search) for (var b = location.search.substr(1).split("&"), c = 0; c < b.length; c++) if (b[c] = b[c].split("="), "data" == b[c][0].toLowerCase() && "" != b[c][1]) { a = decodeURIComponent(b[c][1]); break } } catch (a) { LogEx("Unable to retrieve Guid of the configuration from data parameter.\r\n" + a.message) } return a } function GetInitialFetch() { _thisGlobals.DCrmConfigurationGuid = getWebresourceParameter(); var a = '<fetch version="1.0" output-format="xml-platform" mapping="logical" distinct="false"><entity name="dcrmeg_dcrmegconfiguration"><attribute name="dcrmeg_dcrmegconfigurationid" /><attribute name="dcrmeg_headerfieldnameshidden" /><attribute name="dcrmeg_fromentityfieldsattrhidden" /><attribute name="dcrmeg_displayfromentityhidden" /><attribute name="dcrmeg_fieldcondition" /><filter type="and"><condition attribute="statecode" operator="eq" value="0" />'; return _thisGlobals.ParentFormEntityName && (a += '<condition attribute="dcrmeg_displayonentityhidden" operator="like" value="' + _thisGlobals.ParentFormEntityName.toLowerCase() + '|%" />'), _thisGlobals.DCrmConfigurationGuid && (a += '<condition attribute="dcrmeg_dcrmegconfigurationid" operator="eq" uitype="dcrmeg_dcrmegconfiguration" value="' + _thisGlobals.DCrmConfigurationGuid + '" />'), a += "</filter></entity></fetch>" } function GetCurrencyFetch(a) { return '<fetch version="1.0" output-format="xml-platform" mapping="logical" distinct="false"><entity name="transactioncurrency"><attribute name="transactioncurrencyid" /><attribute name="currencysymbol" /><attribute name="exchangerate" /><attribute name="currencyprecision" /><filter type="and"><condition attribute="transactioncurrencyid" operator="eq" uitype="transactioncurrency" value="' + a + '" /></filter></entity></fetch>' } function ValidateEditor(a, b) { return !window.parent.ValidateDCrmEgGrid || "function" != typeof window.parent.ValidateDCrmEgGrid || window.parent.ValidateDCrmEgGrid(a, b) } function GetSelectedFields(a) { var b = []; if (a && a.length > 0) { var c = a.split(_thisGlobals._OuterSeperator); $.each(c, function (a, c) { var d = c.split(_thisGlobals._SEPERATOR); 1 != d.length && b.push({ Name: d[0], SchemaName: d[1].toLowerCase(), AttrType: d[2].toLowerCase(), RequieredLevel: d[3], MaxLength: d[4], Format: d[5], MaxValue: d[6], MinValue: d[7], Precision: d[8], RealWidth: d[9], ReadOnly: d[10], LookupTargetEntity: d[11], DefaultValue: 13 == d.length ? d[12] : null }) }) } return b } function GetOptionSet(a, b) { return XrmServiceToolkit.Soap.RetrieveAttributeMetadata(a, b, !0) } function GetAllUserSettings() { for (var a = _thisGlobals.xrmPage.context.getUserId(), b = ["dateformatstring", "dateseparator", "timeformatstring", "timeseparator", "uilanguageid", "defaultcountrycode", "currencysymbol", "numberseparator", "decimalsymbol", "currencydecimalprecision", "numbergroupformat", "currencyformatcode", "negativeformatcode", "negativecurrencyformatcode"], c = "", d = 0; d < b.length; d++) c += '<attribute name="' + b[d] + '" />'; var e = ['<fetch mapping="logical">', '<entity name="usersettings">', c, '<filter type="and">', '<condition attribute="systemuserid" operator="eq" value="', a, '" />', "</filter>", "</entity>", "</fetch>"].join(""); XrmServiceToolkit.Soap.Fetch(e, !1, GetAllUserSettingsCallback) } function GetOrgCurrencySymbol(a) { var b = '<fetch version="1.0" output-format="xml-platform" mapping="logical" distinct="false"><entity name="transactioncurrency"><attribute name="transactioncurrencyid" /><attribute name="currencysymbol" /><attribute name="exchangerate" /><attribute name="currencyprecision" /><order attribute="currencyname" descending="false" /><filter type="and"><condition attribute="transactioncurrencyid" operator="eq" uitype="transactioncurrency" value="' + a + '" /></filter></entity></fetch>', c = XrmServiceToolkit.Soap.Fetch(b, !1); c && c.length && c.length > 0 && c[0].attributes.currencysymbol && (_thisGlobals.userCurrencySettings.CurrencySymbol = c[0].attributes.currencysymbol.value, "$" != _thisGlobals.userCurrencySettings.CurrencySymbol && (_thisGlobals.userCurrencySettings.CurrencySymbolRegEx = _thisGlobals.userCurrencySettings.CurrencySymbol, _thisGlobals.userCurrencySettings.RemoveCurrenyFormatRegEx = "/[" + _thisGlobals.userCurrencySettings.CurrencySymbolRegEx + _thisGlobals.userCurrencySettings.NumberSeparator + "()-]/g")) } function GetAllUserSettingsCallback(a) { var b = a[0]; _thisGlobals.userDatetimeSettings = { DateSeparator: b.attributes.dateseparator.value, DateFormat: b.attributes.dateformatstring.value.replace(/[\/\/]/g, b.attributes.dateseparator.value), TimeFormat: b.attributes.timeformatstring.value.replace(":", b.attributes.timeseparator.value), TimeSeparator: b.attributes.timeseparator.value, DateTimeFormat: "" }, _thisGlobals.userDatetimeSettings.DateTimeFormat = _thisGlobals.userDatetimeSettings.DateFormat + " " + _thisGlobals.userDatetimeSettings.TimeFormat, _thisGlobals.userCurrencySettings = { DefaultCountryCode: b.attributes.defaultcountrycode ? b.attributes.defaultcountrycode.value : void 0, LanguageId: b.attributes.uilanguageid.value, CurrencySymbol: b.attributes.currencysymbol.value, CurrencySymbolRegEx: b.attributes.currencysymbol.value, RemoveCurrenyFormatRegEx: "", CurrencySymbolCharCode: 0, NumberSeparator: b.attributes.numberseparator.value, NumberSeparatorCharCode: 0, DecimalSymbol: b.attributes.decimalsymbol.value, DecimalSymbolCharCode: 0, CurrencyDecimalPrecision: parseInt(b.attributes.currencydecimalprecision.value + ""), NumberGroupFormat: parseInt(b.attributes.numbergroupformat.value + ""), CurrencyFormatCode: b.attributes.currencyformatcode ? b.attributes.currencyformatcode.value : void 0, NegativeCurrencyFormatCode: b.attributes.negativecurrencyformatcode ? b.attributes.negativecurrencyformatcode.value : void 0, NegativeNumberFormatCode: b.attributes.negativeformatcode ? b.attributes.negativeformatcode.value : void 0 }, "$" == _thisGlobals.userCurrencySettings.CurrencySymbol && (_thisGlobals.userCurrencySettings.CurrencySymbolRegEx = "\\" + _thisGlobals.userCurrencySettings.CurrencySymbol), _thisGlobals.userCurrencySettings.RemoveCurrenyFormatRegEx = "/[" + _thisGlobals.userCurrencySettings.CurrencySymbolRegEx + _thisGlobals.userCurrencySettings.NumberSeparator + "()-]/g", _thisGlobals.userCurrencySettings.CurrencySymbolCharCode = _thisGlobals.userCurrencySettings.CurrencySymbol.charCodeAt(0), _thisGlobals.userCurrencySettings.NumberSeparatorCharCode = _thisGlobals.userCurrencySettings.NumberSeparator.charCodeAt(0), _thisGlobals.userCurrencySettings.DecimalSymbolCharCode = _thisGlobals.userCurrencySettings.DecimalSymbol.charCodeAt(0); var c = new Date, d = c.dateFormat(_thisGlobals.userDatetimeSettings.DateFormat); $("#fieldfilter_calendarinput").val(d), $("#fieldfilter_calendarinput").datetimepicker({ timepicker: !1, inline: !0, format: _thisGlobals.userDatetimeSettings.DateFormat, formatDate: _thisGlobals.userDatetimeSettings.DateFormat, formatTime: _thisGlobals.userDatetimeSettings.TimeFormat }), $("#fieldfilter_inputcontainer").find(".xdsoft_datetimepicker").addClass("hidefilters"), _thisGlobals.Select2Option = $("#fieldfilter_optionsetselect").select2({ minimumResultsForSearch: 1 / 0 }), GetTranslationsFor(_thisGlobals.xrmPage.context.getUserLcid()) } function GetTranslationsFor(a) { var b = '<fetch version="1.0" output-format="xml-platform" mapping="logical" distinct="false"><entity name="dcrmeg_dcrmegtranslation"><attribute name="dcrmeg_dcrmegtranslationid" /><attribute name="dcrmeg_name" /><attribute name="dcrmeg_lcid" /><attribute name="dcrmeg_totalrecords" /><attribute name="dcrmeg_copyvaluetoclipboard" /><attribute name="dcrmeg_openrecordinnewwindow" /><attribute name="dcrmeg_openlookuprecordinnewwindow" /><attribute name="dcrmeg_clearvlaue" /><attribute name="dcrmeg_ok" /><attribute name="dcrmeg_cancel" /><attribute name="dcrmeg_sum" /><attribute name="dcrmeg_selectrecord" /><attribute name="dcrmeg_selectallrecords" /><attribute name="dcrmeg_undochanges" /><attribute name="dcrmeg_undoallchanges" /><attribute name="dcrmeg_newrecord" /><attribute name="dcrmeg_deleteselectedrecords" /><attribute name="dcrmeg_savechanges" /><attribute name="dcrmeg_activateeditorondoubleclick" /><attribute name="dcrmeg_entertexttosearch" /><attribute name="dcrmeg_gotofirst" /><attribute name="dcrmeg_gotonext" /><attribute name="dcrmeg_gotoprevious" /><attribute name="dcrmeg_gotolast" /><attribute name="dcrmeg_pagesize" /><attribute name="dcrmeg_lockedfield" /><attribute name="dcrmeg_requiredfield" /><attribute name="dcrmeg_incorrectformat" /><attribute name="dcrmeg_readonly" /><attribute name="dcrmeg_openrecord" /><attribute name="dcrmeg_maxvalue" /><attribute name="dcrmeg_minvalue" /><attribute name="dcrmeg_notavalidentry" /><attribute name="dcrmeg_lookupmorerecords" /><attribute name="dcrmeg_openurlinnewwindow" /><order attribute="dcrmeg_name" descending="false" /><filter type="and"><condition attribute="dcrmeg_lcid" operator="eq" value="' + a + '" /></filter></entity></fetch>'; XrmServiceToolkit.Soap.Fetch(b, !1, GetTranslationsForCallback) } function GetTranslationsForCallback(a) {
    if (_thisGlobals.Translation_Labels.AutoSaveOn = "Auto Save On", _thisGlobals.Translation_Labels.AutoSaveOff = "Auto Save Off", _thisGlobals.Translation_Labels.RefreshGrid = "Refresh", a.length > 0) {
        $("#validationerror").text(a[0].attributes.dcrmeg_requiredfield ? a[0].attributes.dcrmeg_requiredfield.value : ""), $("#inputformaterror").text(a[0].attributes.dcrmeg_incorrectformat ? a[0].attributes.dcrmeg_incorrectformat.value : ""), _thisGlobals.Translation_Labels.TotalRecords = a[0].attributes.dcrmeg_totalrecords ? a[0].attributes.dcrmeg_totalrecords.value : "", _thisGlobals.Translation_Labels.CopyValueToClipboard = a[0].attributes.dcrmeg_copyvaluetoclipboard ? a[0].attributes.dcrmeg_copyvaluetoclipboard.value : "", _thisGlobals.Translation_Labels.OpenRecordInNewWindow = a[0].attributes.dcrmeg_openrecordinnewwindow ? a[0].attributes.dcrmeg_openrecordinnewwindow.value : "", _thisGlobals.Translation_Labels.OpenLookupInNewWindow = a[0].attributes.dcrmeg_openlookuprecordinnewwindow ? a[0].attributes.dcrmeg_openlookuprecordinnewwindow.value : "", _thisGlobals.Translation_Labels.ClearValue = a[0].attributes.dcrmeg_clearvlaue ? a[0].attributes.dcrmeg_clearvlaue.value : "", _thisGlobals.Translation_Labels.Ok = a[0].attributes.dcrmeg_ok ? a[0].attributes.dcrmeg_ok.value : "", _thisGlobals.Translation_Labels.Cancel = a[0].attributes.dcrmeg_cancel ? a[0].attributes.dcrmeg_cancel.value : "", _thisGlobals.Translation_Labels.Sum = a[0].attributes.dcrmeg_sum ? a[0].attributes.dcrmeg_sum.value : "", _thisGlobals.Translation_Labels.SelectRecord = a[0].attributes.dcrmeg_selectrecord ? a[0].attributes.dcrmeg_selectrecord.value : "", _thisGlobals.Translation_Labels.SelectAllRecords = a[0].attributes.dcrmeg_selectallrecords ? a[0].attributes.dcrmeg_selectallrecords.value : "", _thisGlobals.Translation_Labels.UndoChanges = a[0].attributes.dcrmeg_undochanges ? a[0].attributes.dcrmeg_undochanges.value : "", _thisGlobals.Translation_Labels.UndoAllChanges = a[0].attributes.dcrmeg_undoallchanges ? a[0].attributes.dcrmeg_undoallchanges.value : "", _thisGlobals.Translation_Labels.NewRecord = a[0].attributes.dcrmeg_newrecord ? a[0].attributes.dcrmeg_newrecord.value : "", _thisGlobals.Translation_Labels.DeleteSelectedRecord = a[0].attributes.dcrmeg_deleteselectedrecords ? a[0].attributes.dcrmeg_deleteselectedrecords.value : "", _thisGlobals.Translation_Labels.SaveChanges = a[0].attributes.dcrmeg_savechanges ? a[0].attributes.dcrmeg_savechanges.value : "", _thisGlobals.Translation_Labels.ActivateEditorOnDBClick = a[0].attributes.dcrmeg_activateeditorondoubleclick ? a[0].attributes.dcrmeg_activateeditorondoubleclick.value : "", _thisGlobals.Translation_Labels.EnterTextToSearch = a[0].attributes.dcrmeg_entertexttosearch ? a[0].attributes.dcrmeg_entertexttosearch.value : "", _thisGlobals.Translation_Labels.GoToFirst = a[0].attributes.dcrmeg_gotofirst ? a[0].attributes.dcrmeg_gotofirst.value : "", _thisGlobals.Translation_Labels.GoToNext = a[0].attributes.dcrmeg_gotonext ? a[0].attributes.dcrmeg_gotonext.value : "", _thisGlobals.Translation_Labels.GoToPrevious = a[0].attributes.dcrmeg_gotoprevious ? a[0].attributes.dcrmeg_gotoprevious.value : "", _thisGlobals.Translation_Labels.GoToLast = a[0].attributes.dcrmeg_gotolast ? a[0].attributes.dcrmeg_gotolast.value : "", _thisGlobals.Translation_Labels.PageSize = a[0].attributes.dcrmeg_pagesize ? a[0].attributes.dcrmeg_pagesize.value : "", _thisGlobals.Translation_Labels.LockedField = a[0].attributes.dcrmeg_lockedfield ? a[0].attributes.dcrmeg_lockedfield.value : "",
        _thisGlobals.Translation_Labels.ReadOnly = a[0].attributes.dcrmeg_readonly ? a[0].attributes.dcrmeg_readonly.value : "", _thisGlobals.Translation_Labels.OpenRecord = a[0].attributes.dcrmeg_openrecord ? a[0].attributes.dcrmeg_openrecord.value : "", _thisGlobals.Translation_Labels.IncorrectFormat = a[0].attributes.dcrmeg_incorrectformat ? a[0].attributes.dcrmeg_incorrectformat.value : "", _thisGlobals.Translation_Labels.MaxValue = a[0].attributes.dcrmeg_maxvalue ? a[0].attributes.dcrmeg_maxvalue.value : "", _thisGlobals.Translation_Labels.MinValue = a[0].attributes.dcrmeg_minvalue ? a[0].attributes.dcrmeg_minvalue.value : "", _thisGlobals.Translation_Labels.NotaValidEntry = a[0].attributes.dcrmeg_notavalidentry ? a[0].attributes.dcrmeg_notavalidentry.value : "", _thisGlobals.Translation_Labels.OpenUrlInNewWindow = a[0].attributes.dcrmeg_openurlinnewwindow ? a[0].attributes.dcrmeg_openurlinnewwindow.value : "", _thisGlobals.Translation_Labels.Export = "Export"
    } else _thisGlobals.Translation_Labels.TotalRecords = "Total records", _thisGlobals.Translation_Labels.CopyValueToClipboard = "Copy value to clipboard", _thisGlobals.Translation_Labels.OpenRecordInNewWindow = "Open record in new window", _thisGlobals.Translation_Labels.OpenLookupInNewWindow = "Open lookup record in new window", _thisGlobals.Translation_Labels.ClearValue = "Clear value", _thisGlobals.Translation_Labels.Ok = "Ok", _thisGlobals.Translation_Labels.Cancel = "Cancel", _thisGlobals.Translation_Labels.Sum = "Aggregate", _thisGlobals.Translation_Labels.SelectRecord = "Select record", _thisGlobals.Translation_Labels.SelectAllRecords = "Select all records", _thisGlobals.Translation_Labels.UndoChanges = "Undo changes", _thisGlobals.Translation_Labels.UndoAllChanges = "Undo all changes", _thisGlobals.Translation_Labels.NewRecord = "New record", _thisGlobals.Translation_Labels.DeleteSelectedRecord = "Delete selected record(s)", _thisGlobals.Translation_Labels.SaveChanges = "Save changes", _thisGlobals.Translation_Labels.ActivateEditorOnDBClick = "Activate editors on double click", _thisGlobals.Translation_Labels.EnterTextToSearch = "Enter text to search", _thisGlobals.Translation_Labels.GoToFirst = "Go to first", _thisGlobals.Translation_Labels.GoToNext = "Go to next", _thisGlobals.Translation_Labels.GoToPrevious = "Go to previous", _thisGlobals.Translation_Labels.GoToLast = "Go to last", _thisGlobals.Translation_Labels.PageSize = "Page size", _thisGlobals.Translation_Labels.LockedField = "Requiered field", _thisGlobals.Translation_Labels.ReadOnly = "Read-only", _thisGlobals.Translation_Labels.OpenRecord = "Open record", _thisGlobals.Translation_Labels.IncorrectFormat = "Incorrect format", _thisGlobals.Translation_Labels.MaxValue = "Max value", _thisGlobals.Translation_Labels.MinValue = "Min value", _thisGlobals.Translation_Labels.NotaValidEntry = "Not a valid entry", _thisGlobals.Translation_Labels.LookupMoreRecords = "Lookup more records", _thisGlobals.Translation_Labels.OpenUrlInNewWindow = "Open URL in new window", _thisGlobals.Translation_Labels.Export = "Export"; 1 != _thisGlobals.ParentFieldsFormType ? XrmServiceToolkit.Soap.Fetch(GetInitialFetch(), !1, LoadDCrmEGConfigurationCallback) : _thisHelpers.WaitDialog()
} function CreateGridContainers(a, b) { var c = {}; c.ParentGridDivContainer = b.attr("id"), c.TableCaptionContainer = _thisHelpers.GenerateUUID(); var d = $("<div></div>").addClass("section group").attr("id", c.TableCaptionContainer).appendTo(b), e = $('<div class="col"></div').appendTo(d), f = $('<div class="col"></div').appendTo(d), g = $('<div class="floatright"></div').appendTo(d); c.TableCaption = _thisHelpers.GenerateUUID(), $("<span></span>").text(a.GridTitle + " -").attr("id", c.TableCaption).addClass("TableCaption").appendTo(e), c.TotalRecords = _thisHelpers.GenerateUUID(), $("<span></span>").addClass("pageTotal").attr("id", c.TotalRecords).appendTo(e), c.GridToolbar = _thisHelpers.GenerateUUID(); var h = $("<div></div>").addClass("toolbarButtonsContainer colLeftBorder").attr("id", c.GridToolbar).appendTo(f); c.AddNewRec = _thisHelpers.GenerateUUID(), $tmpBtn = $("<button></button>").attr("id", c.AddNewRec).attr(_thisGlobals.ToolTipAttrName, _thisGlobals.Translation_Labels.NewRecord + " " + a.Entity.Label).addClass("ToolarButton ToolbarAdd").appendTo(h), !_thisGlobals.FormIsReadOnly && a.AllowCreateNew || $tmpBtn.hide(), c.DeleteRec = _thisHelpers.GenerateUUID(), $tmpBtn = $("<button></button>").attr("id", c.DeleteRec).attr(_thisGlobals.ToolTipAttrName, _thisGlobals.Translation_Labels.DeleteSelectedRecord).addClass("ToolarButton ToolbarDel").appendTo(h), !_thisGlobals.FormIsReadOnly && a.AllowDelete || $tmpBtn.hide(), c.SaveChanges = _thisHelpers.GenerateUUID(), $tmpBtn = $("<button></button>").attr("id", c.SaveChanges).attr(_thisGlobals.ToolTipAttrName, _thisGlobals.Translation_Labels.SaveChanges).addClass("ToolarButton ToolbarSave").appendTo(h), (_thisGlobals.FormIsReadOnly || a.AutoSaveChanges) && $tmpBtn.hide(), c.UndoChanges = _thisHelpers.GenerateUUID(), $tmpBtn = $("<button></button>").attr("id", c.UndoChanges).attr(_thisGlobals.ToolTipAttrName, _thisGlobals.Translation_Labels.UndoChanges).addClass("ToolarButton ToolbarUndo").appendTo(h), (_thisGlobals.FormIsReadOnly || a.AutoSaveChanges) && $tmpBtn.hide(), c.CancelAllChanges = _thisHelpers.GenerateUUID(), $tmpBtn = $("<button></button>").attr("id", c.CancelAllChanges).attr(_thisGlobals.ToolTipAttrName, _thisGlobals.Translation_Labels.UndoAllChanges).addClass("ToolarButton ToolbarUndoAll").appendTo(h), (_thisGlobals.FormIsReadOnly || a.AutoSaveChanges) && $tmpBtn.hide(), c.ExportToExcel = _thisHelpers.GenerateUUID(), $tmpBtn = $("<button></button>").attr("id", c.ExportToExcel).attr(_thisGlobals.ToolTipAttrName, _thisGlobals.Translation_Labels.Export).addClass("ToolarButton ToolbarToExcel").appendTo(h), a.DisplayExportButton || $tmpBtn.hide(), c.ClearAllFilters = _thisHelpers.GenerateUUID(), $tmpBtn = $("<button></button>").attr("id", c.ClearAllFilters).attr(_thisGlobals.ToolTipAttrName, "Clear all filters").addClass("ToolarButton ToolbarClearAllFilters").appendTo(h), a.DisplayClearFilterButton || $tmpBtn.hide(), c.RefreshGrid = _thisHelpers.GenerateUUID(), $("<button></button>").attr("id", c.RefreshGrid).attr(_thisGlobals.ToolTipAttrName, _thisGlobals.Translation_Labels.RefreshGrid).addClass("ToolarButton ToolbarRefresh").appendTo(h), c.CloneRecord = _thisHelpers.GenerateUUID(), $tmpBtn = $("<button></button>").attr("id", c.CloneRecord).attr(_thisGlobals.ToolTipAttrName, "Clone selected record").addClass("ToolarButton ToolbarCloneRecord").appendTo(h), a.DisplayCloneRecordButton || $tmpBtn.hide(); var i = $('<div class="switch"></div>').appendTo(h); c.AutoSave = _thisHelpers.GenerateUUID(), a.AutoSaveChanges ? $tmpBtn = $('<input type="checkbox" checked="checked" />').attr("id", c.AutoSave).addClass("cmn-toggle cmn-toggle-yes-no").appendTo(i) : $tmpBtn = $('<input type="checkbox" />').attr("id", c.AutoSave).addClass("cmn-toggle cmn-toggle-yes-no").appendTo(i), (_thisGlobals.FormIsReadOnly || a.HideAutosaveButton) && $tmpBtn.hide(), $tmpBtn = $("<label></label>").attr("for", c.AutoSave).attr("data-on", _thisGlobals.Translation_Labels.AutoSaveOn).attr("data-off", _thisGlobals.Translation_Labels.AutoSaveOff).appendTo(i), (_thisGlobals.FormIsReadOnly || a.HideAutosaveButton) && $tmpBtn.hide(), c.SearchGridBox = _thisHelpers.GenerateUUID(), $('<input type="text" />').attr("id", c.SearchGridBox).attr("placeholder", _thisGlobals.Translation_Labels.EnterTextToSearch).addClass("searchgridtextbox").appendTo(g).hide(), c.Pager = _thisHelpers.GenerateUUID(); var j = $("<div></div>").addClass("pager").attr("id", c.Pager).appendTo(g); _thisGlobals.FormIsReadOnly && j.addClass("pagerDisabled"), c.PagerButtonFirst = _thisHelpers.GenerateUUID(), c.PagerButtonPrev = _thisHelpers.GenerateUUID(), c.PagerLabel = _thisHelpers.GenerateUUID(), c.PagerButtonNext = _thisHelpers.GenerateUUID(), $("<button></button>").attr("id", c.PagerButtonFirst).attr(_thisGlobals.ToolTipAttrName, _thisGlobals.Translation_Labels.GoToFirst).addClass("PagerButton ToolbarGoToFirst").appendTo(j), $("<button></button>").attr("id", c.PagerButtonPrev).attr(_thisGlobals.ToolTipAttrName, _thisGlobals.Translation_Labels.GoToPrevious).addClass("PagerButton ToolbarGoToPrev").appendTo(j), $("<span></span>").attr("id", c.PagerLabel).addClass("pagedisplay").appendTo(j), $("<button></button>").attr("id", c.PagerButtonNext).attr(_thisGlobals.ToolTipAttrName, _thisGlobals.Translation_Labels.GoToNext).addClass("PagerButton ToolbarGoToNext").appendTo(j), c.Table = _thisHelpers.GenerateUUID(); $('<table class="pure-table tablesorter"><thead><tr></tr></thead><tbody></tbody><tfoot><tr></tr></tfoot></table>').attr("id", c.Table).attr("data-item-schema", a.Entity.SchemaName).attr("data-item-entityname", a.Entity.Label).appendTo(b); return c } function RetrieveUserPrivileges(a) { try { var b = ""; b += '      <request i:type="b:RetrieveUserPrivilegesRequest" xmlns:a="http://schemas.microsoft.com/xrm/2011/Contracts" xmlns:b="http://schemas.microsoft.com/crm/2011/Contracts">', b += '        <a:Parameters xmlns:c="http://schemas.datacontract.org/2004/07/System.Collections.Generic">', b += "          <a:KeyValuePairOfstringanyType>", b += "            <c:key>UserId</c:key>", b += '            <c:value i:type="d:guid" xmlns:d="http://schemas.microsoft.com/2003/10/Serialization/">' + _thisGlobals.LoggedInUserID + "</c:value>", b += "          </a:KeyValuePairOfstringanyType>", b += "        </a:Parameters>", b += '        <a:RequestId i:nil="true" />', b += "        <a:RequestName>RetrieveUserPrivileges</a:RequestName>", b += "      </request>"; var c = fncLookupValueFromEntity("privilege", "name", a, "", "", "privilegeid"), d = !1; if (null != c) { var e = XrmServiceToolkit.Soap.Execute(b); $(e).find("b\\:RolePrivilege").length > 0 ? (c = c.toLowerCase(), $(e).find("b\\:RolePrivilege").each(function () { $(this).find("b\\:PrivilegeId").each(function () { var a = $(this).text(); a.toString().toLowerCase() == c && (d = !0) }) })) : $(e).find("RolePrivilege").length > 0 && (c = c.toLowerCase(), $(e).find("RolePrivilege").each(function () { $(this).find("PrivilegeId").each(function () { var a = $(this).text(); a.toString().toLowerCase() == c && (d = !0) }) })) } else d = !0; return d } catch (a) { LogIt("Exception retreiving privilages" + a.message) } } function fncLookupValueFromEntity(a, b, c, d, e, f) { var g = ""; "" != d && (g = "<condition attribute='" + d + "' value='" + e + "' operator='eq'/>"); var h = "<fetch distinct='false' mapping='logical' output-format='xml-platform' version='1.0'><entity name='" + a + "'><attribute name='" + f + "'/><filter type='and'><condition attribute='" + b + "' value='" + c + "' operator='eq'/>" + g + "</filter></entity></fetch>"; return a = XrmServiceToolkit.Soap.Fetch(h), a.length > 0 && null != a[0].attributes[f] ? a[0].attributes[f].value : null } function InitializeSetupRoutines() { window.frameElement && $(window.frameElement).css("width", "100%"), xrmPage = window.parent.Xrm.Page, _thisGlobals.xrmPage.ui && (_thisGlobals.ParentFieldsFormType = _thisGlobals.xrmPage.ui.getFormType(), _thisGlobals.FormIsReadOnly = 3 == _thisGlobals.ParentFieldsFormType || 4 == _thisGlobals.ParentFieldsFormType), _thisGlobals.xrmPage.data && _thisGlobals.xrmPage.data.entity && (_thisGlobals.ParentFormEntityName = _thisGlobals.xrmPage.data.entity.getEntityName(), _thisGlobals.ParentFormEntityId = _thisGlobals.xrmPage.data.entity.getId(), _thisGlobals.ParentPrimaryAttributeValue = _thisGlobals.xrmPage.data.entity.getPrimaryAttributeValue()), $("#fieldfilter_btncancel").on("click", function (a) { a.stopPropagation(); var b = $(this).attr("data-linkentity-filterid"); return b && ($("#" + b).remove(), $(this).removeAttr("data-linkentity-filterid")), $("#fieldfilter_content").hide(), !1 }), $("#fieldfilter_btnremovefilter").on("click", function (a) { a.stopPropagation(); var b = $("#fieldfilter_content"), c = b.attr(_thisGlobals.DataAttr.Header.SchemaName), d = b.attr("data-field-schemaname"), e = FindDCrmEGConfigurationBySchema(c); e.ClearInlineFilters(d); var f = new Date, g = f.dateFormat(_thisGlobals.userDatetimeSettings.DateFormat); $("#fieldfilter_calendarinput").val(g), $("#fieldfilter_calendarinput").datetimepicker("reset"); var h = b.attr("data-filterimg-id"); return $("#" + h).removeClass("recfilterset").addClass("recfilternotset"), b.hide(), e.ThisGrid.RefreshGridRows(), !1 }), $("#fieldfilter_btnok").on("click", function (a) { a.stopPropagation(); var b = $(this).attr("data-linkentity-filterid"); b && ($("#" + b).remove(), $(this).removeAttr("data-linkentity-filterid")); var c = $("#fieldfilter_content"), d = c.attr(_thisGlobals.DataAttr.Header.SchemaName), e = c.attr("data-field-schemaname"), f = parseInt(c.attr(_thisGlobals.DataAttr.Header.EditorType)), h = (c.attr("data-col-index"), c.attr("data-filterimg-id")), i = c.attr("data-fetchop"), j = c.attr("data-fetchval"), k = c.attr("data-selected-filter"), l = $(c.attr("data-input-id")).val(), m = c.attr("data-uitypes"), n = FindDCrmEGConfigurationBySchema(d), o = null; if (f == DCrmEditableGrid.Editors.Lookup && (l = _thisGlobals.FilterLookupCtr.$input.val(), o = _thisGlobals.FilterLookupCtr.LookupCtrData.LookupId, m = _thisGlobals.FilterLookupCtr.LookupCtrData.LookupLogicalName), f != DCrmEditableGrid.Editors.OptionSet && f != DCrmEditableGrid.Editors.Checkbox && f != DCrmEditableGrid.Editors.Status || (l = _thisGlobals.Select2Option.find("option:selected")), f == DCrmEditableGrid.Editors.DatePicker || f == DCrmEditableGrid.Editors.DateTimePicker) if ($("#fieldfilter_extrainput").hasClass("hidefilters")) { if (void 0 == l || "undefined" == l || 0 == l.length) { var p = new Date; l = p.dateFormat(_thisGlobals.userDatetimeSettings.DateFormat) } } else if (l = $("#fieldfilter_extrainput").val(), !$.isNumeric(l)) return DisplayCrmAlertDialog("You must provide a number."), !1; if ((f == DCrmEditableGrid.Editors.Currency || f == DCrmEditableGrid.Editors.Numeric || f == DCrmEditableGrid.Editors.Decimal) && void 0 != l && "undefined" != l && l.length > 0 && !$.isNumeric(l.replace(_thisGlobals.userCurrencySettings.DecimalSymbol, "."))) return DisplayCrmAlertDialog("You must provide a number."), !1; var q = null, r = '<condition attribute="' + e + '" operator="'; if (void 0 != j && "undefined" != j ? (f != DCrmEditableGrid.Editors.OptionSet && f != DCrmEditableGrid.Editors.Checkbox || (l = $("#fieldfilter_extrainput").val(), r = '<condition attribute="' + e + 'name" operator="'), f == DCrmEditableGrid.Editors.Lookup && (r = '<condition attribute="' + e + 'name" operator="'), q = j.replace("{0}", l)) : q = l, (void 0 != j && "undefined" != j || "eq" == k || "ne" == k || k.startsWith("next-x") || k.startsWith("last-x") || "olderthan-x-months" == k) && (void 0 == l || "undefined" == l || 0 == l.length)) return DisplayCrmAlertDialog("You must provide a value."), !1; if ($("#" + h).removeClass("recfilternotset").addClass("recfilterset"), r += "null" == k || "not-null" == k || "eq" == k || void 0 == i || "undefined" == i ? k + '"' : i + '"', "null" != k && "not-null" != k) if (f == DCrmEditableGrid.Editors.Lookup) if (q.contains(";")) { var s = q.split(";"), t = m.split(";"), u = o.split(";"); r = '<condition attribute="' + e + '" operator="' + ("eq" == i ? "in" : "not-in") + '">'; for (var v = 0; v < s.length; v++) r += '<value uiname="' + s[v] + '" uitype="' + t[v] + '">' + _thisHelpers.AddCurlyBrace(u[v]) + "</value>"; r += "</condition>" } else r += void 0 != o && "undefined" != o ? ' uitype="' + m + '" value="' + _thisHelpers.AddCurlyBrace(o) + '"' : ' uitype="' + m + '" value="' + q + '"'; else if (f == DCrmEditableGrid.Editors.OptionSet || f == DCrmEditableGrid.Editors.Checkbox || f == DCrmEditableGrid.Editors.Status) if ("[object Object]" == Object.prototype.toString.call(q)) if (q.length > 1) { l = "", r = '<condition attribute="' + e + '" operator="' + ("eq" == i ? "in" : "not-in") + '">'; for (var v = 0; v < q.length; v++) { var w = $(q[v]).attr("id"); l += (v > 0 ? ";" : "") + w, r += "<value>" + w + "</value>" } r += "</condition>" } else l = $(q[0]).attr("id"), r += ' value="' + l + '"'; else r += ' value="' + q + '"'; else f == DCrmEditableGrid.Editors.DatePicker || f == DCrmEditableGrid.Editors.DateTimePicker ? r += ' value="' + q + '"' : f == DCrmEditableGrid.Editors.Currency || f == DCrmEditableGrid.Editors.Numeric || f == DCrmEditableGrid.Editors.Decimal ? (l = q.replace(_thisGlobals.userCurrencySettings.DecimalSymbol, "."), r += ' value="' + l + '"') : q && q.length > 0 && (r += ' value="' + q + '"'); else f != DCrmEditableGrid.Editors.OptionSet && f != DCrmEditableGrid.Editors.Checkbox && f != DCrmEditableGrid.Editors.Status || (l = null); return r += " />", n.SetFetchXmlFiltered(e, r, k, l, i ? i : null, j ? j : null, o, m), c.hide(), n.ThisGrid.RefreshGridRows(), !1 }), _thisGlobals.FilterLookupCtr = new $.fn.DCrmEditableGrid.FilterLookup, _thisHelpers.WaitDialog(!0), GetAllUserSettings() } function SaveGridAsExcel(a) { var b = void 0 !== window.FileReader && void 0 !== window.JSZip && !_isSafari(); LogIt("isAvailable " + b); var c = a.mainTable.find("thead").find("tr:first").find("th"), d = a.GetBodyRows(); if (0 != d.length) { for (var e = addRow(c), f = 0, g = d.length; f < g; f++) e += addRow($(d[f]).find("td")); var h = new window.JSZip, i = h.folder("_rels"), j = h.folder("xl"), k = h.folder("xl/_rels"), l = h.folder("xl/worksheets"); h.file("[Content_Types].xml", _thisGlobals.excelStrings["[Content_Types].xml"]), i.file(".rels", _thisGlobals.excelStrings["_rels/.rels"]), j.file("workbook.xml", _thisGlobals.excelStrings["xl/workbook.xml"]), k.file("workbook.xml.rels", _thisGlobals.excelStrings["xl/_rels/workbook.xml.rels"]), l.file("sheet1.xml", _thisGlobals.excelStrings["xl/worksheets/sheet1.xml"].replace("__DATA__", e)), _saveAs(h.generate({ type: "blob" }), "Exported Grid.xlsx") } } function SaveGridAsCsv(a) { var b = void 0 !== window.FileReader && window.Blob; LogIt("isAvailable " + b); var c = {}; c.header = [], c.body = []; var d = a.mainTable.find("thead").find("tr:first").find("th"), e = a.GetBodyRows(); if (0 != e.length) { for (var g = (d.length, 1), h = d.length; g < h; g++) c.header.push(_thisHelpers.GetHeaderCellText($(d[g]))); for (var i = [], j = "", g = 0, h = e.length; g < h; g++) { for (var k = $(e[g]).find("td"), l = 1; l < k.length; l++) j = _thisHelpers.GetActiveCellText($(k[l])), j.length > 0 && (j = j.replace(/^\s+|\s+$/g, "").replace(/\n/g, " ")), i.push(j); c.body[g] = i, i = [] } var m = { filename: "*", extension: ".csv", fieldSeparator: ",", fieldBoundary: '"', escapeChar: '"', charset: null, header: !0, footer: !1 }, o = (_newLine(m), _exportData(c, m).str), p = document.characterSet || document.charset; p !== !1 ? (p || (p = document.characterSet || document.charset), p && (p = ";charset=" + p)) : p = "", _saveAs(new Blob([o], { type: "text/csv" + p }), "Exported Grid.csv") } } function SaveGridAsPdf(a) { var b = void 0 !== window.FileReader && window.pdfMake; LogIt("isAvailable " + b); var c = {}; c.header = [], c.body = []; var d = a.mainTable.find("thead").find("tr:first").find("th"), e = a.GetBodyRows(); if (0 != e.length) { for (var g = (d.length, 1), h = d.length; g < h; g++) c.header.push(_thisHelpers.GetHeaderCellText($(d[g]))); for (var i = [], j = "", g = 0, h = e.length; g < h; g++) { for (var k = $(e[g]).find("td"), l = 1; l < k.length; l++) j = _thisHelpers.GetActiveCellText($(k[l])), j.length > 0 && (j = j.replace(/^\s+|\s+$/g, "").replace(/\n/g, " ")), i.push(j); c.body[g] = i, i = [] } var m = { title: "*", filename: "*", extension: ".pdf", orientation: "portrait", pageSize: "A4", header: !0, footer: !1, message: null, customize: null, download: "download" }, e = (_newLine(m), []); m.header && e.push($.map(c.header, function (a) { return { text: "string" == typeof a ? a : a + "", style: "tableHeader" } })); for (var g = 0, h = c.body.length; g < h; g++) e.push($.map(c.body[g], function (a) { return { text: "string" == typeof a ? a : a + "", style: g % 2 ? "tableBodyEven" : "tableBodyOdd" } })); m.footer && e.push($.map(c.footer, function (a) { return { text: "string" == typeof a ? a : a + "", style: "tableFooter" } })); var o = { pageSize: m.pageSize, pageOrientation: m.orientation, content: [{ table: { headerRows: 1, body: e }, layout: "noBorders" }], styles: { tableHeader: { bold: !0, fontSize: 11, color: "white", fillColor: "#2d4154", alignment: "center" }, tableBodyEven: {}, tableBodyOdd: { fillColor: "#f3f3f3" }, tableFooter: { bold: !0, fontSize: 11, color: "white", fillColor: "#2d4154" }, title: { alignment: "center", fontSize: 15 }, message: {} }, defaultStyle: { fontSize: 10 } }; m.message && o.content.unshift({ text: m.message, style: "message", margin: [0, 0, 0, 12] }), m.title && o.content.unshift({ text: _title(m, !1), style: "title", margin: [0, 0, 0, 12] }), m.customize && m.customize(o); var p = window.pdfMake.createPdf(o); "open" !== m.download || _isSafari() ? p.getBuffer(function (a) { var b = new Blob([a], { type: "application/pdf" }); _saveAs(b, "Exported Grid.pdf") }) : p.open() } } function AddToMainConfiguration(a) { _thisGlobals.DCrmEGConfiguration.push(a) } function LoadDCrmEGConfigurationCallback(a) { if (a.length <= 0) return LogEx("No D CRM Editable Grid records found matching this entity."), void _thisHelpers.WaitDialog(); var b = a[0].attributes.dcrmeg_headerfieldnameshidden.value, c = b ? RetrieveEntityOutput(b, !0).split(_thisGlobals._SEPERATOR) : ""; b = a[0].attributes.dcrmeg_displayfromentityhidden.value; var d = b ? RetrieveEntityOutput(b, !0).split(_thisGlobals._pSeperator) : ""; b = a[0].attributes.dcrmeg_fromentityfieldsattrhidden.value; var e = b ? RetrieveEntityOutput(b, !0).split(_thisGlobals._pSeperator) : ""; b = a[0].attributes.dcrmeg_fieldcondition ? a[0].attributes.dcrmeg_fieldcondition.value : void 0; for (var f = b ? RetrieveEntityOutput(b, !0).split(_thisGlobals._pSeperator) : "", g = void 0, h = void 0, i = 0; i < c.length; i++) { g = void 0; var j = FindEntityGridInfo(c[i], d), k = { schemaName: j[0], label: j[1] }; "true" == j[2] && (k.related = j[3]), k.RelatedToParentLI = "true" == j[4], k.RelatedToParentLILookupSchemaName = j[5].length > 0 ? j[5] : void 0, k.ParentSchemaName = j[6].length > 0 ? j[6] : void 0, k.ParentSchemaName && (g = FindDCrmEGConfigurationBySchema(k.ParentSchemaName)), j[7].length > 0 && (k.HasStatusField = j[7]), k.DisplaySum = j[8], k.RecordsPerPage = j[10], j.length > 11 && (k.AutoSaveChanges = j[11], k.AllowCreateNew = j[12], k.AllowDelete = j[13], k.RefreshAfterCreate = !(j.length > 14) || j[14], k.RefreshAfterSave = j.length > 15 && j[15], k.SortOrder = j.length > 16 && j[16].length > 0 ? j[16] : void 0, k.NewBtnBehavoir = j.length > 17 ? j[17] : void 0, k.BooleanEditorBehavoir = j.length > 18 ? j[18] : void 0, k.HideAutosaveButton = j.length > 19 ? j[19] : void 0, k.GridTitle = j.length > 20 ? j[20] : void 0, k.DisplayClearFilterButton = !(j.length > 21) || j[21], k.DisplayHeaderFilter = !(j.length > 22) || j[22], k.DisplayExportButton = !(j.length > 23) || j[23], k.DisplaySetRecordState = !(j.length > 24) || j[24], k.DisplayCloneRecord = !(j.length > 25) || j[25], k.DisplayCloneRecordButton = !(j.length > 26) || j[26], k.OpenRecordBehavoir = j.length > 27 ? j[27] : void 0), h = new DCrmEGConfigurationManager(k), e.length > 0 && (h.SelectedFields = GetSelectedFields(FindEntiyGridFields(k.schemaName, e))), f.length > 0 && (h.Conditions = FindEntiyGridFields(k.schemaName, f)), k.ParentSchemaName && g ? g.ChildConfigurations.push(h) : AddToMainConfiguration(h) } var l = $("#parentcontainer"); try { for (var i = 0; i < _thisGlobals.DCrmEGConfiguration.length; i++) i > 0 && $("<div></div>").addClass("gridSpacerDiv").appendTo(l), CreateAndPopulateGrid(_thisGlobals.DCrmEGConfiguration[i], l, null, _thisGlobals.ParentPrimaryAttributeValue) } catch (a) { LogEx("Unable to create grid due to exception:\r\n" + a.message) } } function CreateAndPopulateGrid(a, b, c, d) { if (0 == a.SelectedFields.length) return null; var e = CreateGridContainers(a, b), f = a.Entity.RelatedToDisplayOnEntity, g = void 0; f && (g = a.Entity.RelatedToDisplayOnLookupSchemaName), a.Entity.RelatedToParentLI && (g = a.Entity.RelatedToParentLILookupSchemaName, f = !0); for (var i = (a.DisplaySum, { Head: '<fetch version="1.0" output-format="xml-platform" mapping="logical" no-lock="true" count="' + a.RecordsPerPage + '" page="%P%" paging-cookie="">', HeadForPaging: '<fetch version="1.0" output-format="xml-platform" mapping="logical" no-lock="true" page="%P%" count="' + a.RecordsPerPage + '" paging-cookie="%PC%">', Entity: '<entity name="' + a.Entity.SchemaName + '">', Fields: [], Sort: [], FilterHead: '<filter type="and">', Filters: [], InlineFilters: [], FilterTail: "</filter>", Tail: "</entity></fetch>", LinkEntities: [], LinkEntityHead: '<link-entity name="%n%" from="%f%" to="%t%" alias="%a%">', LinkEntityTail: "</link-entity>" }), j = !1, m = [], n = 0; n < a.SelectedFields.length; n++) { var o = a.SelectedFields[n]; i.Fields.push('<attribute name="' + o.SchemaName + '" />'), m.push(o.SchemaName), 0 == j && o.AttrType == _thisGlobals.CrmFieldTypes.MoneyType && (i.Fields.push('<attribute name="transactioncurrencyid" />'), j = !0) } a.HasStatusField && m.MatchExists("statuscode") == -1 && i.Fields.push('<attribute name="statuscode" />'), a.HasStatusField && m.MatchExists("statecode") == -1 && i.Fields.push('<attribute name="statecode" />'); var p = { FirstField: void 0, SecondField: void 0 }; if (a.SortOrder && "undefined" != a.SortOrder) { var q = a.SortOrder.split(";"); p.FirstField = { Attribute: q[0], Descending: "0" != q[1] }, i.Sort.push('<order attribute="' + q[0] + '" descending="' + ("0" == q[1] ? "false" : "true") + '" />'), q.length > 2 && (p.SecondField = { Attribute: q[2], Descending: "0" != q[3] }, i.Sort.push('<order attribute="' + q[2] + '" descending="' + ("0" == q[3] ? "false" : "true") + '" />')) } var r = ProcessFetchConditions(a.Conditions, a.HasStatusField, m); i.Filters = r.Filters, i.InlineFilters = r.InlineFilters; var s = r.HeaderIndexes, t = { Related: f, LookupSchemaName: g, ParentSchemaName: a.Entity.ParentSchemaName, Guid: c, Type: "EntityReference" }; if (f) { for (var u = -1, n = 0; n < a.SelectedFields.length; n++) { var o = a.SelectedFields[n]; if (o.SchemaName == g) { s.push(n), u = n; break } } var v = ""; c ? (v = '<condition attribute="' + g + '" operator="eq" uitype="' + a.Entity.ParentSchemaName + '" value="' + _thisHelpers.AddCurlyBrace(c) + '" />', u > -1 && d ? i.InlineFilters.push(InlineFilterDataToStruct(g, u, v, "eq", d, null, null, c, a.Entity.ParentSchemaName)) : i.Filters.push(v)) : (t.ParentSchemaName = _thisGlobals.ParentFormEntityName.toLowerCase(), t.Guid = _thisGlobals.ParentFormEntityId, v = '<condition attribute="' + g + '" operator="eq" uitype="' + _thisGlobals.ParentFormEntityName.toLowerCase() + '" value="' + _thisHelpers.AddCurlyBrace(_thisGlobals.ParentFormEntityId) + '" />', u > -1 && d ? i.InlineFilters.push(InlineFilterDataToStruct(g, u, v, "eq", d, null, null, _thisGlobals.ParentFormEntityId, _thisGlobals.ParentFormEntityName.toLowerCase())) : i.Filters.push(v)) } a.GridFetchXml = i; var w = $("#" + e.Table).find("thead:first").find("tr:first"), x = [], y = void 0, z = { HaveNumeric: !1, HavePrecision: !1 }, A = parseFloat(100 / a.SelectedFields.length).toFixed(2), B = $("#" + e.Table)[0]; if (_thisGlobals.FormIsReadOnly || !a.AllowDelete && !a.DisplayCloneRecordButton) { var D = $("<th></th>").addClass("firstColNoCheckbox"); D.appendTo(w) } else { var C = $("<input type='checkbox' />").attr(_thisGlobals.ToolTipAttrName, _thisGlobals.Translation_Labels.SelectAllRecords).on("click", function (a) { a.stopPropagation(); var b = $(this).parent().parent().parent().parent().attr("data-item-schema"); _thisHelpers.SelectAllRows(b, $(this).is(":checked")) }), D = $("<th></th>").addClass("firstColCheckbox").append(C); D.appendTo(w) } for (var E = $(B).find("tfoot:first").find("tr:first"), n = ($("<td></td>").addClass("tfooterdummy").attr(_thisGlobals.DataAttr.Cell.FooterCell, _thisGlobals.DataAttr.NO).appendTo(E), 0) ; n < a.SelectedFields.length; n++) { var o = a.SelectedFields[n]; y = $("<th></th>").addClass("TextAutoEclipse").attr(_thisGlobals.ToolTipAttrName, o.Name).appendTo(w), "0" != o.RealWidth ? y.width(o.RealWidth + "%") : y.width(A + "%"); var G = [], H = void 0, I = "Yes", J = "No", K = !1, L = DCrmEditableGrid.Editors.None, M = o.AttrType.toLowerCase(), N = "true" == o.ReadOnly || !1, O = null; if ("none" != o.RequieredLevel.toLowerCase() && (K = !0), M == _thisGlobals.CrmFieldTypes.TextType) L = "textarea" == o.Format.toLowerCase() ? DCrmEditableGrid.Editors.Description : DCrmEditableGrid.Editors.Text; else if (M == _thisGlobals.CrmFieldTypes.DecimalType || M == _thisGlobals.CrmFieldTypes.DoubleType) L = DCrmEditableGrid.Editors.Decimal, z.HaveNumeric = !0, z.HavePrecision = !0; else if (M == _thisGlobals.CrmFieldTypes.MemoType) L = DCrmEditableGrid.Editors.Description; else if (M == _thisGlobals.CrmFieldTypes.IntegerType) L = DCrmEditableGrid.Editors.Numeric, z.HaveNumeric = !0; else if (M == _thisGlobals.CrmFieldTypes.DateTimeType) L = "dateonly" == o.Format.toLowerCase() ? DCrmEditableGrid.Editors.DatePicker : DCrmEditableGrid.Editors.DateTimePicker; else if (M == _thisGlobals.CrmFieldTypes.MoneyType) L = DCrmEditableGrid.Editors.Currency, z.HaveNumeric = !0, z.HavePrecision = !0; else if (M == _thisGlobals.CrmFieldTypes.OptionSetType) N || K || G.insert(0, { text: "", value: -1, state: void 0, readonly: !1 }), L = DCrmEditableGrid.Editors.OptionSet; else if (M == _thisGlobals.CrmFieldTypes.BooleanType) O = _thisHelpers.GenerateUUID(), y.attr("id", O), L = DCrmEditableGrid.Editors.Checkbox; else if (M == _thisGlobals.CrmFieldTypes.LookupType || M == _thisGlobals.CrmFieldTypes.CustomerType || M == _thisGlobals.CrmFieldTypes.OwnerType) { L = DCrmEditableGrid.Editors.Lookup, H = { LookupId: "", LookupLogicalName: "", LookupName: "", TargetEntities: [] }; for (var P = o.LookupTargetEntity.split(","), Q = 0; Q < P.length; Q++) H.TargetEntities.push({ Target: P[Q], PrimaryIdAttribute: null, PrimaryNameAttribute: null, ObjectTypeCode: null, LocalizedLabel: null }); y.attr("data-lookuptarget-entities", o.LookupTargetEntity) } else M != _thisGlobals.CrmFieldTypes.State && M != _thisGlobals.CrmFieldTypes.Status || (L = DCrmEditableGrid.Editors.Status); (N || _thisGlobals.FormIsReadOnly) && (y.attr(_thisGlobals.DataAttr.Header.ReadOnlyEditorType, L), L = DCrmEditableGrid.Editors.None, y.attr(_thisGlobals.DataAttr.Header.ReadOnly, _thisGlobals.DataAttr.YES)), y.attr(_thisGlobals.DataAttr.Header.EditorType, L).attr("data-crmfieldtype", M).attr(_thisGlobals.DataAttr.Header.SchemaName, o.SchemaName.toLowerCase()), o.DefaultValue && y.attr(_thisGlobals.DataAttr.Header.DefaultValueForCreate, o.DefaultValue); var R = void 0; N && $("<span></span>").addClass("lockedfield").attr(_thisGlobals.ToolTipAttrName, _thisGlobals.Translation_Labels.ReadOnly).appendTo(y), K ? (R = $("<span>*</span>").attr(_thisGlobals.ToolTipAttrName, _thisGlobals.Translation_Labels.LockedField).addClass("Requiered").appendTo(y), y.attr(_thisGlobals.DataAttr.Header.Required, _thisGlobals.DataAttr.YES)) : y.attr(_thisGlobals.DataAttr.Header.Required, _thisGlobals.DataAttr.NO); var S = $('<span class="headertitle"></span>').text(o.Name).attr(_thisGlobals.ToolTipAttrName, o.Name).appendTo(y); if (p.FirstField && p.FirstField.Attribute == o.SchemaName ? (p.FirstField.Descending ? (S.addClass("headerSortDown"), y[0].InitialSortOrder = "desc") : (S.addClass("headerSortUp"), y[0].InitialSortOrder = "asc"), y[0].order = _thisHelpers.FormatSortingOrder(y[0].InitialSortOrder)) : y[0].order = _thisHelpers.FormatSortingOrder(_thisGlobals.DefaultGridOptions.sortInitialOrder), p.SecondField && (p.SecondField.Attribute == o.SchemaName ? (p.SecondField.Descending ? (S.addClass("headerSortDown"), y[0].InitialSortOrder = "desc") : (S.addClass("headerSortUp"), y[0].InitialSortOrder = "asc"), y[0].order = _thisHelpers.FormatSortingOrder(y[0].InitialSortOrder)) : y[0].order = _thisHelpers.FormatSortingOrder(_thisGlobals.DefaultGridOptions.sortInitialOrder)), y[0].count = y[0].order, y.addClass(_thisGlobals.DefaultGridOptions.cssHeader), a.DisplayHeaderFilter) { var T = "recfilter"; T += s.ExactMatchExists(n) ? " recfilterset" : " recfilternotset"; $("<span></span>").attr(_thisGlobals.ToolTipAttrName, "Filter").attr("id", _thisHelpers.GenerateUUID()).addClass(T).appendTo(y) } var V = void 0; M != _thisGlobals.CrmFieldTypes.DecimalType && M != _thisGlobals.CrmFieldTypes.DoubleType && M != _thisGlobals.CrmFieldTypes.MoneyType || (V = { PrecisionSource: 0, UserPrecision: _thisGlobals.userCurrencySettings.CurrencyDecimalPrecision, CurrencyPrecision: void 0, PricinPrecision: 2, FieldPrecision: o.Precision, EntitySchemaName: a.Entity.SchemaName, FieldSchemaName: o.SchemaName, HeaderIndex: n + 1 }, y.attr(_thisGlobals.DataAttr.Header.Precision, V.FieldPrecision).attr(_thisGlobals.DataAttr.Header.PrecisionSource, V.PrecisionSource)); var W = $("<td></td>").addClass("tfooterdummy").attr(_thisGlobals.DataAttr.Cell.FooterCell, _thisGlobals.DataAttr.NO).attr(_thisGlobals.DataAttr.Header.SchemaName, o.SchemaName.toLowerCase()).appendTo(E); !a.DisplaySum || L != DCrmEditableGrid.Editors.Numeric && L != DCrmEditableGrid.Editors.Decimal && L != DCrmEditableGrid.Editors.Currency ? $("<span class='footercelltext'></span>").appendTo(W) : $("<img title='Aggregate functions' class='aggregate'></img><span class='footercelltext'></span>").appendTo(W), x.push({ editor: L, ParentEntityName: a.Entity.Label, ParentEntitySchemaname: a.Entity.SchemaName, FieldLabel: o.Name, FieldSchemaName: o.SchemaName.toLowerCase(), RequireValue: K, validator: ValidateEditor, HeaderIdToUpdate: O, CheckText: I, UncheckedText: J, OptionSetData: G, LookupData: H, MaxLength: o.MaxLength, Format: o.Format, MaxValue: o.MaxValue, MinValue: o.MinValue, Precision: V, RealWidth: o.RealWidth }) } return new GridLoaderHelper(a, e, x, t, z, b) } function ParentGridSelectedRecord(a, b, c) {
    try {
        var d = FindDCrmEGConfigurationBySchema(a.activeOptions.ParentEntityInfo.ParentEntitySchemaname), e = void 0; if (c) { for (var f = void 0, g = 0; g < d.ChildConfigurations.length; g++) if (e = d.ChildConfigurations[g].ThisGrid) { var h = e.activeOptions.GridContainerIds; if (f = b || e.ParentDivContainer, h.ParentGridDivContainer == f) { d.ChildConfigurations[g].length > 0 && (LogIt("Grid has subgrid"), ParentGridSelectedRecord(e, void 0, !0), d.ChildConfigurations[g].ThisGrid = void 0), $("#" + h.TableCaptionContainer).empty().remove(), $("#" + h.Table).empty().remove(); for (var g = 0; g < e.GridEditors.length; g++) null != e.GridEditors[g] && e.GridEditors[g].DestroyEditor(); e.DestroyGrid() } } } else for (var i = b || a.mainTable, g = 0; g < d.ChildConfigurations.length; g++) CreateAndPopulateGrid(d.ChildConfigurations[g], i, a.SelectedRecordGuid, null),
        g > 0 && $("<div></div>").addClass("gridSpacerDiv").insertBefore($("#" + e.activeOptions.GridContainerIds.TableCaptionContainer))
    } catch (a) { LogEx("Creating a child grid failed. " + a.message) }
} function FindEntityGridInfo(a, b) { for (var c = void 0, d = 0; d < b.length; d++) { var e = b[d].split(_thisGlobals._SEPERATOR); if (e[0] == a) { c = e; break } } return c } function FindEntiyGridFields(a, b) { for (var c = void 0, d = 0; d < b.length; d++) { var e = b[d].split(_thisGlobals._OuterSeperator); if (e[e.length - 1] == a) { e.splice(e.length - 1, 1), c = e.join(_thisGlobals._OuterSeperator); break } } return c } function FindDCrmEGConfigurationBySchema(a, b) { for (var c = void 0, d = 0; d < _thisGlobals.DCrmEGConfiguration.length; d++) { if (_thisGlobals.DCrmEGConfiguration[d].Entity.SchemaName == a) { c = _thisGlobals.DCrmEGConfiguration[d]; break } if (_thisGlobals.DCrmEGConfiguration[d].ChildConfigurations.length > 0) for (var e = 0; e < _thisGlobals.DCrmEGConfiguration[d].ChildConfigurations.length && !(c = FindDCrmEGConfiguration(_thisGlobals.DCrmEGConfiguration[d].ChildConfigurations[e], a)) ; e++); } return c && b && (c = jQuery.extend(!0, {}, c)), c } function FindDCrmEGConfiguration(a, b) { var c = void 0; if (a.Entity.SchemaName == b) c = a; else if (a.ChildConfigurations.length > 0) for (var d = 0; d < a.ChildConfigurations.length && !(c = FindDCrmEGConfiguration(a.ChildConfigurations[d], b)) ; d++); return c } function GetLookupDisplayName(a, b, c, d) { var e = void 0, f = '<fetch version="1.0" output-format="xml-platform" mapping="logical" distinct="false"><entity name="' + a + '"><attribute name="' + b + '" /><filter type="and"><condition attribute="' + b + '" operator="eq" uitype="' + c + '" value="' + _thisHelpers.AddCurlyBrace(d) + '" /></filter></entity></fetch>', g = XrmServiceToolkit.Soap.Fetch(f); return g.length > 0 && (e = g[0].attributes[b].name), e } function InlineFilterDataToStruct(a, b, c, d, e, f, g, h, i) { return { Schema: a, SchemaIndex: b, Filter: c, Operator: d, Value: e, FecthOp: f, FetchValue: g, LookupGuid: h, LookupUiType: i } } function ProcessFetchConditions(a, b, c) { if (Aret = { Filters: [], InlineFilters: [], HeaderIndexes: [] }, a && "undefined" != a) { var d = a.split("[]"), e = void 0, f = void 0, g = void 0, h = void 0, i = !1, j = "", k = null; schemaIndex = -1, fetchvalue = null, fetchop = null; try { $.each(d, function (a, b) { console.log("Item [" + b + "]"); var d = b.split("||"); if (1 != d.length) { if (j = "", k = null, e = d[0], f = d[2], f.contains(";")) { var l = f.split(";"); f = l[0], fetchop = l[1] } else fetchop = f; g = d[1] && "undefined" != d[1] ? d[1] : "", h = d[4]; var m = d[5] && d[5].length > 0 ? d[5].split(";") : [], n = d[3] && d[3].length > 0 ? d[3].split(";") : []; if (schemaIndex = c.MatchExists(e), i = schemaIndex !== -1, i && Aret.HeaderIndexes.push(schemaIndex), fetchvalue = null, g.startsWith("%") ? fetchvalue = "%{0}" : g.endsWith("%") && (null != fetchvalue ? fetchvalue += "%" : fetchvalue = "{0}%"), g.contains(";")) { var o = g.split(";"); j = '<condition attribute="' + e + '" operator="' + ("eq" == fetchop ? "in" : "not-in") + '">'; for (var p = 0; p < o.length; p++) j += h == _thisGlobals.CrmFieldTypes.LookupType || h == _thisGlobals.CrmFieldTypes.CustomerType || h == _thisGlobals.CrmFieldTypes.OwnerType ? '<value uiname="' + n[p] + '" uitype="' + m[p] + '">' + _thisHelpers.AddCurlyBrace(o[p]) + "</value>" : "<value>" + o[p] + "</value>"; j += "</condition>", i ? (k = h == _thisGlobals.CrmFieldTypes.LookupType || h == _thisGlobals.CrmFieldTypes.CustomerType || h == _thisGlobals.CrmFieldTypes.OwnerType ? InlineFilterDataToStruct(e, schemaIndex, j, f, n.join(";"), fetchop, fetchvalue, g, m.join(";")) : InlineFilterDataToStruct(e, schemaIndex, j, f, g, fetchop, fetchvalue), Aret.InlineFilters.push(k)) : Aret.Filters.push(j) } else if (0 == g.length) j = '<condition attribute="' + e + '" operator="' + fetchop + '" />', i ? (k = InlineFilterDataToStruct(e, schemaIndex, j, f, null, fetchop), Aret.InlineFilters.push(k)) : Aret.Filters.push(j); else { h != _thisGlobals.CrmFieldTypes.LookupType && h != _thisGlobals.CrmFieldTypes.CustomerType && h != _thisGlobals.CrmFieldTypes.OwnerType || (g = _thisHelpers.AddCurlyBrace(g)); var q = ""; m.length > 0 && (q = ' uiname="' + n[0] + '" uitype="' + m[0] + '"'), j = '<condition attribute="' + e + '" operator="' + fetchop + '" value="' + g + '"' + q + " />", i ? (fetchvalue && (g = g.replace(/%/g, "")), k = h == _thisGlobals.CrmFieldTypes.LookupType || h == _thisGlobals.CrmFieldTypes.CustomerType || h == _thisGlobals.CrmFieldTypes.OwnerType ? InlineFilterDataToStruct(e, schemaIndex, j, f, n[0], fetchop, fetchvalue, g, m[0]) : InlineFilterDataToStruct(e, schemaIndex, j, f, g, fetchop, fetchvalue), Aret.InlineFilters.push(k)) : Aret.Filters.push(j) } } }) } catch (a) { LogEx("Exception: unable to get field conditions. " + a.message), b && Aret.Filters.push('<condition attribute="statecode" operator="eq" value="0" />') } } else b && (schemaIndex = c.MatchExists("statecode"), k = InlineFilterDataToStruct("statecode", schemaIndex, '<condition attribute="statecode" operator="eq" value="0" />', "eq", "0", null, null), schemaIndex != -1 ? (Aret.InlineFilters.push(k), Aret.HeaderIndexes.push(schemaIndex)) : Aret.Filters.push('<condition attribute="statecode" operator="eq" value="0" />')); return Aret } function GetFilterUIStruc(a) { var b = null; switch (a) { case DCrmEditableGrid.Editors.Text: case DCrmEditableGrid.Editors.Description: b = { div: "#fieldfilter_stringcontainer", id: "#fieldfilter_stringconditions", input: "#fieldfilter_stringinput", SelectedOptionValue: "eq", FetchOp: "eq", ShowInput: !0 }; break; case DCrmEditableGrid.Editors.DateTimePicker: case DCrmEditableGrid.Editors.DatePicker: b = { div: "#fieldfilter_datetimecontainer", id: "#fieldfilter_datetimeconditions", input: "#fieldfilter_calendarinput", SelectedOptionValue: "on", FetchOp: "on", ShowDate: !0 }; break; case DCrmEditableGrid.Editors.Lookup: b = { div: "#fieldfilter_lookupcontainer", id: "#fieldfilter_lookupconditions", input: "#fieldfilter_lookupinput", SelectedOptionValue: "eq", FetchOp: "eq", ShowInput: !0, ShowLookupBtn: !0 }; break; case DCrmEditableGrid.Editors.OwnerType: b = { id: "#fieldfilter_systemuserlookup", input: "#fieldfilter_lookupinput", SelectedOptionValue: "eq-userid" }; break; case DCrmEditableGrid.Editors.Checkbox: case DCrmEditableGrid.Editors.OptionSet: case DCrmEditableGrid.Editors.Status: b = { div: "#fieldfilter_optionsetcontainer", id: "#fieldfilter_optionsetconditions", input: "#fieldfilter_optionsetselect", SelectedOptionValue: "eq", FetchOp: "eq", ShowInput: !0, ShowSelectBtn: !0 }; break; case DCrmEditableGrid.Editors.Decimal: case DCrmEditableGrid.Editors.Currency: case DCrmEditableGrid.Editors.Numeric: b = { div: "#fieldfilter_numericcontainer", id: "#fieldfilter_numericconditions", input: "#fieldfilter_stringinput", SelectedOptionValue: "eq", FetchOp: "eq", ShowInput: !0 }; break; default: LogEx("Exception: No field type retrieved: " + a) } return b } function GetFilterContainer(a) { var b = null; switch (a) { case _thisGlobals.CrmFieldTypes.TextType: case _thisGlobals.CrmFieldTypes.MemoType: b = { div: "#fieldfilter_stringcontainer", id: "#fieldfilter_stringconditions", input: "#fieldfilter_stringinput", SelectedOptionValue: "eq", FetchOp: "eq", ShowInput: !0 }; break; case _thisGlobals.CrmFieldTypes.DateTimeType: b = { div: "#fieldfilter_datetimecontainer", id: "#fieldfilter_datetimeconditions", input: "#fieldfilter_calendarinput", SelectedOptionValue: "on", FetchOp: "on", ShowDate: !0 }; break; case _thisGlobals.CrmFieldTypes.LookupType: b = { div: "#fieldfilter_lookupcontainer", id: "#fieldfilter_lookupconditions", input: "#fieldfilter_lookupinput", SelectedOptionValue: "eq", FetchOp: "eq", ShowInput: !0, ShowLookupBtn: !0 }; break; case _thisGlobals.CrmFieldTypes.OwnerType: b = { id: "#fieldfilter_systemuserlookup", input: "#fieldfilter_lookupinput", SelectedOptionValue: "eq-userid" }; break; case _thisGlobals.CrmFieldTypes.BooleanType: case _thisGlobals.CrmFieldTypes.OptionSetType: case _thisGlobals.CrmFieldTypes.State: case _thisGlobals.CrmFieldTypes.Status: b = { div: "#fieldfilter_optionsetcontainer", id: "#fieldfilter_optionsetconditions", input: "#fieldfilter_optionsetselect", SelectedOptionValue: "eq", FetchOp: "eq", ShowInput: !0, ShowSelectBtn: !0 }; break; case _thisGlobals.CrmFieldTypes.DecimalType: case _thisGlobals.CrmFieldTypes.MoneyType: case _thisGlobals.CrmFieldTypes.IntegerType: case _thisGlobals.CrmFieldTypes.DoubleType: b = { div: "#fieldfilter_numericcontainer", id: "#fieldfilter_numericconditions", input: "#fieldfilter_stringinput", SelectedOptionValue: "eq", FetchOp: "eq", ShowInput: !0 }; break; default: LogEx("Exception: No field type retrieved: " + a) } return b } function FireGridRowOnload(a, b, c) { if (window.parent.DCrmEgGridRowOnload) { window.parent.DCrmEgGridRowOnload(b, c); for (var d = 0; d < b.Fields.length; d++) if (b.Fields[d].ReadOnly) { var e = a.find("td:eq(" + b.Fields[d].FieldIndex + ")"); e && (e.attr("data-user-disabledfield", _thisGlobals.DataAttr.YES), b.Fields[d].BackgroundColor && e.css("background-color", b.Fields[d].BackgroundColor), b.Fields[d].ForgroundColor && e.css("color", b.Fields[d].ForgroundColor)) } } } String.prototype.capitalizeFirstLetter = function () { return this.length > 0 ? this.charAt(0).toUpperCase() + this.slice(1) : "" }, String.prototype.contains = function (a, b) { return b = b || !1, b ? this.toLowerCase().indexOf(a.toLowerCase()) != -1 : this.indexOf(a) != -1 }, String.prototype.startsWith = function (a) { return this.slice(0, a.length) == a }, String.prototype.endsWith = function (a) { return this.slice(-a.length) == a }, Array.prototype.ExactMatchExists = function (a) { for (var b = 0; b < this.length; b++) if (a == this[b]) return !0; return !1 }, Array.prototype.MatchExists = function (a) { for (var b = 0; b < this.length; b++) if (a == this[b]) return b; return -1 }, Array.prototype.insert = function (a, b) { this.splice(a, 0, b) }, function (a) { a.extend(!0, window, { DCrmEditableGrid: { Globals: { xrmPage: void 0, LoggedInUserID: void 0, Translation_Labels: {}, CrmFieldTypes: { LookupType: "lookup", CustomerType: "customer", OwnerType: "owner", BooleanType: "boolean", OptionSetType: "picklist", DateTimeType: "datetime", TextType: "string", MemoType: "memo", IntegerType: "integer", DoubleType: "double", DecimalType: "decimal", MoneyType: "money", State: "state", Status: "status" }, _SEPERATOR: "||", _OuterSeperator: "[]", _pSeperator: "%%", ParentFieldsFormType: 2, FormIsReadOnly: !1, ParentEntityName: void 0, ParentEntityId: void 0, TargetOutputEncSeed: "5CD566B7B6D04BE19572", userDatetimeSettings: void 0, userCurrencySettings: void 0, DataAttr: { YES: "1", NO: "0", Row: { InternalIndex: "data-row-internalindex", SubGrid: { ChildGridOpen: "data-row-subgrid-childopen", Id: "data-row-subgrid-id", Row: { Id: "data-row-subgrid-row-id" } }, Group: { InternalColIndex: "" } }, Header: { SchemaName: "data-header-schemaname", EditorType: "data-header-editortype", ReadOnly: "data-header-readonly", ReadOnlyEditorType: "data-header-readonly-editortype", DefaultValueForCreate: "data-header-createdefault", Precision: "data-header-precision", PrecisionSource: "data-header-precisionsource", DataSorterType: "data-header-datasortertype", Required: "data-header-required", CheckedText: "data-header-checktext", UncheckedText: "data-header-unchecktext" }, Cell: { RecordGuid: "data-record-guid", Format: "data-field-format", OriginalAttrValue: "data-original-attrvalue", ChangedAttrValue: "data-field-changed-attrvalue", FooterCell: "data-field-footercell", Lookup: { Guid: "data-lookup-guid", LogicalName: "data-lookup-logicalname", OriginalLogicalName: "data-lookup-original-logicalname", EntityName: "data-lookup-entityname" }, Optionset: { SelectedValue: "data-optionset-selected-value" } } }, DefaultCountry: "ca", DCrmEGConfiguration: [], EntityStates: [], ToolTipAttrName: "title", excelStrings: { "_rels/.rels": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>                    <Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">\t                    <Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument" Target="xl/workbook.xml"/>                    </Relationships>', "xl/_rels/workbook.xml.rels": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>                    <Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">\t                    <Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet" Target="worksheets/sheet1.xml"/>                    </Relationships>', "[Content_Types].xml": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>                    <Types xmlns="http://schemas.openxmlformats.org/package/2006/content-types">\t                    <Default Extension="xml" ContentType="application/xml"/>\t                    <Default Extension="rels" ContentType="application/vnd.openxmlformats-package.relationships+xml"/>\t                    <Default Extension="jpeg" ContentType="image/jpeg"/>\t                    <Override PartName="/xl/workbook.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml"/>\t                    <Override PartName="/xl/worksheets/sheet1.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml"/>                    </Types>', "xl/workbook.xml": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>                    <workbook xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships">\t                    <fileVersion appName="xl" lastEdited="5" lowestEdited="5" rupBuild="24816"/>\t                    <workbookPr showInkAnnotation="0" autoCompressPictures="0"/>\t                    <bookViews>\t\t                    <workbookView xWindow="0" yWindow="0" windowWidth="25600" windowHeight="19020" tabRatio="500"/>\t                    </bookViews>\t                    <sheets>\t\t                    <sheet name="Sheet1" sheetId="1" r:id="rId1"/>\t                    </sheets>                    </workbook>', "xl/worksheets/sheet1.xml": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>                    <worksheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac">\t                    <sheetData>\t\t                    __DATA__\t                    </sheetData>                    </worksheet>' }, Debug: !1, RecordOperations: { Create: 0, Update: 1, Delete: 2, Fetch: 3 }, DefaultGridOptions: { cssHeader: "header", cssAsc: "headerSortUp", cssDesc: "headerSortDown", sortInitialOrder: "asc", rowSelectedCss: "rowselected", OpenRecordIcon: "dcrmeg_openrec", ExpandRecordIcon: "dcrmeg_addnew", CollapsedRecordIcon: "dcrmeg_minus16", selectorHeaders: "thead th", selectorBodyRows: "tbody tr" }, UnsavedChangesMsg: "There are unsaved changes.\n\nClick Cancel to save changes\n\nClick Ok to continue without saving?" } } }), a.extend(!0, window, { DCrmEditableGrid: { Editors: { Text: 0, Numeric: 1, DatePicker: 2, Checkbox: 3, OptionSet: 4, Description: 5, Lookup: 6, Decimal: 7, Currency: 8, DateTimePicker: 9, Status: 10, None: 11 } } }), a.extend(!0, window, { DCrmEditableGrid: { Keys: { KEY0: 48, KEY9: 57, _KEY0: 96, _KEY9: 105, CTRLKEY: 17, DEL: 46, ENTER: 13, ESC: 27, BACKSPACE: 8, ARROWLEFT: 37, ARROWUP: 38, ARROWRIGHT: 39, ARROWDOWN: 40, TAB: 9, HYPHON: 45 } } }), a.extend(!0, window, { DCrmEditableGrid: { Helper: { Movement: function (a, b) { return b === DCrmEditableGrid.Keys.ARROWRIGHT ? a.next("td") : b === DCrmEditableGrid.Keys.ARROWLEFT ? a.prev("td") : b === DCrmEditableGrid.Keys.ARROWUP ? a.parent().prev().children().eq(a.index()) : b === DCrmEditableGrid.Keys.ARROWDOWN ? a.parent().next().children().eq(a.index()) : [] }, GenerateUUID: function () { var a = (new Date).getTime(), b = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (b) { var c = (a + 16 * Math.random()) % 16 | 0; return a = Math.floor(a / 16), ("x" == b ? c : 7 & c | 8).toString(16) }); return b }, GenerateRandomLetters: function (a) { for (var b = "", c = a || 10, d = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", e = 0; e < c; e++) b += d.charAt(Math.floor(Math.random() * d.length)); return b }, CopyTextToClipboard: function (a) { if (a || !(a.length > 0)) { var b = document.createElement("textarea"); b.style.position = "fixed", b.style.top = 0, b.style.left = 0, b.style.width = "2em", b.style.height = "2em", b.style.padding = 0, b.style.border = "none", b.style.outline = "none", b.style.boxShadow = "none", b.style.background = "transparent", b.value = a, document.body.appendChild(b), b.select(); try { document.execCommand("copy") } catch (a) { LogEx("Exception: unable to copy the value to clipboard") } document.body.removeChild(b) } }, AddCurrencyFormat: function (a, b, c) { var d = c || _thisGlobals.userCurrencySettings.CurrencySymbol, e = a + ""; e = e.replace(_thisGlobals.userCurrencySettings.DecimalSymbol, "."); var f = parseFloat(e), g = !1; !isNaN(f) && f < 0 && (g = !0), void 0 != b && "undefined" != b || (b = _thisGlobals.userCurrencySettings.CurrencyDecimalPrecision), e = f.toFixed(b) + "", e = e.replace(".", _thisGlobals.userCurrencySettings.DecimalSymbol); var h = e.split(_thisGlobals.userCurrencySettings.DecimalSymbol); if (e = h[0].replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1" + _thisGlobals.userCurrencySettings.NumberSeparator) + _thisGlobals.userCurrencySettings.DecimalSymbol + h[1], g) switch (_thisGlobals.userCurrencySettings.NegativeCurrencyFormatCode) { case 1: e = "-" + d + e.replace("-", ""); break; case 0: e += "(" + d + e.replace("-", "") + ")"; break; case 2: e = d + "-" + e.replace("-", ""); break; case 3: e = d + e + "-"; break; case 4: e = "(" + e.replace("-", "") + d + ")"; break; case 5: e += "-" + e.replace("-", "") + d; break; case 6: e = e.replace("-", "") + "-" + d; break; case 7: e = e.replace("-", "") + d + "-"; break; case 8: e = "-" + e.replace("-", "") + " " + d; break; case 9: e += "-" + d + " " + e.replace("-", "") + ")"; break; case 10: e = e.replace("-", "") + " " + d + "-"; break; case 11: e = d + " " + e.replace("-", "") + "-"; break; case 12: e = d + " -" + e.replace("-", ""); break; case 13: e += e.replace("-", "") + "- " + d; break; case 14: e = "(" + d + " " + e.replace("-", "") + ")"; break; case 15: e = "(" + e.replace("-", "") + d + ")"; break; default: e = d + e } else switch (_thisGlobals.userCurrencySettings.CurrencyFormatCode) { case 0: e = d + e; break; case 1: e += d; break; case 2: e = d + " " + e; break; case 3: e = e + " " + d; break; default: e = d + e } return e }, AddDecimalFormat: function (a, b) { var c = a + ""; c = c.replace(_thisGlobals.userCurrencySettings.DecimalSymbol, "."); var d = parseFloat(c), e = !1; !isNaN(d) && d < 0 && (e = !0), void 0 != b && "undefined" != b || (b = _thisGlobals.userCurrencySettings.CurrencyDecimalPrecision), c = d.toFixed(b) + "", c = c.replace(".", _thisGlobals.userCurrencySettings.DecimalSymbol); var f = c.split(_thisGlobals.userCurrencySettings.DecimalSymbol); if (c = f[0].replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1" + _thisGlobals.userCurrencySettings.NumberSeparator) + _thisGlobals.userCurrencySettings.DecimalSymbol + f[1], e) switch (_thisGlobals.userCurrencySettings.NegativeNumberFormatCode) { case 0: c = "(" + c.replace("-", "") + ")"; break; case 1: break; case 2: c = "- " + c.replace("-", ""); break; case 3: c = c.replace("-", "") + "-"; break; case 4: c = c.replace("-", "") + " -" } return c }, AddIntegerFormat: function (a) { var b = a + "", c = parseInt(b), d = !1; if (!isNaN(c) && c < 0 && (d = !0), b = b.replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1" + _thisGlobals.userCurrencySettings.NumberSeparator), d) switch (_thisGlobals.userCurrencySettings.NegativeNumberFormatCode) { case 0: b = "(" + b.replace("-", "") + ")"; break; case 1: break; case 2: b = "- " + b.replace("-", ""); break; case 3: b = b.replace("-", "") + "-"; break; case 4: b = b.replace("-", "") + " -" } return b }, RemoveNumericFormat: function (b) { var c = b.contains("-") || b.contains("("), d = b.replace(_thisGlobals.userCurrencySettings.RemoveCurrenyFormatRegEx, ""), e = d.trim().split(""); d = ""; for (var f = 0; f < e.length; f++) e[f].length > 0 && (a.isNumeric(e[f]) || e[f] == _thisGlobals.userCurrencySettings.DecimalSymbol) && (d += e[f]); return (c ? "-" : "") + d }, IsValidEmail: function (a) { return /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i.test(a) }, IsValidUrl: function (a) { return /((([A-Za-z]{3,9}:(?:\/\/)?)(?:[\-;:&=\+\$,\w]+@)?[A-Za-z0-9\.\-]+|(?:www\.|[\-;:&=\+\$,\w]+@)[A-Za-z0-9\.\-]+)((?:\/[\+~%\/\.\w\-_]*)?\??(?:[\-\+=&;%@\.\w_]*)#?(?:[\.\!\/\\\w]*))?)/.test(a) }, IsvalidPhoneNumber: function (b) { if (a.isNumeric(b) || b.contains("-") || b.contains("(")) { var c = b.replace(/[^0-9]/g, ""); return 0 != c.trim().length && (a.isNumeric(c) && c.length >= 7) } return !1 }, FormatPhoneNumber: function (a) { var b = a.replace(/[^0-9]/g, ""); switch (b.length) { case "4105551212".length: return "(" + b.substr(0, 3) + ") " + b.substr(3, 3) + "-" + b.substr(6, 4); case "5551212".length: return b.substr(0, 3) + "-" + b.substr(3, 4) } return a }, WaitDialog: function (b) { b ? a("#dcrmegProcessingDialog").show() : a("#dcrmegProcessingDialog").hide() }, SetActiveCellText: function (a, b) { var c = a.find("span.fieldcelltext"); c && c.length && (c.text(b), c.attr(DCrmEditableGrid.Globals.ToolTipAttrName, b), c.parent().attr(DCrmEditableGrid.Globals.ToolTipAttrName, b)) }, GetActiveCellText: function (a) { var b = a.find("span.fieldcelltext"); return b && b.length ? b.text() : "" }, GetHeaderCellText: function (a) { var b = a.find("span.headertitle"); return b && b.length ? b.text() : "" }, SetHeaderCellText: function (a, b) { var c = a.find("span.headertitle"); c && c.length && (c.text(b), c.attr(DCrmEditableGrid.Globals.ToolTipAttrName, b), c.parent().attr(DCrmEditableGrid.Globals.ToolTipAttrName, b)) }, GetFooterCellText: function (a) { var b = a.find("span.footercelltext"); return b && b.length ? b.text() : "" }, SetFooterCellText: function (a, b) { var c = a.find("span.footercelltext"); c && c.length && (c.text(b), c.attr(DCrmEditableGrid.Globals.ToolTipAttrName, b), c.parent().attr(DCrmEditableGrid.Globals.ToolTipAttrName, b)) }, SelectAllRows: function (b, c) { var d = FindDCrmEGConfigurationBySchema(b), e = d.ThisGrid, f = d.ThisGrid.GetBodyRows(); if (c) for (var g = f.length, h = 0; h < g; ++h) { var i = a(f[h]); i.addClass(DCrmEditableGrid.Globals.DefaultGridOptions.rowSelectedCss), i.find("input:first").prop("checked", !0), e.activeOptions.selectedRows[e.activeOptions.selectedRows.length] = f[h] } else { for (var h = e.activeOptions.selectedRows.length - 1; h >= 0; h--) { var i = a(e.activeOptions.selectedRows[h]); i.removeClass(DCrmEditableGrid.Globals.DefaultGridOptions.rowSelectedCss), i.find("input:first").prop("checked", !1) } e.activeOptions.selectedRows = [] } }, FormatSortingOrder: function (a) { return "Number" != typeof a ? "desc" == a.toLowerCase() ? 1 : 0 : 1 == a ? 1 : 0 }, AddCurlyBrace: function (a) { return a.startsWith("{") ? a : "{" + a + "}" }, RemoveCurlyBraces: function (a) { return a.replace("{", "").replace("}", "") }, GetUserLocalizedLabel: function (a, b) { return a.UserLocalizedLabel ? a.UserLocalizedLabel.Label : a.LocalizedLabels.length > 0 ? a.LocalizedLabels[0].Label : b ? b : "" } } } }) }(jQuery); var _thisGlobals = DCrmEditableGrid.Globals, _thisHelpers = DCrmEditableGrid.Helper; _thisGlobals.xrmPage = window.parent.Xrm.Page, _thisGlobals.LoggedInUserID = _thisGlobals.xrmPage.context.getUserId(), Date.parseDate = function (a, b) { if (b = b || _thisGlobals.userDatetimeSettings.DateFormat, void 0 == a || "undefined" == a || 0 == a.trim().length) return new Date; var c = a.trim().split(" "), d = c[0].trim().split(_thisGlobals.userDatetimeSettings.DateSeparator), e = void 0; b.contains(_thisGlobals.userDatetimeSettings.TimeFormat) && (e = c[1].trim().split(_thisGlobals.userDatetimeSettings.TimeSeparator)); var f = b.toLowerCase().split(_thisGlobals.userDatetimeSettings.DateSeparator); d[0] = d[0].trim(), d[1] = d[1].trim(), d[2] = d[2].trim(); var g = "", h = "", i = ""; f[0].startsWith("y") ? g = d[0] : f[1].startsWith("y") ? g = d[1] : f[2].startsWith("y") && (g = d[2]), f[0].startsWith("m") ? h = d[0] : f[1].startsWith("m") ? h = d[1] : f[2].startsWith("m") && (h = d[2]), f[0].startsWith("d") ? i = d[0] : f[1].startsWith("d") ? i = d[1] : f[2].startsWith("d") && (i = d[2]); var j; return j = e ? new Date(g, h - 1, i, e[0].trim(), e[1].trim()) : new Date(g, h - 1, i) }, Date.prototype.dateFormat = function (a) { var b = new XDate(this).toString(a); return b }, $.fn.DCrmEditableGrid = function () { return this }, $.fn.DCrmEditableGrid.TextBox = function (a, b, c, d) { "use strict"; var e = $("<input type=text />").addClass("TextEditors").hide().appendTo(a.parent()); b.editor != DCrmEditableGrid.Editors.Text && e.addClass("NumericTextbox"), e.EditorType = b.editor; var f, g = b.validator, h = b.RequireValue, i = c, j = d, k = new RegExp("^(http|https|ftp|ftps|mailto)://", "i"); e.PossibleMove = void 0, e.CurrencySymbol = void 0; var l = !0, m = !1, n = { FieldSchemaName: b.FieldSchemaName, FieldLabel: b.FieldLabel, ParentEntitySchemaName: b.ParentEntitySchemaname, ParentEntityLabel: b.ParentEntityName }; e.theUpdater = void 0, e.RefreshOnSave = !1; var o = b.Format; o = "A" == o ? void 0 : o.toLowerCase(), e.EditorFormat = o; var p = void 0; "A" != b.MaxLength && (p = parseInt(b.MaxLength), isNaN(p) ? p = void 0 : e.attr("maxlength", p)); var q = void 0; "A" != b.MaxValue && (q = parseFloat(b.MaxValue)); var r = void 0; r = "A" != b.MinValue ? parseFloat(b.MinValue) : parseFloat("0.00"), e.Precision = void 0, e.PrecisionSource = void 0, e.PricinPrecision = void 0; var s = function (b) { if (b && b.length > 0 && b[0].Precision && (e.PrecisionSource = b[0].PrecisionSource, 1 == e.PrecisionSource)) { e.Precision = e.PricinPrecision; var c = a.find("thead:first").find("tr:first").find("th"); $(c[e.ColumnIndex]).attr(_thisGlobals.DataAttr.Header.Precision, e.Precision).attr(_thisGlobals.DataAttr.Header.PrecisionSource, e.PrecisionSource) } }; b.Precision && ("A" != b.Precision.FieldPrecision ? e.Precision = parseInt(b.Precision.FieldPrecision) : e.Precision = b.Precision.UserPrecision, e.PrecisionSource = b.Precision.PrecisionSource, XrmServiceToolkit.Soap.RetrieveAttributeMetadata(b.Precision.EntitySchemaName, b.Precision.FieldSchemaName, !0, s), e.ColumnIndex = b.Precision.HeaderIndex, e.PricinPrecision = b.Precision.PricinPrecision); var t = function (a) { var b = f.offset().top - (j.height() + 8), c = f.offset().left; j.text(a).css("left", c).css("top", b).width(f.width() - 20).show(), e.focus() }, u = function () { if (f = a.activeCell, void 0 === f || 0 === f.length) return !0; var b = e.val(), c = _thisHelpers.GetActiveCellText(f), d = c, j = !0, l = !0; if (h && (void 0 === b || null === b || 0 == b.trim().length)) { var m = f.offset().top - (i.height() + 8), p = f.offset().left; return i.css("left", p).css("top", m).width(f.width() - 20).show(), e.focus(), !1 } if (e.EditorType != DCrmEditableGrid.Editors.Currency && e.EditorType != DCrmEditableGrid.Editors.Decimal && e.EditorType != DCrmEditableGrid.Editors.Numeric || (c = _thisHelpers.RemoveNumericFormat(c)), c === b) return !0; if (b.length > 0) { if (e.EditorType == DCrmEditableGrid.Editors.Text) { if (o) if ("url" == o) { if (!_thisHelpers.IsValidUrl(b)) return t(_thisGlobals.Translation_Labels.IncorrectFormat), !1 } else if ("email" == o && !_thisHelpers.IsValidEmail(b)) return t(_thisGlobals.Translation_Labels.IncorrectFormat), !1 } else { if (q) { var s = parseFloat(b); if (!isNaN(s) && !isNaN(q) && s > q) return t(_thisGlobals.Translation_Labels.MaxValue + " " + q), !1 } var s = parseFloat(b); if (!isNaN(s) && !isNaN(r) && s < r) return t(_thisGlobals.Translation_Labels.MinValue + " " + r), !1 } if (void 0 != g) { var u = _thisHelpers.GetActiveCellText(f); e.EditorType != DCrmEditableGrid.Editors.Text && (u = _thisHelpers.RemoveNumericFormat(u), u = parseFloat(u.replace(_thisGlobals.userCurrencySettings.DecimalSymbol, "."))); var v = f.attr(_thisGlobals.DataAttr.Cell.RecordGuid), w = { RecordGuid: v, EditorType: e.EditorType, OriginalValue: u, NewValue: b }; j = g(w, n), j === !0 ? (e.EditorType == DCrmEditableGrid.Editors.Currency ? b = _thisHelpers.AddCurrencyFormat(b, e.Precision, e.CurrencySymbol) : e.EditorType == DCrmEditableGrid.Editors.Decimal ? b = _thisHelpers.AddDecimalFormat(b, e.Precision) : e.EditorType == DCrmEditableGrid.Editors.Numeric ? b = _thisHelpers.AddIntegerFormat(b) : e.EditorType == DCrmEditableGrid.Editors.Text && "url" == o && (k.test(b) || (b = "http://" + b)), _thisHelpers.SetActiveCellText(f, b)) : l = !1 } else e.EditorType == DCrmEditableGrid.Editors.Currency ? b = _thisHelpers.AddCurrencyFormat(b, e.Precision, e.CurrencySymbol) : e.EditorType == DCrmEditableGrid.Editors.Decimal ? b = _thisHelpers.AddDecimalFormat(b, e.Precision) : e.EditorType == DCrmEditableGrid.Editors.Numeric ? b = _thisHelpers.AddIntegerFormat(b) : e.EditorType == DCrmEditableGrid.Editors.Text && "url" == o && (k.test(b) || (b = "http://" + b)), _thisHelpers.SetActiveCellText(f, b) } else if (void 0 != g) { var u = _thisHelpers.GetActiveCellText(f); e.EditorType != DCrmEditableGrid.Editors.Text && (u = _thisHelpers.RemoveNumericFormat(u), u = parseFloat(u.replace(_thisGlobals.userCurrencySettings.DecimalSymbol, "."))); var v = f.attr(_thisGlobals.DataAttr.Cell.RecordGuid), w = { RecordGuid: v, EditorType: e.EditorType, OriginalValue: u, NewValue: "" }; j = g(w, n), j === !0 ? (_thisHelpers.SetActiveCellText(f, b), l = !0) : l = !1 } else _thisHelpers.SetActiveCellText(f, b), l = !0; return !!l && (e.theUpdater(f, d), !0) }, v = function () { i.is(":visible") && i.hide(), j.is(":visible") && j.hide() }; return e.CloseEditor = function () { e.is(":visible") && e.hide(), j.is(":visible") && j.hide() }, e.on("blur", function (b) { return l && m || (u(), i.is(":visible") || j.is(":visible") || (f = a.activeCell, e.hide(), f && f.length && f.focus())), l = !0, m = !1, b.stopPropagation(), !1 }).on("keypress", function (a) { if (e.EditorType != DCrmEditableGrid.Editors.Text) { var b = a.which || a.keycode, c = !1, d = this.selectionStart; if (b === _thisGlobals.userCurrencySettings.CurrencySymbolCharCode || b === _thisGlobals.userCurrencySettings.NumberSeparatorCharCode) c = !0; else if (b === _thisGlobals.userCurrencySettings.DecimalSymbolCharCode) { if (e.EditorType == DCrmEditableGrid.Editors.Numeric) c = !0; else if (e.EditorType == DCrmEditableGrid.Editors.Decimal || e.EditorType == DCrmEditableGrid.Editors.Currency) { var f = e.val(); f.length > 0 && f.contains(_thisGlobals.userCurrencySettings.DecimalSymbol) && (c = !0) } } else if (b === DCrmEditableGrid.Keys.HYPHON) { var f = e.val(); (0 != d || f.contains("-")) && (c = !0) } else b >= DCrmEditableGrid.Keys.KEY0 && b <= DCrmEditableGrid.Keys.KEY9 || (a.shiftKey || b < DCrmEditableGrid.Keys.KEY0 || b > DCrmEditableGrid.Keys.KEY9) && b != DCrmEditableGrid.Keys.BACKSPACE && b != DCrmEditableGrid.Keys.DEL && (c = !0); if (c) return a.preventDefault(), a.stopPropagation(), !1 } }).on("keydown", function (b) { var c = b.which || b.keycode, d = !1; if (l = !1, m = !0, v(), c === DCrmEditableGrid.Keys.ENTER) l = !0, u(), i.is(":visible") && j.is(":visible") || (e.hide(), f = a.activeCell, f && f.length && f.focus()), d = !0; else if (c === DCrmEditableGrid.Keys.ESC) setTimeout(v, 10), f = a.activeCell, e.hide(), f && f.length && f.focus(), d = !0; else if (c === DCrmEditableGrid.Keys.TAB && (l = !0, d = !0, u(), (!i.is(":visible") || !j.is(":visible")) && (e.hide(), f = a.activeCell, f && f.length))) { var g = _thisHelpers.Movement(f, DCrmEditableGrid.Keys.ARROWRIGHT); g && g.length && g.length > 0 ? (e.PossibleMove = g, setTimeout(function () { e.PossibleMove.focus(), e.PossibleMove.trigger("click") }, 50)) : f.focus() } if (d) return b.preventDefault(), b.stopPropagation(), !1 }).on("paste", function (a) { setTimeout(v, 10), e.attr("data-item-inputeditor-value", e.val()), m = !0, setTimeout(function () { if (e.EditorType != DCrmEditableGrid.Editors.Text) { var a = e.val().trim(); a = _thisHelpers.RemoveNumericFormat(a); var b = e.attr("data-item-inputeditor-value"); if ($.isNumeric(a)) { if (e.EditorType == DCrmEditableGrid.Editors.Numeric) { var c = a.indexOf(_thisGlobals.userCurrencySettings.DecimalSymbol); if (c != -1) try { a = a.substr(0, a.length - c) } catch (a) { return void e.val(b) } } e.val(a) } else e.val(b) } }, 2) }), e.DestroyEditor = function () { e.off("blur").off("keypress").off("keydown").off("paste"), e.remove() }, e }, $.fn.DCrmEditableGrid.DatePicker = function (a, b, c) {
    "use strict"; var d = _thisGlobals.userDatetimeSettings.DateFormat, e = { FieldSchemaName: b.FieldSchemaName, FieldLabel: b.FieldLabel, ParentEntitySchemaName: b.ParentEntitySchemaname, ParentEntityLabel: b.ParentEntityName }, f = _thisHelpers.GenerateUUID(), g = _thisHelpers.GenerateUUID(), h = $('<div style="position:absolute;display:none;" id="' + f + '" ><input id="' + g + '" type=text  readonly="readonly" style="position:absolute;border:none;" /></div>').appendTo(a.parent()); h.EditorType = b.editor; var i = h.EditorType == DCrmEditableGrid.Editors.DateTimePicker; i && (d += " " + _thisGlobals.userDatetimeSettings.TimeFormat); var j, k, l = !1, m = b.validator, n = b.RequireValue, o = c; h.theUpdater = void 0, h.RefreshOnSave = !1, h.SetInternals = function (a) { $("#" + g).width($("#" + f).width()).height($("#" + f).height()), $("#" + g).val(a.trim()).focus() }, h.CloseEditor = function () { h.is(":visible") && ($("#" + g).datetimepicker("hide"), h.hide()) }; var p = function () { o.is(":visible") && o.hide(), h.is(":visible") && h.hide() }; return $("#" + g).datetimepicker({
        timepicker: i, format: d, formatDate: _thisGlobals.userDatetimeSettings.DateFormat, formatTime: _thisGlobals.userDatetimeSettings.TimeFormat, onShow: function (b, c) { k = void 0, j = a.activeCell, void 0 !== j && 0 !== j.length && (k = _thisHelpers.GetActiveCellText(j)) }, onChangeDateTime: function (a, b) {
            l = b.val() != k
        }, onClose: function (b, c) { if (h.is(":visible")) { if (j = a.activeCell, void 0 === j || 0 === j.length) return; if (0 == l) return p(), void j.focus(); var f = c.val(), g = k; if (0 == f.trim().length) { var i = _thisHelpers.GetActiveCellText(j); if (n) { var q = j.offset().top - (o.height() + 8), r = j.offset().left; return o.css("left", r).css("top", q).width(j.width() - 20).show(), c.val(i), void c.focus() } i.length > 0 && (_thisHelpers.SetActiveCellText(j, ""), h.theUpdater(j, g)) } try { var s = b.dateFormat(d); if (s == k) return p(), void j.focus(); k = k || ""; var t = !0, u = !0; if (void 0 != m) { var v = j.attr(_thisGlobals.DataAttr.Cell.RecordGuid), w = { RecordGuid: v, EditorType: h.EditorType, OriginalValue: k, NewValue: s }; t = m(w, e), t === !0 ? _thisHelpers.SetActiveCellText(j, s) : u = !1 } else _thisHelpers.SetActiveCellText(j, s); u && h.theUpdater(j, g) } catch (a) { LogEx("Datetime Picker Exception\r\n" + a.message) } p(), j.focus() } }
    }), h.DestroyEditor = function () { $("#" + g).datetimepicker("destroy"), h.empty(), h.remove() }, h
}, $.fn.DCrmEditableGrid.CheckBox = function (a, b) { "use strict"; function m(a) { a && a.length > 0 && (j.CheckedLabel = _thisHelpers.GetUserLocalizedLabel(a[0].OptionSet.TrueOption.Label), j.UncheckedLabel = _thisHelpers.GetUserLocalizedLabel(a[0].OptionSet.FalseOption.Label), j.optionsData[0].text = j.CheckedLabel, j.optionsData[1].text = j.UncheckedLabel, $(h).attr(_thisGlobals.DataAttr.Header.CheckedText, j.CheckedLabel).attr(_thisGlobals.DataAttr.Header.UncheckedText, j.UncheckedLabel), l.attr("data-on", j.CheckedLabel).attr("data-off", j.UncheckedLabel)) } var f, c = _thisHelpers.GenerateUUID(), d = _thisHelpers.GenerateUUID(), e = _thisHelpers.GenerateUUID(), g = b.validator, h = "#" + b.HeaderIdToUpdate, i = { FieldSchemaName: b.FieldSchemaName, FieldLabel: b.FieldLabel, ParentEntitySchemaName: b.ParentEntitySchemaname, ParentEntityLabel: b.ParentEntityName }, j = $("<div></div>").attr("id", c).addClass("GridCheckboxContainer").hide().appendTo(a.parent()); j.theUpdater = void 0, j.RefreshOnSave = !1, j.EditorType = b.editor, j.CheckedLabel = b.CheckText, j.UncheckedLabel = b.UncheckedText, j.PossibleMove = void 0, j.optionsData = [{ text: j.CheckedLabel, value: "1" }, { text: j.UncheckedLabel, value: "0" }]; var k = $('<input type="checkbox" />').attr("id", d).addClass("cmn-toggle cmn-toggle-yes-no").appendTo(j), l = $("<label></label>").attr("id", e).attr("for", d).attr("data-on", j.CheckedLabel).attr("data-off", j.UncheckedLabel).appendTo(j); return j.SetInternals = function (b) { var g = b == j.CheckedLabel; k.prop("checked", g), l.width(j.width() - 3).height(j.height() - 4), j.show().focus(), $(window.document).off("mousedown").off("keydown").on("mousedown", function (a) { if (a.target) { var b = $(a.target).attr("id"); if (b == d || b == e || b == c) return !1; $(window.document).off("keydown").off("mousedown"), j.hide(), $(a.target).focus() } }).on("keydown", function (b) { console.log("Handling IE 10-11 specific! Does not fire in Chrome, FF, ..."); var c = b.which || b.keycode, d = !1, e = !1; if (c === DCrmEditableGrid.Keys.ESC && (d = !0, j.hide(), f = a.activeCell, f && f.length && f.focus()), c == DCrmEditableGrid.Keys.TAB && (e = !0, c = DCrmEditableGrid.Keys.ARROWRIGHT), c >= DCrmEditableGrid.Keys.ARROWLEFT && c <= DCrmEditableGrid.Keys.ARROWDOWN) { if (j.hide(), d = !0, f = a.activeCell, f && f.length) { var g = _thisHelpers.Movement(f, c); g && g.length && g.length > 0 ? (j.PossibleMove = g, j.PossibleMove.focus(), e && setTimeout(function () { j.PossibleMove.trigger("click") }, 50)) : f.focus() } } else 32 == c && (d = !0, k.trigger("click")); if (d) return b.preventDefault(), b.stopPropagation(), !1 }) }, j.CloseEditor = function () { j.is(":visible") && ($(window.document).off("keydown").off("mousedown"), j.hide()) }, j.IsVisible = function () { return j.is(":visible") }, j.SimulateClick = function () { k.trigger("click") }, j.SetWidthAndLocation = function (a) { j.offset({ left: a.left, top: a.top }).width(a.width + 1), l.width(j.width() - 3).height(j.height() - 4) }, k.on("click", function (b) { if (f = a.activeCell, void 0 !== f && 0 !== f.length) { var c = k.is(":checked") ? j.CheckedLabel : j.UncheckedLabel, d = _thisHelpers.GetActiveCellText(f), e = d; if (d === c) return !0; var h = !0, l = !0; if (void 0 != g) { var m = f.attr(_thisGlobals.DataAttr.Cell.RecordGuid), n = { RecordGuid: m, EditorType: j.EditorType, OriginalValue: d, NewValue: c, IsChecked: !!k.is(":checked") }; h = g(n, i), h === !0 ? _thisHelpers.SetActiveCellText(f, c) : l = !1 } else _thisHelpers.SetActiveCellText(f, c); l ? j.theUpdater(f, e) : k.prop("checked", !k.prop("checked")) } }), j.DestroyEditor = function () { k.off("click").off("keydown"), j.empty(), j.remove() }, XrmServiceToolkit.Soap.RetrieveAttributeMetadata(b.ParentEntitySchemaname, b.FieldSchemaName, !0, m), j }, $.fn.DCrmEditableGrid.SetEntityState = function (a, b, c, d, e) { "use strict"; var f = _thisHelpers.GenerateUUID(), g = $('<div class="DescriptionBox statusBoxControl" style="height:100px;"></div>').attr("id", f).hide().appendTo("body"), h = $('<div class="statusBoxControl"></div>').attr("id", _thisHelpers.GenerateUUID()).appendTo(g); f = _thisHelpers.GenerateUUID(), $('<label class="statusBoxControl" style="margin-right:5px;width:80px;display:inline-block;font-weight:bold;"></label>').attr("id", _thisHelpers.GenerateUUID()).text("Status").attr("for", f).appendTo(h); for (var i = $('<select class="statusBoxControl" style="width: 100px;"></select>').attr("id", f).on("change", function (b) { l.empty(); for (var c = $(this).find(":selected"), d = c.val(), e = void 0, f = 0; f < a.StatusReason.length; f++) a.StatusReason[f].state == d && (void 0 == e && (e = a.StatusReason[f].value), l.append($("<option>", { value: a.StatusReason[f].value, text: a.StatusReason[f].text }))); l.val(e) }).appendTo(h), j = 0; j < a.Status.length; j++) i.append($("<option>", { value: a.Status[j].value, text: a.Status[j].text })); i.val(c); var k = $('<div class="statusBoxControl" style="margin-top:5px;"></div>').attr("id", _thisHelpers.GenerateUUID()).appendTo(g); f = _thisHelpers.GenerateUUID(), $('<label class="statusBoxControl" style="margin-right:5px;width:80px;display:inline-block;font-weight:bold;"></label>').attr("id", _thisHelpers.GenerateUUID()).text("Status Reason").attr("for", f).appendTo(k); for (var l = $('<select class="statusBoxControl" style="width: 100px;"></select>').attr("id", f).appendTo(k), j = 0; j < a.StatusReason.length; j++) a.StatusReason[j].state == c && l.append($("<option>", { value: a.StatusReason[j].value, text: a.StatusReason[j].text })); l.val(d); var m = $('<div class="statusBoxControl" style="margin-top:5px;"></div>').attr("id", _thisHelpers.GenerateUUID()).appendTo(g); f = _thisHelpers.GenerateUUID(); var n = $('<input class="statusBoxControl" type="checkbox" checked="checked" />').attr("id", f).appendTo(m); $('<label class="statusBoxControl" style="margin-left:5px;display:inline-block;font-weight:bold;"></label>').attr("id", _thisHelpers.GenerateUUID()).text("Refresh grid after setting state").attr("for", f).appendTo(m); var o = $('<div class="flyout-ButtonContainer statusBoxControl" style="height:20px;padding-top:5px;"></div>').attr("id", _thisHelpers.GenerateUUID()).appendTo(g), p = $('<button class="statusBoxControl"></button>').attr("id", _thisHelpers.GenerateUUID()).text(_thisGlobals.Translation_Labels.Ok).on("click", function (c) { c.stopPropagation(); var d = i.find(":selected"), f = l.find(":selected"), h = parseInt(f.val()); h == -1 && (h = null); try { XrmServiceToolkit.Soap.SetState(a.SchemaName, b, parseInt(d.val()), h); n.is(":checked") && setTimeout(function () { $("#" + e).trigger("click") }, 100) } catch (a) { LogEx("Exception - Unable to setState\r\n" + a.message) } g.DestroyEditor() }).appendTo(o), q = $('<button class="statusBoxControl"></button>').attr("id", _thisHelpers.GenerateUUID()).text(_thisGlobals.Translation_Labels.Cancel).on("click", function (a) { a.stopPropagation(), g.DestroyEditor() }).appendTo(o); return $(window.document).off("mousedown").on("mousedown", function (a) { if (a.target) { var b = $(a.target).hasClass("statusBoxControl"); if (!b) { if ("OPTION" == a.target.tagName && $(a.target).parent().hasClass("statusBoxControl")) return; g.hide() } } }), g.DestroyEditor = function () { $(window.document).off("mousedown"), g.hide(), p.off("click"), q.off("click"), g.empty(), g.remove() }, g }, $.fn.DCrmEditableGrid.EntityStatesBox = function (a, b, c) { "use strict"; function h(b) { if (b.length > 0) for (var c = 0; c < b[0].OptionSet.Options.length; c++) g.EntityStates.Status.push({ text: _thisHelpers.GetUserLocalizedLabel(b[0].OptionSet.Options[c].Label), value: b[0].OptionSet.Options[c].Value }); for (var c = 0; c < g.EntityStates.Status.length; c++) l.append($("<option>", { value: g.EntityStates.Status[c].value, text: g.EntityStates.Status[c].text })); XrmServiceToolkit.Soap.RetrieveAttributeMetadata(a, "statuscode", !0, i) } function i(a) { if (a.length > 0) for (var b = 0; b < a[0].OptionSet.Options.length; b++) g.EntityStates.StatusReason.push({ text: _thisHelpers.GetUserLocalizedLabel(a[0].OptionSet.Options[b].Label), value: a[0].OptionSet.Options[b].Value, state: a[0].OptionSet.Options[b].State }); _thisGlobals.EntityStates.push(g.EntityStates) } function r(a) { var b = a[0].attributes.statecode.value, d = a[0].attributes.statuscode ? a[0].attributes.statuscode.value : -1; n.empty(); for (var f = 0; f < g.EntityStates.StatusReason.length; f++) g.EntityStates.StatusReason[f].state == b && n.append($("<option>", { value: g.EntityStates.StatusReason[f].value, text: g.EntityStates.StatusReason[f].text })); l.val(b), n.val(d), e = c.activeCell, g.css({ left: e.offset().left, top: e.offset().top }).show(), $(window.document).off("mousedown").on("mousedown", function (a) { if (a.target) { var b = $(a.target).hasClass("statusBoxControl"); if (!b) { if ("OPTION" == a.target.tagName && $(a.target).parent().hasClass("statusBoxControl")) return; g.hide() } } }) } var e, d = b.validator, f = { FieldSchemaName: b.FieldSchemaName, FieldLabel: b.FieldLabel, ParentEntitySchemaName: b.ParentEntitySchemaname, ParentEntityLabel: b.ParentEntityName }, g = $('<div class="statusBox statusBoxControl"></div>').attr("id", _thisHelpers.GenerateUUID()).hide().appendTo(c.parent()); g.EditorType = b.editor, g.IsStatusField = "statecode" == b.FieldSchemaName, g.theUpdater = void 0, g.EntityStates = { SchemaName: a, Status: [], StatusReason: [] }, g.RefreshOnSave = !1, g.RecId = null, g.PrimaryIdAttribute = null, XrmServiceToolkit.Soap.RetrieveAttributeMetadata(a, "statecode", !0, h); var j = $('<div class="statusBoxControl"></div>').attr("id", _thisHelpers.GenerateUUID()).appendTo(g), k = _thisHelpers.GenerateUUID(); $('<label class="statusBoxControl" style="margin-right:5px;width:80px;display:inline-block;font-weight:bold;"></label>').attr("id", _thisHelpers.GenerateUUID()).text("Status").attr("for", k).appendTo(j); var l = $('<select class="statusBoxControl" style="width: 100px;"></select>').attr("id", k).on("change", function (a) { n.empty(); for (var b = $(this).find(":selected"), c = parseInt(b.val()), d = void 0, e = 0; e < g.EntityStates.StatusReason.length; e++) g.EntityStates.StatusReason[e].state == c && (void 0 == d && (d = g.EntityStates.StatusReason[e].value), n.append($("<option>", { value: g.EntityStates.StatusReason[e].value, text: g.EntityStates.StatusReason[e].text }))); n.val(d) }).appendTo(j), m = $('<div class="statusBoxControl" style="margin-top:5px;"></div>').attr("id", _thisHelpers.GenerateUUID()).appendTo(g); k = _thisHelpers.GenerateUUID(), $('<label class="statusBoxControl" style="margin-right:5px;width:80px;display:inline-block;font-weight:bold;"></label>').attr("id", _thisHelpers.GenerateUUID()).text("Status Reason").attr("for", k).appendTo(m); var n = $('<select class="statusBoxControl" style="width: 100px;"></select>').attr("id", k).appendTo(m), o = $('<div class="statusBox-ButtonContainer statusBoxControl"></div>').attr("id", _thisHelpers.GenerateUUID()).appendTo(g), p = $('<button class="statusBoxControl"></button>').attr("id", _thisHelpers.GenerateUUID()).text(_thisGlobals.Translation_Labels.Ok).on("click", function (a) { a.stopPropagation(); var b = l.find(":selected"), h = n.find(":selected"), i = g.IsStatusField ? b : h; try { var j = parseInt(h.val()); j == -1 && (j = null); XrmServiceToolkit.Soap.SetState(g.EntityStates.SchemaName, g.RecId, parseInt(b.val()), j); if (g.hide(), e = c.activeCell, e && e.length) { var m = !0, o = !0, p = _thisHelpers.GetActiveCellText(e); if (void 0 != d) { var q = e.attr(_thisGlobals.DataAttr.Cell.RecordGuid), r = { RecordGuid: q, EditorType: g.EditorType, OriginalLabel: p, OriginalValue: e.attr(_thisGlobals.DataAttr.Cell.Optionset.SelectedValue), NewLabel: i.text(), NewValue: i.val() }; m = d(r, f), m !== !0 && (o = !1) } o && (_thisHelpers.SetActiveCellText(e, i.text()), e.attr(_thisGlobals.ToolTipAttrName, i.text()), e.attr(_thisGlobals.DataAttr.Cell.Optionset.SelectedValue, i.val()), e.attr(_thisGlobals.DataAttr.Cell.ChangedAttrValue, i.val()), g.theUpdater()), e.focus() } } catch (a) { LogEx("Exception - Unable to setState\r\n" + a.message) } g.hide() }).appendTo(o), q = $('<button class="statusBoxControl"></button>').attr("id", _thisHelpers.GenerateUUID()).text(_thisGlobals.Translation_Labels.Cancel).on("click", function (a) { a.stopPropagation(), g.hide() }).appendTo(o); return g.DestroyEditor = function () { $(window.document).off("mousedown"), g.hide(), p.off("click"), q.off("click"), g.empty(), g.remove() }, g.CloseEditor = function () { g.hide() }, g.SetInternals = function (b, c) { g.RecId = c; var d = '<fetch version="1.0" output-format="xml-platform" mapping="logical" distinct="false"><entity name="' + a + '"><attribute name="' + g.PrimaryIdAttribute + '" /><attribute name="statuscode" /><attribute name="statecode" /><filter type="and"><condition attribute="' + g.PrimaryIdAttribute + '" operator="eq" uitype="' + a + '" value="' + _thisHelpers.AddCurlyBrace(c) + '" /></filter></entity></fetch>'; XrmServiceToolkit.Soap.Fetch(d, !1, r) }, g }, $.fn.DCrmEditableGrid.Description = function (a, b, c) { "use strict"; var d, e = b.validator, f = b.RequireValue, g = c, h = { FieldSchemaName: b.FieldSchemaName, FieldLabel: b.FieldLabel, ParentEntitySchemaName: b.ParentEntitySchemaname, ParentEntityLabel: b.ParentEntityName }, i = _thisHelpers.GenerateUUID(), j = _thisHelpers.GenerateUUID(), k = _thisHelpers.GenerateUUID(), l = _thisHelpers.GenerateUUID(), m = _thisHelpers.GenerateUUID(), n = $('<div class="DescriptionBox"></div>').attr("id", i).hide().appendTo("body"); n.EditorType = b.editor, n.theUpdater = void 0, n.RefreshOnSave = !1; var o = $("<textarea rows=5>").attr("id", j).on("keydown", function (b) { var c = b.which || b.keycode; if (setTimeout(t, 10), c == DCrmEditableGrid.Keys.ESC) return t(), n.hide(), d = a.activeCell, d && d.length && d.focus(), b.preventDefault(), b.stopPropagation(), !1 }).appendTo(n), p = void 0; "A" != b.MaxLength && (p = parseInt(b.MaxLength), isNaN(p) ? p = void 0 : o.attr("maxlength", p)); var q = $('<div class="flyout-ButtonContainer"></div>').attr("id", m).appendTo(n), r = $("<button></button>").attr("id", k).text(_thisGlobals.Translation_Labels.Ok).on("click", function (b) { if (d = a.activeCell, void 0 === d || 0 === d.length) return t(), n.hide(), !1; var c = o.val(); if (f && (void 0 === c || null === c || 0 == c.trim().length)) { var i = d.offset().top - (g.height() + 8), j = d.offset().left; return g.css("left", j).css("top", i).width(d.width() - 20).show(), !1 } var k = _thisHelpers.GetActiveCellText(d), l = k; if (k === c) return t(), n.hide(), d.focus(), !1; var m = !0, p = !0; if (void 0 != e) { var q = d.attr(_thisGlobals.DataAttr.Cell.RecordGuid), r = { RecordGuid: q, EditorType: n.EditorType, OriginalValue: k, NewValue: c }; m = e(r, h), m === !0 ? _thisHelpers.SetActiveCellText(d, c) : p = !1 } else _thisHelpers.SetActiveCellText(d, c); p && (n.theUpdater(d, l), t(), n.hide(), d.focus()) }).appendTo(q), s = $("<button></button>").attr("id", l).text(_thisGlobals.Translation_Labels.Cancel).on("click", function (b) { n.hide(), t(), d = a.activeCell, d && d.length && d.focus() }).appendTo(q); n.SetInternals = function (a) { o.val(a.trim()).focus(), o.focus(), $(window.document).off("mousedown").on("mousedown", function (a) { if (a.target) { var b = $(a.target).attr("id"); b == i || b == j || b == m || b == k || b == l || ($(window.document).off("mousedown"), t(), n.hide(), $(a.target).focus()) } }) }; var t = function () { g.is(":visible") && g.hide() }; return n.CloseEditor = function () { n.hide() }, n.DestroyEditor = function () { r.off("click"), s.off("click"), o.off("keydown"), n.empty(), n.remove() }, n }, $.fn.DCrmEditableGrid.OptionSet = function (a, b, c) { "use strict"; function l(a) { if (a && a.length > 0) { for (var b = { Option: void 0 }, c = 0; c < a[0].OptionSet.Options.length; c++) j.optionsData.push({ text: _thisHelpers.GetUserLocalizedLabel(a[0].OptionSet.Options[c].Label), value: a[0].OptionSet.Options[c].Value, readonly: !1 }), window.parent.DCrmEgGridOnload && (b.Option = j.optionsData[c], window.parent.DCrmEgGridOnload(b, h)); $.each(j.optionsData, function (a, b) { b.readonly ? j.append($('<option disabled="true" value="' + b.value + '">' + b.text + "</option>")) : j.append($("<option>", { value: b.value, text: b.text })) }) } } var d, e = b.validator, g = (b.RequireValue, c), h = { FieldSchemaName: b.FieldSchemaName, FieldLabel: b.FieldLabel, ParentEntitySchemaName: b.ParentEntitySchemaname, ParentEntityLabel: b.ParentEntityName }, i = _thisHelpers.GenerateUUID(), j = $("<select class='OptionsetEditor' tabIndex='0'></select>").attr("id", i).on("blur", function (a) { k(), j.hide() }).on("change", function (b) { k(); var c = j.find(":selected"); if (j.hide(), d = a.activeCell, d && d.length) { var f = !0, g = !0, i = _thisHelpers.GetActiveCellText(d); if (void 0 != e) { var l = d.attr(_thisGlobals.DataAttr.Cell.RecordGuid), m = { RecordGuid: l, EditorType: j.EditorType, OriginalLabel: i, OriginalValue: d.attr(_thisGlobals.DataAttr.Cell.Optionset.SelectedValue), NewLabel: c.text(), NewValue: c.val() }; f = e(m, h), f !== !0 && (g = !1) } return g && (_thisHelpers.SetActiveCellText(d, c.text()), d.attr(_thisGlobals.DataAttr.Cell.Optionset.SelectedValue, c.val()), d.attr(_thisGlobals.DataAttr.Cell.ChangedAttrValue, c.val()), j.theUpdater(d, i, "op")), d.focus(), b.preventDefault(), b.stopPropagation(), !1 } }).on("keydown", function (b) { var c = b.which || b.keycode, e = !1; if (c === DCrmEditableGrid.Keys.ESC) return k(), j.hide(), d = a.activeCell, d && d.length && d.focus(), b.preventDefault(), b.stopPropagation(), !1; if (c == DCrmEditableGrid.Keys.TAB && (c = DCrmEditableGrid.Keys.ARROWRIGHT), c >= DCrmEditableGrid.Keys.ARROWLEFT && c <= DCrmEditableGrid.Keys.ARROWDOWN && (e = !0, j.hide(), d = a.activeCell, d && d.length)) { var f = _thisHelpers.Movement(d, c); f && f.length && f.length > 0 ? (j.PossibleMove = f, setTimeout(function () { j.PossibleMove.focus(), j.PossibleMove.trigger("click") }, 50)) : d.focus() } return e ? (b.preventDefault(), b.stopPropagation(), !1) : void 0 }).css("position", "absolute").hide().appendTo(a.parent()); j.optionsData = b.OptionSetData, j.EditorType = b.editor, j.theUpdater = void 0, j.RefreshOnSave = !1, j.EditorId = i, j.PossibleMove = void 0, j.SetInternals = function (a) { $.each(j.optionsData, function (b, c) { c.text == a && j.val(c.value) }), j.focus() }; var k = function () { g.is(":visible") && g.hide() }; return j.CloseEditor = function () { j.is(":visible") && j.hide() }, j.DestroyEditor = function () { j.off("blur").off("change").off("keydown"), j.remove() }, XrmServiceToolkit.Soap.RetrieveAttributeMetadata(b.ParentEntitySchemaname, b.FieldSchemaName, !0, l), j }, $.fn.DCrmEditableGrid.Lookup = function (a, b, c, d) { "use strict"; function s() { return { left: l.offset().left, top: l.offset().top + l.height() } } function t() { f = !0; for (var a = 0; a < l.LookupData.TargetEntities.length; a++) { new LookupDataHelper(l.LookupData.TargetEntities[a]) } } function u(a, b) { try { var c = XrmServiceToolkit.Soap.RetrieveAttributeMetadata(a, b, !0) } catch (c) { return LogIt("Attribute " + b + " does not exist in " + a), !1 } return c && c.length && c.length > 0 } function v(a) { if (0 == l.LookupData.TargetEntities.length) return []; if (u(l.LookupData.TargetEntities[a].Target, l.LookupData.TargetEntities[a].PrimaryIdAttribute)) { var b = '<fetch version="1.0" output-format="xml-platform" mapping="logical" distinct="false" page="1" count="' + m + '"><entity name="' + l.LookupData.TargetEntities[a].Target + '"><attribute name="' + l.LookupData.TargetEntities[a].PrimaryIdAttribute + '" /><attribute name="' + l.LookupData.TargetEntities[a].PrimaryNameAttribute + '" /><order attribute="' + l.LookupData.TargetEntities[a].PrimaryNameAttribute + '" descending="false" /></entity></fetch>'; return XrmServiceToolkit.Soap.Fetch(b) } return "" } function w(a, b) { if (0 == l.LookupData.TargetEntities.length) return []; a = a.replace("&", "&amp;").replace("<", "&lt;").replace(">", "&gt;"), LogIt("FetchtargetEntityPartial " + a); var c = '<fetch version="1.0" output-format="xml-platform" mapping="logical" distinct="false" page="1" count="' + m + '"><entity name="' + l.LookupData.TargetEntities[b].Target + '"><attribute name="' + l.LookupData.TargetEntities[b].PrimaryIdAttribute + '" /><attribute name="' + l.LookupData.TargetEntities[b].PrimaryNameAttribute + '" /><order attribute="' + l.LookupData.TargetEntities[b].PrimaryNameAttribute + '" descending="false" /><filter type="and"><condition attribute="' + l.LookupData.TargetEntities[b].PrimaryNameAttribute + '" operator="like" value="%' + a + '%" /></filter></entity></fetch>'; return XrmServiceToolkit.Soap.Fetch(c) } function x(a, b) { if (0 == l.LookupData.TargetEntities.length) return []; a = a.replace("&", "&amp;").replace("<", "&lt;").replace(">", "&gt;"), LogIt("FetchtargetEntityExact " + a); var c = '<fetch version="1.0" output-format="xml-platform" mapping="logical" distinct="false" page="1" count="' + m + '"><entity name="' + l.LookupData.TargetEntities[b].Target + '"><attribute name="' + l.LookupData.TargetEntities[b].PrimaryIdAttribute + '" /><attribute name="' + l.LookupData.TargetEntities[b].PrimaryNameAttribute + '" /><order attribute="' + l.LookupData.TargetEntities[b].PrimaryNameAttribute + '" descending="false" /><filter type="and"><condition attribute="' + l.LookupData.TargetEntities[b].PrimaryNameAttribute + '" operator="eq" value="' + a + '" /></filter></entity></fetch>'; return XrmServiceToolkit.Soap.Fetch(c) } function y(a) { for (var b = 0; b < l.LookupData.TargetEntities.length; b++) { var c = x(a, b); if (1 == c.length) return o.attr(_thisGlobals.DataAttr.Cell.Lookup.Guid, c[0].attributes[l.LookupData.TargetEntities[b].PrimaryIdAttribute].value), o.attr(_thisGlobals.DataAttr.Cell.Lookup.LogicalName, l.LookupData.TargetEntities[b].Target), !0 } return !1 } function z(a) { r.find("li").remove(); for (var b = 0, c = 0; c < l.LookupData.TargetEntities.length; c++) $("<li>" + l.LookupData.TargetEntities[c].LocalizedLabel + "</li>").addClass("header").appendTo(r), b += D(w(a, c), c); return B(), b } function A() { r.find("li").remove(); for (var a = 0, b = 0; b < l.LookupData.TargetEntities.length; b++) $("<li>" + l.LookupData.TargetEntities[b].LocalizedLabel + "</li>").addClass("header").appendTo(r), a += D(v(b), b); return B(), a } function B() { $("<li></li>").addClass("divider").appendTo(r); var a = $("<li></li>").appendTo(r), b = $('<a href="#" class="LookupLink"></a>').click(function (a) { for (var b = "", c = 0; c < l.LookupData.TargetEntities.length; c++) b += c > 0 ? "," + l.LookupData.TargetEntities[c].ObjectTypeCode : l.LookupData.TargetEntities[c].ObjectTypeCode; var d = "/_controls/lookup/lookupsingle.aspx?objecttypes=" + b, e = new window.parent.Xrm.DialogOptions; return e.width = 500, e.height = 500, window.parent.Xrm.Internal.openDialog(window.parent.Mscrm.CrmUri.create(d).toString(), e, null, null, C), r.hide(), !1 }).appendTo(a); $('<span class="LookupLinkSpan"></span>').text(_thisGlobals.Translation_Labels.LookupMoreRecords).addClass("itemTitle").appendTo(b) } function C(b) { if (b && b.items && b.items[0].id && b.items[0].name) { if (l.LookupData.LookupName = b.items[0].name, l.LookupData.LookupId = b.items[0].id.replace("{", "").replace("}", ""), l.LookupData.LookupLogicalName = b.items[0].typename, e = a.activeCell, void 0 === e || 0 === e.length) return o.val(l.LookupData.LookupName).attr(_thisGlobals.DataAttr.Cell.Lookup.Guid, l.LookupData.LookupId), r.hide(), o.focus(), !1; var c = _thisHelpers.GetActiveCellText(e); return G(l.LookupData.LookupName, l.LookupData.LookupId, l.LookupData.LookupLogicalName, c, e.attr(_thisGlobals.DataAttr.Cell.Lookup.Guid), e.attr(_thisGlobals.DataAttr.Cell.Lookup.LogicalName)) ? (_thisHelpers.SetActiveCellText(e, l.LookupData.LookupName), e.attr(_thisGlobals.DataAttr.Cell.Lookup.Guid, l.LookupData.LookupId), e.attr(_thisGlobals.DataAttr.Cell.Lookup.LogicalName, l.LookupData.LookupLogicalName), l.theUpdater(e, c, "lo"), l.hide(), r.hide(), e.focus(), !1) : (r.hide(), o.focus(), !1) } } function D(b, c) { var d = m; if (b.length < m && (d = b.length), 0 == d) return d; for (var f, g, j = 0; j < d; j++) if (b[j].attributes[l.LookupData.TargetEntities[c].PrimaryNameAttribute]) { var f = $("<li></li>").appendTo(r), g = $('<a href="#" class="LookupLink"></a>').attr(_thisGlobals.DataAttr.Cell.Lookup.Guid, b[j].attributes[l.LookupData.TargetEntities[c].PrimaryIdAttribute].value).attr(_thisGlobals.DataAttr.Cell.Lookup.EntityName, b[j].attributes[l.LookupData.TargetEntities[c].PrimaryNameAttribute].value).attr(_thisGlobals.DataAttr.Cell.Lookup.LogicalName, l.LookupData.TargetEntities[c].Target).on("click", function (b) { if (H(), l.LookupData.LookupId = $(this).attr(_thisGlobals.DataAttr.Cell.Lookup.Guid), l.LookupData.LookupName = $(this).attr(_thisGlobals.DataAttr.Cell.Lookup.EntityName), l.LookupData.LookupLogicalName = $(this).attr(_thisGlobals.DataAttr.Cell.Lookup.LogicalName), e = a.activeCell, void 0 === e || 0 === e.length) return o.val(l.LookupData.LookupName).attr(_thisGlobals.DataAttr.Cell.Lookup.Guid, l.LookupData.LookupId).attr(_thisGlobals.DataAttr.Cell.Lookup.LogicalName, l.LookupData.LookupLogicalName), r.hide(), o.focus(), !1; var c = _thisHelpers.GetActiveCellText(e); return G(l.LookupData.LookupName, l.LookupData.LookupId, l.LookupData.LookupLogicalName, c, e.attr(_thisGlobals.DataAttr.Cell.Lookup.Guid), e.attr(_thisGlobals.DataAttr.Cell.Lookup.LogicalName)) ? (_thisHelpers.SetActiveCellText(e, l.LookupData.LookupName), e.attr(_thisGlobals.DataAttr.Cell.Lookup.Guid, l.LookupData.LookupId), e.attr(_thisGlobals.DataAttr.Cell.Lookup.LogicalName, l.LookupData.LookupLogicalName), l.theUpdater(e, c, "lo"), l.hide(), r.hide(), e.focus(), !1) : (r.hide(), o.focus(), !1) }).appendTo(f); $('<span class="LookupLinkSpan"></span>').text(b[j].attributes[l.LookupData.TargetEntities[c].PrimaryNameAttribute].value).addClass("itemTitle").appendTo(g) } return d } var e, f = !1, g = b.validator, h = b.RequireValue, i = c, j = d, k = { FieldSchemaName: b.FieldSchemaName, FieldLabel: b.FieldLabel, ParentEntitySchemaName: b.ParentEntitySchemaname, ParentEntityLabel: b.ParentEntityName }, l = $('<div class="LookupContainer"></div>').hide().appendTo(a.parent()); l.EditorType = b.editor, l.theUpdater = void 0, l.RefreshOnSave = !1, l.HasLookupInitialized = !1, l.LookupData = b.LookupData; var m = 1 == l.LookupData.TargetEntities.length ? 5 : 3, n = _thisHelpers.GenerateUUID(), o = $('<input class="LookupInput" type="text" />').attr("id", n).appendTo(l), p = _thisHelpers.GenerateUUID(), r = ($('<button class="LookupSearchBtn"></button>').attr("id", p).on("click", function (a) { a.stopPropagation(), l.HasLookupInitialized || (l.HasLookupInitialized = !0, A()), H(); var b = s(); r.css({ left: b.left, top: b.top }).show() }).appendTo(l), $('<ul class="lookupDropDown"><div class="gutterLine"></div></ul>').hide().css({ left: 25, top: 0 }).appendTo(a.parent())); o.on("keydown", function (b) { var c = b.which || b.keycode; if (H(), c === DCrmEditableGrid.Keys.ENTER) { if (setTimeout(H, 10), e = a.activeCell, void 0 === e || 0 === e.length) return l.hide(), r.hide(), b.preventDefault(), b.stopPropagation(), !1; var d = _thisHelpers.GetActiveCellText(e), f = e.attr(_thisGlobals.DataAttr.Cell.Lookup.Guid), g = e.attr(_thisGlobals.DataAttr.Cell.Lookup.LogicalName), j = o.val(); if (0 == j.trim().length) { if (h) { var k = e.offset().top - (i.height() + 8), m = e.offset().left; return i.css("left", m).css("top", k).width(e.width() - 20).show(), o.focus().select(), b.preventDefault(), b.stopPropagation(), !1 } return _thisHelpers.SetActiveCellText(e, j), e.attr(_thisGlobals.DataAttr.Cell.Lookup.Guid, ""), l.theUpdater(e, d, "lo"), l.hide(), r.hide(), e.focus(), b.preventDefault(), b.stopPropagation(), !1 } if (!y(j)) return setTimeout(function () { I(_thisGlobals.Translation_Labels.NotaValidEntry) }, 10), b.preventDefault(), b.stopPropagation(), !1; if (d === j) return l.hide(), r.hide(), e.focus(), b.preventDefault(), b.stopPropagation(), !1; var n = o.attr(_thisGlobals.DataAttr.Cell.Lookup.Guid), p = o.attr(_thisGlobals.DataAttr.Cell.Lookup.LogicalName); return G(j, n, p, d, f, g) && (l.theUpdater(e, d, "lo"), l.hide(), r.hide(), e.focus()), b.preventDefault(), b.stopPropagation(), !1 } return c === DCrmEditableGrid.Keys.ESC ? (setTimeout(H, 10), l.hide(), r.hide(), e = a.activeCell, e && e.length && e.focus(), b.preventDefault(), b.stopPropagation(), !1) : c === DCrmEditableGrid.Keys.TAB ? (b.preventDefault(), b.stopPropagation(), !1) : void 0 }).on("cut paste", function (a) { setTimeout(H, 10), setTimeout(function () { var a = o.val(); if (a.trim().length > 0) if (a = a.toLowerCase(), z(a) > 0) { var b = s(); r.css({ left: b.left, top: b.top }).show() } else r.hide() }, 5) }).on("keyup", function (a) { var b = o.val(); if (b.trim().length > 0) if (z(b) > 0) { var c = s(); r.css({ left: c.left, top: c.top }).show() } else r.hide(); else if (A() > 0) { var c = s(); r.css({ left: c.left, top: c.top }).show() } else r.hide() }), l.SetWidthAndLocation = function (a) { l.offset({ left: a.left, top: a.top }).width(a.width + 1), o.width(l.width() - 30) }, l.SetInternals = function (a, b, c) { f || t(), l.show(), o.width(l.width() - 30).height(l.height()).attr(_thisGlobals.DataAttr.Cell.Lookup.Guid, b).attr(_thisGlobals.DataAttr.Cell.Lookup.LogicalName, c).val(a).focus().select(), l.LookupData.LookupName = a, l.LookupData.LookupId = b, l.LookupData.LookupLogicalName = c, $(window.document).off("mousedown").on("mousedown", function (a) { if (a.target) { var b = $(a.target).attr("id"); b == n || b == p || $(a.target).hasClass("LookupLinkSpan") || ($(window.document).off("mousedown"), l.CloseEditor(), $(a.target).focus()) } }) }; var G = function (a, b, c, d, f, h) { var j = !0; if (void 0 != g) { var m = e.attr(_thisGlobals.DataAttr.Cell.RecordGuid), n = { RecordGuid: m, EditorType: l.EditorType, OriginalLabel: d, OriginalGuid: f, OriginalLogicalName: h, NewLabel: a, NewGuid: b, NewLogicalName: c }; j = g(n, k) } return j && (_thisHelpers.SetActiveCellText(e, a), e.attr(_thisGlobals.DataAttr.Cell.Lookup.Guid, b), e.attr(_thisGlobals.DataAttr.Cell.Lookup.LogicalName, c), e.attr(_thisGlobals.DataAttr.Cell.ChangedAttrValue, b)), j }, H = function () { i.is(":visible") && i.hide(), j.is(":visible") && j.hide() }, I = function (a) { var b = e.offset().top - (j.height() + 8), c = e.offset().left; j.text(a).css("left", c).css("top", b).width(e.width() - 20).show(), o.focus() }; return l.CloseEditor = function () { l.is(":visible") && (l.hide(), r.hide()) }, l.DestroyEditor = function () { l.off("keydown").off("cut").off("paste").off("keyup"); var a = r.find("a"); a && a.length && a.off("click"), r.remove(), l.remove() }, t(), l }; var LookupDataHelper = function () { function a(a) { var b = this; b.lookupData = a, b.Callback = function (a) { a && 1 === a.length && (b.lookupData.ObjectTypeCode = a[0].ObjectTypeCode, b.lookupData.LocalizedLabel = _thisHelpers.GetUserLocalizedLabel(a[0].DisplayName, a[0].LogicalName), b.lookupData.PrimaryNameAttribute = a[0].PrimaryNameAttribute, b.lookupData.PrimaryIdAttribute = a[0].PrimaryIdAttribute) }, XrmServiceToolkit.Soap.RetrieveEntityMetadata(["Entity"], a.Target, !0, b.Callback) } return a }(); $.fn.DCrmEditableGrid.FilterLookup = function (a) {
    "use strict"; function h() { for (var a = 0; a < b.LookupCtrData.TargetEntities.length; a++) { var c = XrmServiceToolkit.Soap.RetrieveEntityMetadata(["Entity"], b.LookupCtrData.TargetEntities[a].Target, !0); c && 1 === c.length && (b.LookupCtrData.ObjectTypeCodes[a] = c[0].ObjectTypeCode, b.LookupCtrData.LocalizedLabels[a] = _thisHelpers.GetUserLocalizedLabel(c[0].DisplayName, c[0].LogicalName), b.LookupCtrData.PrimaryNameAttributes[a] = c[0].PrimaryNameAttribute, b.LookupCtrData.PrimaryIdAttributes[a] = c[0].PrimaryIdAttribute) } } function j(a) { if (0 == b.LookupCtrData.EntityTargets[a].length) return []; var d = '<fetch version="1.0" output-format="xml-platform" mapping="logical" distinct="false" page="1" count="' + c + '"><entity name="' + b.LookupCtrData.EntityTargets[a] + '"><attribute name="' + b.LookupCtrData.PrimaryIdAttributes[a] + '" /><attribute name="' + b.LookupCtrData.PrimaryNameAttributes[a] + '" /><order attribute="' + b.LookupCtrData.PrimaryNameAttributes[a] + '" descending="false" /></entity></fetch>'; return XrmServiceToolkit.Soap.Fetch(d) } function k(a, d) { if (0 == b.LookupCtrData.EntityTargets[d].length) return []; a = a.replace("&", "&amp;").replace("<", "&lt;").replace(">", "&gt;"), LogIt("FetchtargetEntityPartial " + a); var e = '<fetch version="1.0" output-format="xml-platform" mapping="logical" distinct="false" page="1" count="' + c + '"><entity name="' + b.LookupCtrData.EntityTargets[d] + '"><attribute name="' + b.LookupCtrData.PrimaryIdAttributes[d] + '" /><attribute name="' + b.LookupCtrData.PrimaryNameAttributes[d] + '" /><order attribute="' + b.LookupCtrData.PrimaryNameAttributes[d] + '" descending="false" /><filter type="and"><condition attribute="' + b.LookupCtrData.PrimaryNameAttributes[d] + '" operator="like" value="%' + a + '%" /></filter></entity></fetch>'; return XrmServiceToolkit.Soap.Fetch(e) } function n(a) { g.find("li").remove(); for (var c = 0, d = 0; d < b.LookupCtrData.EntityTargets.length; d++) $("<li>" + b.LookupCtrData.EntityTargets[d].capitalizeFirstLetter() + "</li>").addClass("header").appendTo(g), c += r(k(a, d), d); return p(), c } function o() { g.find("li").remove(); for (var a = 0, c = 0; c < b.LookupCtrData.EntityTargets.length; c++) $("<li>" + b.LookupCtrData.LocalizedLabels[c] + "</li>").addClass("header").appendTo(g), a += r(j(c), c); return p(), a } function p() {
        $("<li></li>").addClass("divider").appendTo(g); var a = $("<li></li>").appendTo(g), c = $('<a href="#" class="LookupLink"></a>').click(function (a) {
            var c = "/_controls/lookup/lookupinfo.aspx?LookupStyle=multi&objecttypes=" + b.LookupCtrData.ObjectTypeCodes.join(","), d = new window.parent.Xrm.DialogOptions; return d.width = 500, d.height = 700, window.parent.Xrm.Internal.openDialog(window.parent.Mscrm.CrmUri.create(c).toString(), d, null, null, q), g.hide(), !1
        }).appendTo(a); $('<span class="LookupLinkSpan"></span>').text(_thisGlobals.Translation_Labels.LookupMoreRecords).addClass("itemTitle").appendTo(c)
    } function q(a) { if (a && a.items && a.items[0].id && a.items[0].name) { for (var c = 0; c < a.items.length; c++) c > 0 ? (b.LookupCtrData.LookupName += ";" + a.items[c].name, b.LookupCtrData.LookupId += ";" + a.items[c].id.replace("{", "").replace("}", ""), b.LookupCtrData.LookupLogicalName += ";" + a.items[c].typename) : (b.LookupCtrData.LookupName = a.items[c].name, b.LookupCtrData.LookupId = a.items[c].id.replace("{", "").replace("}", ""), b.LookupCtrData.LookupLogicalName = a.items[c].typename); return b.$input.val(b.LookupCtrData.LookupName).attr(_thisGlobals.DataAttr.Cell.Lookup.Guid, b.LookupCtrData.LookupId).attr(_thisGlobals.DataAttr.Cell.Lookup.LogicalName, b.LookupCtrData.LookupLogicalName), g.hide(), !1 } } function r(a, d) { var e = c; if (a.length < c && (e = a.length), 0 == e) return e; for (var f, h, k = 0; k < e; k++) if (a[k].attributes[b.LookupCtrData.PrimaryNameAttributes[d]]) { var f = $("<li></li>").appendTo(g), h = $('<a href="#" class="LookupLink"></a>').attr(_thisGlobals.DataAttr.Cell.Lookup.Guid, a[k].attributes[b.LookupCtrData.PrimaryIdAttributes[d]].value).attr(_thisGlobals.DataAttr.Cell.Lookup.EntityName, a[k].attributes[b.LookupCtrData.PrimaryNameAttributes[d]].value).attr(_thisGlobals.DataAttr.Cell.Lookup.LogicalName, b.LookupCtrData.EntityTargets[d]).on("click", function (a) { return b.LookupCtrData.LookupId = $(this).attr(_thisGlobals.DataAttr.Cell.Lookup.Guid), b.LookupCtrData.LookupName = $(this).attr(_thisGlobals.DataAttr.Cell.Lookup.EntityName), b.LookupCtrData.LookupLogicalName = $(this).attr(_thisGlobals.DataAttr.Cell.Lookup.LogicalName), g.hide(), b.$input.val(b.LookupCtrData.LookupName).attr(_thisGlobals.DataAttr.Cell.Lookup.Guid, b.LookupCtrData.LookupId).attr(_thisGlobals.DataAttr.Cell.Lookup.LogicalName, b.LookupCtrData.LookupLogicalName).focus(), !1 }).appendTo(f); $('<span class="LookupLinkSpan"></span>').text(a[k].attributes[b.LookupCtrData.PrimaryNameAttributes[d]].value).addClass("itemTitle").appendTo(h) } return e } a = a || $("#fieldfilter_lookupinput"); var b = $('<div style="display:inline-block;border:none;"></div>').appendTo(a); b.HasLookupInitialized = !1, b.LookupCtrData = {}; var c = 5, d = _thisHelpers.GenerateUUID(); b.$input = $('<input style="width:160px;border: solid 1px lightgray;" type="text" />').attr("id", d).appendTo(b); var e = _thisHelpers.GenerateUUID(), g = ($('<button class="LookupSearchBtn"></button>').attr("id", e).on("click", function (c) { c.stopPropagation(), b.HasLookupInitialized || (b.HasLookupInitialized = !0, o()); var d = a.offset().top + a.height(); g.css({ left: a.offset().left, top: d }).show() }).appendTo(b), $('<ul class="lookupDropDown"><div class="gutterLine"></div></ul>').hide().css({ left: 25, top: 0 }).appendTo("body")); return b.ResetFilterLookup = function (a, f, i, j) { b.HasLookupInitialized = !1; var k = a.split(","); b.LookupCtrData = { LookupId: i, LookupLogicalName: j, LookupName: f, PrimaryIdAttributes: [], PrimaryNameAttributes: [], ObjectTypeCodes: [], LocalizedLabels: [], EntityTargets: k, EntityTargetsOriginal: a, TargetEntities: [] }; for (var l = 0; l < k.length; l++) b.LookupCtrData.TargetEntities.push({ Target: k[l], PrimaryIdAttribute: null, PrimaryNameAttribute: null, ObjectTypeCode: null, LocalizedLabel: null }); b.LookupCtrData.TargetEntities.length > 1 && (c = 3), g.find("li").remove(), h(), i && b.$input.attr(_thisGlobals.DataAttr.Cell.Lookup.Guid, i), b.$input.attr(_thisGlobals.DataAttr.Cell.Lookup.LogicalName, j).val(f).focus(), $(window.document).off("mousedown").on("mousedown", function (a) { if (a.target) { var b = $(a.target).attr("id"); b == d || b == e || $(a.target).hasClass("LookupLinkSpan") || g.hide() } }) }, b.$input.on("keydown", function (a) { var b = a.which || a.keycode; if (b === DCrmEditableGrid.Keys.ENTER || b === DCrmEditableGrid.Keys.ESC || b === DCrmEditableGrid.Keys.TAB) return g.hide(), a.preventDefault(), a.stopPropagation(), !1 }).on("cut paste", function (c) { setTimeout(function () { var c = b.$input.val(); if (c.trim().length > 0) if (c = c.toLowerCase(), n(c) > 0) { var d = a.offset().top + a.height(); g.css({ left: a.offset().left, top: d }).show() } else g.hide() }, 5) }).on("keyup", function (c) { var d = b.$input.val(); if (d.trim().length > 0) if (n(d) > 0) { var e = a.offset().top + a.height(); g.css({ left: a.offset().left, top: e }).show() } else g.hide(); else if (o() > 0) { var e = a.offset().top + a.height(); g.css({ left: a.offset().left, top: e }).show() } else g.hide() }), b.CloseEditor = function () { b.is(":visible") && (b.hide(), g.hide()) }, b.DestroyEditor = function () { b.off("keydown").off("cut").off("paste").off("keyup"); var a = g.find("a"); a && a.length && a.off("click"), g.remove(), b.remove() }, b
}; var CrmEditableGrid = function () {
    function a(a, j) {
        var k = this, l = { selectedRows: [], DirtyCells: [], SortList: [], AggregateCellIndex: -1, AggregateCellOp: null, CancelSelection: !0 }; k.mainTable = a, k.mainTableRaw = a[0], k.activeOptions = $.extend({}, l, j), k.errorcontainer = $("#" + k.activeOptions.RequiredErrorContainer), k.inputFormatErrorContainer = $("#" + k.activeOptions.InputFormatErrorContainer), k.activeCell = void 0, k.contextMenuTarget = void 0, k.SelectedRecordGuid = void 0, k.HighlightedRow = void 0, k.GridConfiguration = FindDCrmEGConfigurationBySchema(k.activeOptions.ParentEntityInfo.ParentEntitySchemaname), k.GetParentPrimaryNameAttributeValueCallback = function (a) { a && a.length > 0 && (k.activeOptions.ParentChildLookupInfo.PrimaryNameAttributeValue = a[0].attributes[k.activeOptions.ParentChildLookupInfo.PrimaryNameAttribute].value); var b = k.GridConfiguration.GetInlineFilterBySchemaName(k.activeOptions.ParentChildLookupInfo.LookupSchemaName); b && (b.Value = k.activeOptions.ParentChildLookupInfo.PrimaryNameAttributeValue) }, k.GetParentPrimaryAttributesCallback = function (a) { a && 1 === a.length && (k.activeOptions.ParentChildLookupInfo.PrimaryIdAttribute = a[0].PrimaryIdAttribute, k.activeOptions.ParentChildLookupInfo.PrimaryNameAttribute = a[0].PrimaryNameAttribute); var b = '<fetch version="1.0" output-format="xml-platform" mapping="logical" distinct="false"><entity name="' + k.activeOptions.ParentChildLookupInfo.ParentSchemaName + '"><attribute name="' + k.activeOptions.ParentChildLookupInfo.PrimaryNameAttribute + '" /><filter type="and"><condition attribute="' + k.activeOptions.ParentChildLookupInfo.PrimaryIdAttribute + '" operator="eq" value="' + _thisHelpers.AddCurlyBrace(k.activeOptions.ParentChildLookupInfo.Guid) + '" /></filter></entity></fetch>'; XrmServiceToolkit.Soap.Fetch(b, !1, k.GetParentPrimaryNameAttributeValueCallback) }, k.activeOptions.ParentChildLookupInfo.Related && XrmServiceToolkit.Soap.RetrieveEntityMetadata("Entity", k.activeOptions.ParentChildLookupInfo.ParentSchemaName, !0, k.GetParentPrimaryAttributesCallback), k.GridEditors = c(k.activeOptions.columneditors, k.mainTable, k.errorcontainer, k.inputFormatErrorContainer, k.activeOptions.ParentEntityInfo.ParentEntitySchemaname), k.showEditor = function (a) { if (k.mainTable.activeCell = void 0, k.activeCell = void 0, k.activeCell = k.mainTable.find("td:focus"), k.mainTable.activeCell = k.activeCell, k.activeCell && k.activeCell.length && k.activeCell[0].cellIndex > 0 && k.activeCell.attr(_thisGlobals.DataAttr.Cell.FooterCell) != _thisGlobals.DataAttr.NO && k.activeCell.attr("data-user-disabledfield") != _thisGlobals.DataAttr.YES) { k.activeCell.hasClass("IsDirty") ? $("#" + k.activeOptions.GridContainerIds.UndoChanges).removeClass("GreyImage") : $("#" + k.activeOptions.GridContainerIds.UndoChanges).addClass("GreyImage"); var b = k.GridEditors[k.activeCell[0].cellIndex]; if (null === b) return void (k.mainTable.activeCell = void 0); var c = _thisHelpers.GetActiveCellText(k.activeCell); if (b.EditorType == DCrmEditableGrid.Editors.Text || b.EditorType == DCrmEditableGrid.Editors.Numeric || b.EditorType == DCrmEditableGrid.Editors.Decimal || b.EditorType == DCrmEditableGrid.Editors.Currency) b.EditorType != DCrmEditableGrid.Editors.Currency && b.EditorType != DCrmEditableGrid.Editors.Decimal && b.EditorType != DCrmEditableGrid.Editors.Numeric || (c = _thisHelpers.RemoveNumericFormat(c)), b.val(c).css({ left: k.activeCell.offset().left, top: k.activeCell.offset().top }).width(k.activeCell.width() - 5).height(k.activeCell.height() - 2).show().focus().select(); else if (b.EditorType == DCrmEditableGrid.Editors.DatePicker || b.EditorType == DCrmEditableGrid.Editors.DateTimePicker) b.show().offset(k.activeCell.offset()).width(k.activeCell.width()).height(k.activeCell.height()).SetInternals(c); else if (b.EditorType == DCrmEditableGrid.Editors.Description) { var d = k.activeCell.offset().left, e = k.activeCell.offset().top + 5; e + b.height() >= $(window).height() && (e -= b.height()), d + b.width() >= $(window).width() && (d -= b.width()), b.show().css({ left: d, top: e }).SetInternals(c) } else if (b.EditorType == DCrmEditableGrid.Editors.Checkbox) if ("20" == k.activeOptions.BooleanEditorBehavoir) b.css("left", k.activeCell.offset().left).css("top", k.activeCell.offset().top).width(k.activeCell.width() + 1).height(k.activeCell.outerHeight() - 1).SetInternals(c); else { var f = b.CheckedLabel == c ? b.UncheckedLabel : b.CheckedLabel; _thisHelpers.SetActiveCellText(k.activeCell, f), k.updateCell(k.activeCell, c) } else b.EditorType == DCrmEditableGrid.Editors.OptionSet ? b.css("left", k.activeCell.offset().left).css("top", k.activeCell.offset().top + 1).width(k.activeCell.width() - 1).show().focus().SetInternals(c) : b.EditorType == DCrmEditableGrid.Editors.Lookup ? b.css("left", k.activeCell.offset().left).css("top", k.activeCell.offset().top + 1).width(k.activeCell.width()).height(k.activeCell.height() - 2).SetInternals(c, k.activeCell.attr(_thisGlobals.DataAttr.Cell.Lookup.Guid), k.activeCell.attr(_thisGlobals.DataAttr.Cell.Lookup.LogicalName)) : b.EditorType == DCrmEditableGrid.Editors.Status && b.SetInternals(c, k.activeCell.parent().attr(_thisGlobals.DataAttr.Cell.RecordGuid)) } else { k.activeCell = void 0, k.mainTable.activeCell = void 0, $("#" + k.activeOptions.GridContainerIds.UndoChanges).addClass("GreyImage"), g(k); for (var h = 0; h < k.GridEditors.length; h++) null != k.GridEditors[h] && k.GridEditors[h].CloseEditor() } return !0 }, d(k), k.mainTable.on("click", function (a) { if (!a.target || "TD" != a.target.tagName && "SPAN" != a.target.tagName) $("#" + k.activeOptions.GridContainerIds.UndoChanges).addClass("GreyImage"), k.activeCell = void 0; else { if (a.stopPropagation(), k.activeCell = void 0, "TD" == a.target.tagName ? k.activeCell = $(a.target) : "TD" == $(a.target).parent()[0].tagName && (k.activeCell = $(a.target).parent()), void 0 == k.activeCell || k.activeCell.attr(_thisGlobals.DataAttr.Cell.FooterCell) == _thisGlobals.DataAttr.NO || k.activeCell.parent().attr(_thisGlobals.DataAttr.Row.SubGrid.Id)) return $("#" + k.activeOptions.GridContainerIds.UndoChanges).addClass("GreyImage"), void (k.activeCell = void 0); k.activeCell[0].cellIndex > 0 ? (k.mainTable.focus(), k.activeCell.focus(), k.activeCell.hasClass("IsDirty") ? $("#" + k.activeOptions.GridContainerIds.UndoChanges).removeClass("GreyImage") : $("#" + k.activeOptions.GridContainerIds.UndoChanges).addClass("GreyImage"), k.showEditor()) : ($("#" + k.activeOptions.GridContainerIds.UndoChanges).addClass("GreyImage"), k.activeCell = void 0) } }).on("contextmenu", function (a) { if (a.target && ("TD" == a.target.tagName || "TH" == a.target.tagName || "SPAN" == a.target.tagName)) { if (a.stopPropagation(), "TH" == a.target.tagName) return k.contextMenuTarget = void 0, a.preventDefault(), a.stopPropagation(), !1; if ("TD" == a.target.tagName) k.contextMenuTarget = $(a.target); else { if ("TD" != $(a.target).parent()[0].tagName) return k.contextMenuTarget = void 0, a.preventDefault(), !1; k.contextMenuTarget = $(a.target).parent() } if (k.contextMenuTarget.parent().attr(_thisGlobals.DataAttr.Row.SubGrid.Id)) return k.contextMenuTarget = void 0, a.preventDefault(), a.stopPropagation(), !1; var c = $("<div></div>").addClass("InvisibleFrame").appendTo("body").on("contextmenu click", function () { return c.remove(), d.remove(), k.contextMenuTarget && (k.contextMenuTarget.focus(), k.contextMenuTarget = void 0), !1 }).show(), d = $('<ul class="contextMenuPlugin"><div class="gutterLine"></div></ul>').appendTo("body"), e = _thisHelpers.GetActiveCellText(k.contextMenuTarget).trim(), f = k.mainTable.find("thead:first").find("tr:first").find("th"), g = k.contextMenuTarget[0].cellIndex, h = $(f[g]).attr(_thisGlobals.DataAttr.Header.Required), i = !1; if (e = k.contextMenuTarget.hasClass("tfooterdummy") ? _thisHelpers.GetFooterCellText(k.contextMenuTarget).trim() : _thisHelpers.GetActiveCellText(k.contextMenuTarget).trim(), e.length > 0 && (i = !0, $('<li><a href="#" class="contextMenuLink" id="CopytoClipboardCtxMenuItem"><span class="itemTitle">' + _thisGlobals.Translation_Labels.CopyValueToClipboard + "</span></a></li>").appendTo(d)), k.activeOptions.ParentFormIsReadOnly || k.contextMenuTarget.attr(_thisGlobals.DataAttr.Cell.FooterCell) == _thisGlobals.DataAttr.NO || (i && $('<li class="divider"></li>').appendTo(d), i = !0, $('<li><a href="#" class="contextMenuLink" id="OpenRecordCtxMenuItem"><span class="itemTitle">' + _thisGlobals.Translation_Labels.OpenRecordInNewWindow + "</span></a></li>").appendTo(d), k.activeOptions.HasStatusField && k.activeOptions.DisplaySetRecordState && ($('<li class="divider"></li>').appendTo(d), $('<li><a href="#" class="contextMenuLink" id="SetRecordStatus"><span class="itemTitle">Set record status</span></a></li>').appendTo(d))), e.length > 0 && k.contextMenuTarget.attr(_thisGlobals.DataAttr.Cell.Lookup.Guid) && k.contextMenuTarget.attr(_thisGlobals.DataAttr.Cell.Lookup.Guid).trim().length > 0 && (i && $('<li class="divider"></li>').appendTo(d), i = !0, $('<li><a href="#" class="contextMenuLink" id="OpenLookupRecordCtxMenuItem"><span class="itemTitle">' + _thisGlobals.Translation_Labels.OpenLookupInNewWindow + "</span></a></li>").appendTo(d)), !k.activeOptions.ParentFormIsReadOnly && h == _thisGlobals.DataAttr.NO && e.length > 0 && k.contextMenuTarget.attr("data-user-disabledfield") != _thisGlobals.DataAttr.YES) { var j = parseInt($(f[g]).attr(_thisGlobals.DataAttr.Header.EditorType)); j != DCrmEditableGrid.Editors.DatePicker && j != DCrmEditableGrid.Editors.DateTimePicker || (i = !0, $('<li class="divider"></li>').appendTo(d), $('<li><a href="#" class="contextMenuLink" id="ClearValueCtxMenuItem"><span class="itemTitle">' + _thisGlobals.Translation_Labels.ClearValue + "</span></a></li>").appendTo(d)) } if (e.length > 0 && "url" == k.contextMenuTarget.attr(_thisGlobals.DataAttr.Cell.Format) && (i && $('<li class="divider"></li>').appendTo(d), i = !0, $('<li><a href="#" class="contextMenuLink" id="OpenUrlInNewWindowCtxMenuItem"><span class="itemTitle">' + _thisGlobals.Translation_Labels.OpenUrlInNewWindow + "</span></a></li>").appendTo(d)), !k.activeOptions.ParentFormIsReadOnly && k.activeOptions.DisplayCloneRecord && k.contextMenuTarget.attr(_thisGlobals.DataAttr.Cell.FooterCell) != _thisGlobals.DataAttr.NO && (i && $('<li class="divider"></li>').appendTo(d), i = !0, $('<li><a href="#" class="contextMenuLink" id="CloneRecordCtxMenuItem"><span class="itemTitle">Clone record</span></a></li>').appendTo(d)), !i) return c.remove(), d.remove(), a.preventDefault(), a.stopPropagation(), !1; d.find("a").click(function (a) { var e = $(this).attr("id"); if ("CopytoClipboardCtxMenuItem" == e) k.contextMenuTarget && (k.contextMenuTarget.hasClass("tfooterdummy") ? _thisHelpers.CopyTextToClipboard(_thisHelpers.GetFooterCellText(k.contextMenuTarget)) : _thisHelpers.CopyTextToClipboard(_thisHelpers.GetActiveCellText(k.contextMenuTarget))); else if ("OpenRecordCtxMenuItem" == e) k.contextMenuTarget && b(k.activeOptions.ParentEntityInfo.ParentEntitySchemaname, k.contextMenuTarget.attr(_thisGlobals.DataAttr.Cell.RecordGuid)); else if ("OpenLookupRecordCtxMenuItem" == e) b(k.contextMenuTarget.attr(_thisGlobals.DataAttr.Cell.Lookup.LogicalName), k.contextMenuTarget.attr(_thisGlobals.DataAttr.Cell.Lookup.Guid)); else if ("ClearValueCtxMenuItem" == e) { if (k.contextMenuTarget) try { var f = k.contextMenuTarget[0].cellIndex, g = k.activeOptions.columneditors[f - 1].validator; if (g) { var h = k.mainTable.find("thead:first").find("tr:first").find("th"), i = { EditorType: parseInt($(h[f]).attr(_thisGlobals.DataAttr.Header.EditorType)), OriginalValue: _thisHelpers.GetActiveCellText(k.contextMenuTarget), NewValue: "" }, j = { FieldSchemaName: k.activeOptions.columneditors[f - 1].FieldSchemaName, FieldLabel: k.activeOptions.columneditors[f - 1].FieldLabel, ParentEntitySchemaName: k.activeOptions.columneditors[f - 1].ParentEntitySchemaname, ParentEntityLabel: k.activeOptions.columneditors[f - 1].ParentEntityName }; g(i, j) && (_thisHelpers.SetActiveCellText(k.contextMenuTarget, ""), k.updateCell(k.contextMenuTarget)) } } catch (a) { } } else if ("OpenUrlInNewWindowCtxMenuItem" == e) window.open(_thisHelpers.GetActiveCellText(k.contextMenuTarget), "_blank"); else { if ("SetRecordStatus" == e) return c.remove(), d.remove(), k.contextMenuTarget && (setTimeout(DisplayRecordState, 100, k.activeOptions.ParentEntityInfo.ParentEntitySchemaname, k.activeOptions.ParentEntityInfo.PrimaryIdAttribute, k.contextMenuTarget.attr(_thisGlobals.DataAttr.Cell.RecordGuid), k.activeOptions.GridContainerIds.RefreshGrid), k.contextMenuTarget = void 0), !1; "CloneRecordCtxMenuItem" == e && k.contextMenuTarget && CloneRecord(k) } return c.remove(), d.remove(), k.contextMenuTarget && (k.contextMenuTarget.attr(_thisGlobals.DataAttr.Cell.FooterCell) != _thisGlobals.DataAttr.NO && (k.activeCell = k.contextMenuTarget, k.contextMenuTarget.focus()), k.contextMenuTarget = void 0), !1 }), d.show(); var l = a.pageX + 5, m = a.pageY; return m + d.height() >= $(window).height() && (m -= d.height()), l + d.width() >= $(window).width() && (l -= d.width()), d.css({ zIndex: 100006, left: l, top: m }).on("contextmenu", function () { return k.contextMenuTarget && (k.contextMenuTarget.focus(), k.contextMenuTarget = void 0), !1 }), a.preventDefault(), a.stopPropagation(), !1 } }).on("keydown", function (a) { var b = a.which || a.keycode, c = !1, d = !1; if (b == DCrmEditableGrid.Keys.TAB && (d = !0, b = DCrmEditableGrid.Keys.ARROWRIGHT), b >= DCrmEditableGrid.Keys.ARROWLEFT && b <= DCrmEditableGrid.Keys.ARROWDOWN) { for (var e = !1, f = 0; f < k.GridEditors.length; f++) if (null != k.GridEditors[f] && k.GridEditors[f].EditorType == DCrmEditableGrid.Editors.Checkbox && k.GridEditors[f].IsVisible()) { k.GridEditors[f].CloseEditor(), e = !0; break } var g = _thisHelpers.Movement($(a.target), b); g && g.length && g.length > 0 && (k.mainTable.focus(), g.focus(), g[0].cellIndex > 0 && g.attr(_thisGlobals.DataAttr.Cell.FooterCell) != _thisGlobals.DataAttr.NO ? (k.activeCell = g, k.activeCell.hasClass("IsDirty") ? $("#" + k.activeOptions.GridContainerIds.UndoChanges).removeClass("GreyImage") : $("#" + k.activeOptions.GridContainerIds.UndoChanges).addClass("GreyImage"), e && d && k.showEditor()) : ($("#" + k.activeOptions.GridContainerIds.UndoChanges).addClass("GreyImage"), k.activeCell = void 0), c = !0) } else if (b == DCrmEditableGrid.Keys.ENTER) k.activeCell = k.mainTable.find("td:focus"), c = k.activeCell && k.activeCell.length && k.activeCell[0].cellIndex > 0 && k.activeCell.attr(_thisGlobals.DataAttr.Cell.FooterCell) != _thisGlobals.DataAttr.NO, c ? (k.activeCell.focus(), k.showEditor()) : k.activeCell = void 0; else if (b == DCrmEditableGrid.Keys.ESC) { for (var f = 0; f < k.GridEditors.length; f++) if (null != k.GridEditors[f] && k.GridEditors[f].EditorType == DCrmEditableGrid.Editors.Checkbox && k.GridEditors[f].IsVisible) { k.GridEditors[f].CloseEditor(), k.activeCell && k.activeCell.focus(); break } } else if (32 == b) for (var f = 0; f < k.GridEditors.length; f++) if (null != k.GridEditors[f] && k.GridEditors[f].EditorType == DCrmEditableGrid.Editors.Checkbox && k.GridEditors[f].IsVisible) { c = !0, k.GridEditors[f].SimulateClick(); break } if (a.stopPropagation(), c) return a.preventDefault(), !1 }), k.mainTable.find("td").prop("tabindex", 1), k.GetBodyRows = function () { return k.mainTable.find(_thisGlobals.DefaultGridOptions.selectorBodyRows) }, k.GetHeaderCells = function () { return k.mainTable.find(_thisGlobals.DefaultGridOptions.selectorHeaders) }, k.HideEditors = function () { for (var a = 0; a < k.GridEditors.length; a++) null != k.GridEditors[a] && k.GridEditors[a].CloseEditor() }, k.clearTableBody = function () { function a() { for (; this.firstChild;) this.removeChild(this.firstChild) } /Trident\/[4-9]/.test(navigator.userAgent) ? a.apply(k.mainTable[0].tBodies[0]) : k.mainTable[0].tBodies[0].innerHTML = "" }, k.ResetColResizerHeight = function () { try { k.ColumnResizer && k.ColumnResizer.UpdatecolResizable() } catch (a) { LogEx("Resizer Exception: " + a.message) } }, k.ResetRowHighlighting = function () { e(k) }, k.UndoChangesEnabled = function (a, b) { b ? $("#" + k.activeOptions.GridContainerIds.UndoChanges).removeClass("GreyImage") : $("#" + k.activeOptions.GridContainerIds.UndoChanges).addClass("GreyImage") }, k.SaveUndoCancelEnable = function (a) { a ? ($("#" + k.activeOptions.GridContainerIds.UndoChanges).removeClass("GreyImage"), $("#" + k.activeOptions.GridContainerIds.SaveChanges).removeClass("GreyImage"), $("#" + k.activeOptions.GridContainerIds.CancelAllChanges).removeClass("GreyImage")) : ($("#" + k.activeOptions.GridContainerIds.UndoChanges).addClass("GreyImage"), $("#" + k.activeOptions.GridContainerIds.SaveChanges).addClass("GreyImage"), $("#" + k.activeOptions.GridContainerIds.CancelAllChanges).addClass("GreyImage")) }, k.RebuildCache = function () { i(k) }, k.RebuildCache(), k.updateCell = function (a, b, c) { void 0 != b && "undefined" != b || (b = ""), a.removeClass("fieldvaluesaved").addClass("IsDirty fieldvaluechanged"); var d = null, e = null, f = null, g = null; "op" == c ? (d = a.attr(_thisGlobals.DataAttr.Cell.OriginalAttrValue), e = a.attr(_thisGlobals.DataAttr.Cell.ChangedAttrValue)) : "lo" == c && (d = a.attr(_thisGlobals.DataAttr.Cell.OriginalAttrValue), e = a.attr(_thisGlobals.DataAttr.Cell.ChangedAttrValue), f = a.attr(_thisGlobals.DataAttr.Cell.Lookup.OriginalLogicalName), g = a.attr(_thisGlobals.DataAttr.Cell.Lookup.LogicalName)); var h = a.attr("id"); void 0 !== h && null !== h && "" != h || (h = _thisHelpers.GenerateUUID(), a.attr("id", h)); var i = !1, j = _thisHelpers.GetActiveCellText(a); if ($.each(k.activeOptions.DirtyCells, function (a, b) { if (b.id == h) return i = !0, b.CurrentUndoIndex == b.Changes.length - 1 ? (b.Changes.push(j), e && b.AdditionalAttr.push(e), f && b.AdditionalAttr.push(f), g && b.AdditionalAttr.push(g)) : (b.Changes.splice(b.CurrentUndoIndex + 1, 0, j), e && b.AdditionalAttr.splice(b.CurrentUndoIndex + 1, 0, e), f && b.AdditionalAttr.splice(b.CurrentUndoIndex + 1, 0, f), g && b.AdditionalAttr.splice(b.CurrentUndoIndex + 1, 0, g)), void b.CurrentUndoIndex++ }), !i) { var l = { id: h, CurrentUndoIndex: 1, originalContent: b, TargetCell: a }; l.Changes = new Array, l.AdditionalAttr = new Array, l.Changes.push(l.originalContent), d && l.AdditionalAttr.push(d), f && l.AdditionalAttr.push(f), l.Changes.push(j), e && l.AdditionalAttr.push(e), g && l.AdditionalAttr.push(g), k.activeOptions.DirtyCells.push(l) } k.SaveUndoCancelEnable(!0), a.attr(_thisGlobals.ToolTipAttrName, j), k.UpdateCellDone() }, k.SetHeadersCss = function (a, b, c) { a.find(".headertitle").removeClass(c[0]).removeClass(c[1]); var d = []; a.each(function (a) { var b = this.column || this.cellIndex; d[b] = $(this) }); for (var e = b.length, f = 0; f < e; f++) d[b[f][0]].find(".headertitle").addClass(c[b[f][1]]) }, k.RecordCountCallback = function (a) { a && a.length && a.length > 0 && (k.activeOptions.TotalRecordsCount = a[0].attributes.count.value, $("#" + k.activeOptions.GridContainerIds.TotalRecords).text(_thisGlobals.Translation_Labels.TotalRecords + " " + k.activeOptions.TotalRecordsCount)), XrmServiceToolkit.Soap.Fetch(k.GridConfiguration.GetFetchXml(), !1, k.RepopulateGridCallback) }, k.SaveGridChanges = function (a) { var b = k.activeOptions.DirtyCells; if (b.length > 0) { _thisHelpers.WaitDialog(!0); var c = [], d = k.mainTable.find("thead:first").find("tr:first").find("th"); if ($.each(b, function (a, b) { var e = b.TargetCell, f = b.TargetCell[0].cellIndex, g = _thisHelpers.GetActiveCellText(e), h = parseInt($(d[f]).attr(_thisGlobals.DataAttr.Header.EditorType)); h != DCrmEditableGrid.Editors.Currency && h != DCrmEditableGrid.Editors.Decimal || g.length > 0 && (g = parseFloat(_thisHelpers.RemoveNumericFormat(g).replace(_thisGlobals.userCurrencySettings.DecimalSymbol, "."))), c.push({ RecGuid: e.attr(_thisGlobals.DataAttr.Cell.RecordGuid), RowIndex: e.parent().attr(_thisGlobals.DataAttr.Row.InternalIndex), ValueToSave: g, FieldSchemaName: $(d[f]).attr(_thisGlobals.DataAttr.Header.SchemaName), InternalEditorType: h, InternalEditorFormat: k.GridEditors[f].EditorFormat, OptionSetValue: e.attr(_thisGlobals.DataAttr.Cell.Optionset.SelectedValue), CheckAttribute: k.GridEditors[f].CheckedLabel == g, LookupLogicalName: e.attr(_thisGlobals.DataAttr.Cell.Lookup.LogicalName), LookupId: e.attr(_thisGlobals.DataAttr.Cell.Lookup.Guid) }), e.removeClass("IsDirty fieldvaluechanged").addClass("fieldvaluesaved") }), window.parent.DCrmEgGridSaving && !window.parent.DCrmEgGridSaving(c, k.activeOptions.ParentEntityInfo)) return _thisHelpers.WaitDialog(), void LogIt("Save Cancelled by User"); k.activeOptions.DirtyCells = [], $("#" + k.activeOptions.GridContainerIds.UndoChanges).addClass("GreyImage"), $("#" + k.activeOptions.GridContainerIds.SaveChanges).addClass("GreyImage"), $("#" + k.activeOptions.GridContainerIds.CancelAllChanges).addClass("GreyImage"); try { f(c, k) } catch (a) { LogEx("Exception saving " + a.message) } _thisHelpers.WaitDialog(), k.activeOptions.RefreshAfterSave && a && k.RefreshGridRows() } }, k.CheckForDirtyCells = function () { return !(k.activeOptions.DirtyCells.length > 0 && 0 == confirm(_thisGlobals.UnsavedChangesMsg)) || (setTimeout(function () { k.SaveGridChanges() }, 100), !1) }, k.RefreshGridRows = function () { return 0 != k.CheckForDirtyCells() && (_thisHelpers.WaitDialog(!0), k.SaveUndoCancelEnable(!1), k.clearTableBody(), k.activeOptions.Page = 1, k.activeOptions.PagingCookies = [], k.activeOptions.PagingCookie = null, k.activeOptions.selectedRows = [], k.activeOptions.DirtyCells = [], void h(k.activeOptions.ParentEntityInfo.ParentEntitySchemaname, k.activeOptions.ParentEntityInfo.PrimaryIdAttribute, k.GridConfiguration.GetFetchXmlFilters(), k.RecordCountCallback)) }, k.mainTable.find(_thisGlobals.DefaultGridOptions.selectorHeaders).on("click", function (a) { var b = k.mainTableRaw.tBodies[0] && k.mainTableRaw.tBodies[0].rows.length || 0, c = this.column || this.cellIndex; if (0 == c) return k.UndoChangesEnabled(!1), !1; var d = $(this).parent(); d && d.length && 0 == d[0].rowIndex && k.UndoChangesEnabled(!1); var e = $(a.target), f = e.hasClass("recfilter"), g = e.hasClass("recfilterset"), h = e.attr("id"); if (k.HideEditors(), f || g) { var i = $(this), j = i.attr(_thisGlobals.DataAttr.Header.SchemaName), l = $("#fieldfilter_content"), m = l.attr(_thisGlobals.DataAttr.Header.EditorType), n = null; $("#fieldfilter_extrainput").val("").addClass("hidefilters"), _thisGlobals.Select2Option.empty(); var o = $("#fieldfilter_optionscontainer"); if (o.addClass("hidefilters"), m) { if (n = GetFilterUIStruc(parseInt(m)), n.ShowDate) { var p = $("#fieldfilter_inputcontainer").find(".xdsoft_datetimepicker"); p.addClass("hidefilters") } else n.ShowSelectBtn || $(n.input).val("").addClass("hidefilters"); $(n.div).addClass("hidefilters") } m = i.attr(_thisGlobals.DataAttr.Header.EditorType), m == DCrmEditableGrid.Editors.None && (m = i.attr(_thisGlobals.DataAttr.Header.ReadOnlyEditorType)), n = GetFilterUIStruc(parseInt(m)), g ? $("#fieldfilter_btnremovefilter").removeClass("hidefilters") : $("#fieldfilter_btnremovefilter").addClass("hidefilters"); var q = null, r = "", s = null, t = null, u = null, v = null, w = k.GridConfiguration.GetInlineFilterBySchemaName(j); w && (r = w.Value, q = w.Operator, s = w.FetchOp, t = w.FetchValue, u = w.LookupGuid, v = w.LookupUiType), console.log("Saved value[" + r + "]"); var x = null != q ? q : n.SelectedOptionValue; if ($(n.id).on("change", function (a) { a.stopPropagation(); var b = $(this).find(":selected"), c = $(this).attr("id"), d = $("#fieldfilter_content"), e = b.val(); if (d.attr("data-selected-filter", e), b.attr("data-fetchop") ? d.attr("data-fetchop", b.attr("data-fetchop")) : d.removeAttr("data-fetchop"), b.attr("data-fetchval") ? d.attr("data-fetchval", b.attr("data-fetchval")) : d.removeAttr("data-fetchval"), "fieldfilter_datetimeconditions" == c) { var f = $("#fieldfilter_inputcontainer").find(".xdsoft_datetimepicker"); "on" == e || "on-or-after" == e || "on-or-before" == e ? (f.removeClass("hidefilters"), $("#fieldfilter_extrainput").addClass("hidefilters")) : e.startsWith("last-x") || e.startsWith("next-x") || "olderthan-x-months" == e ? (f.addClass("hidefilters"), $("#fieldfilter_extrainput").removeClass("hidefilters").val(r)) : (f.addClass("hidefilters"), $("#fieldfilter_extrainput").addClass("hidefilters")) } else "fieldfilter_optionsetconditions" == c ? b.attr("data-fetchval") ? (o.addClass("hidefilters"), $("#fieldfilter_extrainput").removeClass("hidefilters").focus()) : ($("#fieldfilter_extrainput").addClass("hidefilters"), "null" == e || "not-null" == e ? o.addClass("hidefilters") : o.removeClass("hidefilters")) : "fieldfilter_stringconditions" == c && ("null" == e || "not-null" == e ? $("#fieldfilter_stringinput").addClass("hidefilters") : $("#fieldfilter_stringinput").removeClass("hidefilters")) }).val(x), $(n.div).removeClass("hidefilters"), n.ShowDate) { var p = $("#fieldfilter_inputcontainer").find(".xdsoft_datetimepicker"); "on" == x || "on-or-after" == x || "on-or-before" == x ? ($(n.input).val(r), p.removeClass("hidefilters")) : x.startsWith("next-x") || x.startsWith("last-x") || "olderthan-x-months" == x ? (p.addClass("hidefilters"), $("#fieldfilter_extrainput").removeClass("hidefilters").val(r)) : p.addClass("hidefilters") } else if (n.ShowSelectBtn) { var y = k.GridEditors[c], z = null; if (z = "statecode" == j ? y.EntityStates.Status : "statuscode" == j ? y.EntityStates.StatusReason : y.optionsData, $.each(z, function (a, b) { b.text.length > 0 && _thisGlobals.Select2Option.append($("<option>", { id: b.value, text: b.text })) }), null != t) $("#fieldfilter_extrainput").removeClass("hidefilters").val(r); else if ("null" != x && "not-null" != x) if (o.removeClass("hidefilters"), r && r.length > 0) if (r.contains(";")) for (var A = r.split(";"), B = "", C = 0; C < A.length; C++) C > 0 && (B += ";"), B += _thisGlobals.Select2Option.find("option[id = " + A[C] + "]").prop("selected", !0).text(); else _thisGlobals.Select2Option.find("option[id = " + r + "]").prop("selected", !0).trigger("change"); else _thisGlobals.Select2Option.find("option:eq(0)").prop("selected", !0) } else if (n.ShowLookupBtn) { var D = i.attr("data-lookuptarget-entities"); l.attr("data-uitypes", D), _thisGlobals.FilterLookupCtr.ResetFilterLookup(D, r, u, j), $(n.input).removeClass("hidefilters") } else "null" == x || "not-null" == x ? $(n.input).addClass("hidefilters") : $(n.input).removeClass("hidefilters").val(r); return t ? l.attr("data-fetchval", t) : l.removeAttr("data-fetchval"), l.attr(_thisGlobals.DataAttr.Header.EditorType, m).attr(_thisGlobals.DataAttr.Header.SchemaName, k.activeOptions.ParentEntityInfo.ParentEntitySchemaname).attr("data-field-schemaname", j).attr("data-col-index", c).attr("data-fetchop", null != s ? s : n.FetchOp).attr("data-filterimg-id", h).attr("data-input-id", n.input).attr("data-selected-filter", x).css({ left: i.offset().left, top: i.offset().top + i.outerHeight() }).show(), !1 } if (b > 0) { _thisHelpers.WaitDialog(!0), this.InitialSortOrder ? (this.order = 1 == this.order ? 0 : 1, this.InitialSortOrder = void 0) : this.order = this.count++ % 2; var E = k.GetHeaderCells(); if (k.activeOptions.SortList.length > 0) { var F = k.activeOptions.SortList[0]; F[0] != c && (E[F[0]].order = 0, E[F[0]].count = 0) } k.activeOptions.SortList = [], k.activeOptions.SortList.push([c, this.order]); var G = $(this).attr(_thisGlobals.DataAttr.Header.SchemaName); k.GridConfiguration.GetFetchXmlSorted(G, this.order); var H = [_thisGlobals.DefaultGridOptions.cssAsc, _thisGlobals.DefaultGridOptions.cssDesc]; return k.SetHeadersCss(E, k.activeOptions.SortList, H), k.RefreshGridRows(), !1 } }).on("mousedown", function () { if (k.activeOptions.CancelSelection) return this.onselectstart = function () { return !1 }, !1 }).on("mouseover", function (a) { var b = $(a.target); tname = b.parent()[0].tagName, "SPAN" == a.target.tagName || "BUTTON" == a.target.tagName || "IMG" == a.target.tagName || "INPUT" == a.target.tagName ? "TH" == tname && (k.HighlightedRow = b.parent()) : "TH" == a.target.tagName && (k.HighlightedRow = b), k.HighlightedRow && k.HighlightedRow.addClass("rowheaderhovercolor") }).on("mouseleave", function (a) { k.HighlightedRow && (k.HighlightedRow.removeClass("rowheaderhovercolor"), k.HighlightedRow = void 0) }), k.HeaderOnDragHandler = function (a) {
            var b = $(a.currentTarget).find("th"); if (b && k.activeCell && k.activeCell.length) {
                var c = $(b[k.activeCell[0].cellIndex]), d = k.GridEditors[k.activeCell[0].cellIndex]; if (d.is(":visible") && (d.EditorType == DCrmEditableGrid.Editors.Text || d.EditorType == DCrmEditableGrid.Editors.Numeric || d.EditorType == DCrmEditableGrid.Editors.Decimal || d.EditorType == DCrmEditableGrid.Editors.Currency ? d.offset({ top: d.offset().top, left: c.offset().left }).width(c.width() - 5) : d.EditorType == DCrmEditableGrid.Editors.Checkbox ? d.SetWidthAndLocation({ top: d.offset().top, left: c.offset().left, width: c.width() }) : d.EditorType == DCrmEditableGrid.Editors.Lookup ? d.SetWidthAndLocation({ top: d.offset().top, left: c.offset().left, width: c.width() }) : d.EditorType == DCrmEditableGrid.Editors.OptionSet ? d.css({ left: c.offset().left, top: d.offset().top }).width(c.width() - 1) : d.offset({
                    top: d.offset().top,
                    left: c.offset().left
                })), k.errorcontainer.is(":visible")) { var e = d.offset().top - (k.errorcontainer.height() + 8); k.errorcontainer.css("left", c.offset().left).css("top", e).width(d.width() - 20) } if (k.inputFormatErrorContainer.is(":visible")) { var e = d.offset().top - (k.inputFormatErrorContainer.height() + 8); k.inputFormatErrorContainer.css("left", c.offset().left).css("top", e).width(d.width() - 20) }
            }
        }, k.UpdateCellDone = function () { _thisHelpers.WaitDialog(), k.activeOptions.AutoSaveChanges && k.SaveGridChanges(!0) }, k.CurrencySymbolCallback = function (a) { if (a && a.length > 0) { a[0].attributes.currencysymbol && (k.activeOptions.EntityCurrencySymbol = a[0].attributes.currencysymbol ? a[0].attributes.currencysymbol.value : _thisGlobals.userCurrencySettings.DecimalSymbol), a[0].attributes.currencyprecision && (k.activeOptions.EntityCurrencyPrecision = a[0].attributes.currencyprecision.value); for (var b = 0; b < k.GridEditors.length; b++) if (null != k.GridEditors[b]) { if (k.GridEditors[b].EditorType == DCrmEditableGrid.Editors.Currency && (k.GridEditors[b].CurrencySymbol = k.activeOptions.EntityCurrencySymbol, 2 == k.GridEditors[b].PrecisionSource)) { k.GridEditors[b].Precision = k.activeOptions.EntityCurrencyPrecision; var c = k.mainTable.find("thead:first").find("tr:first").find("th"); $(c[b]).attr(_thisGlobals.DataAttr.Header.Precision, k.GridEditors[b].Precision).attr(_thisGlobals.DataAttr.Header.PrecisionSource, "2") } if (k.GridEditors[b].EditorType == DCrmEditableGrid.Editors.Decimal && 2 == k.GridEditors[b].PrecisionSource) { k.GridEditors[b].Precision = k.activeOptions.EntityCurrencyPrecision; var c = k.mainTable.find("thead:first").find("tr:first").find("th"); $(c[b]).attr(_thisGlobals.DataAttr.Header.Precision, k.GridEditors[b].Precision).attr(_thisGlobals.DataAttr.Header.PrecisionSource, "2") } } } }, k.UpdatePageDisplay = function () { if (k.activeOptions.TotalRecordsCount > 0) if (k.activeOptions.TotalRecordsCount > k.activeOptions.PagerSize) { var a = Math.ceil(k.activeOptions.TotalRecordsCount / k.activeOptions.PagerSize); $("#" + k.activeOptions.GridContainerIds.PagerLabel).text("Page " + k.activeOptions.Page + "/" + a) } else $("#" + k.activeOptions.GridContainerIds.PagerLabel).text("Page 1"); else $("#" + k.activeOptions.GridContainerIds.PagerLabel).text("Page 1") }, k.UpdatePagerButtons = function (a) { $("#" + k.activeOptions.GridContainerIds.PagerButtonFirst).attr("disabled", "disabled"), $("#" + k.activeOptions.GridContainerIds.PagerButtonPrev).attr("disabled", "disabled"), $("#" + k.activeOptions.GridContainerIds.PagerButtonNext).hide(), k.activeOptions.TotalRecordsCount > k.activeOptions.PagerSize && ($("#" + k.activeOptions.GridContainerIds.PagerButtonFirst).removeAttr("disabled"), $("#" + k.activeOptions.GridContainerIds.PagerButtonPrev).removeAttr("disabled"), k.activeOptions.HasMoreRecords && $("#" + k.activeOptions.GridContainerIds.PagerButtonNext).show()) }, k.RepopulateGridCallback = function (a, b, c) { k.activeOptions.HasMoreRecords = b, k.activeOptions.PagingCookie = c, null == k.activeOptions.PagingCookie && k.activeOptions.PagingCookies.push(c); var d = []; if (a && a.length && a.length > 0) { var f = k.GridConfiguration.SelectedFields, g = $("#" + k.activeOptions.GridContainerIds.Table).find("tbody:first"), h = "", i = "", j = void 0, l = void 0, m = ""; try { "Mobile" == _thisGlobals.xrmPage.context.client.getClient() && (m = ' style="height:30px;"') } catch (a) { } for (var n = 0; n < a.length; n++) { var o = a[n]; $tr = $("<tr" + m + "></tr>").attr(_thisGlobals.DataAttr.Cell.RecordGuid, o.id).appendTo(g); for (var p = { RecordGuid: o.id, Fields: [], RowIndex: n }, q = 0; q < f.length; q++) { var r = f[q], s = r.SchemaName.toLowerCase(); i = r.AttrType.toLowerCase(), h = "", j = void 0, l = k.activeOptions.columneditors[q]; var t = {}; t.ReadOnly = !1, t.SchemaName = s, t.FieldType = i, t.FieldIndex = q, t.BackgroundColor = null, t.ForgroundColor = null, i == _thisGlobals.CrmFieldTypes.OptionSetType || i == _thisGlobals.CrmFieldTypes.State || i == _thisGlobals.CrmFieldTypes.Status || i == _thisGlobals.CrmFieldTypes.BooleanType || i == _thisGlobals.CrmFieldTypes.MoneyType || i == _thisGlobals.CrmFieldTypes.DecimalType || i == _thisGlobals.CrmFieldTypes.DoubleType || i == _thisGlobals.CrmFieldTypes.IntegerType ? o.attributes[s] && (h = o.attributes[s].formattedValue, t.Value = o.attributes[s].value, i != _thisGlobals.CrmFieldTypes.OptionSetType && i != _thisGlobals.CrmFieldTypes.State && i != _thisGlobals.CrmFieldTypes.Status || (j = o.attributes[s].value, t.Value = j)) : i == _thisGlobals.CrmFieldTypes.LookupType || i == _thisGlobals.CrmFieldTypes.CustomerType || i == _thisGlobals.CrmFieldTypes.OwnerType ? o.attributes[s] && (h = o.attributes[s].name || "", l.LookupData.LookupId = o.attributes[s].id || "", l.LookupData.LookupLogicalName = o.attributes[s].logicalName, l.LookupData.LookupName = h, t.LookupGuid = l.LookupData.LookupId, t.LookupLogicalName = l.LookupData.LookupLogicalName, t.LookupName = h, t.Value = h) : i == _thisGlobals.CrmFieldTypes.TextType || i == _thisGlobals.CrmFieldTypes.MemoType ? o.attributes[s] && (h = o.attributes[s].value, t.Value = h, t.Format = l.Format, "Text" != l.Format && "Phone" != l.Format || !_thisHelpers.IsvalidPhoneNumber(h + "") || (l.Format = "Phone")) : i == _thisGlobals.CrmFieldTypes.DateTimeType && o.attributes[s] && (h = o.attributes[s].formattedValue, t.Value = h), t.FormattedValue = h; var u = $('<td tabindex="1"></td>').attr(_thisGlobals.ToolTipAttrName, h).attr(_thisGlobals.DataAttr.Cell.RecordGuid, o.id).html('<span class="fieldcelltext" ' + _thisGlobals.ToolTipAttrName + '="' + h + '">' + h + "</span>").appendTo($tr); i == _thisGlobals.CrmFieldTypes.TextType && l.Format && u.attr(_thisGlobals.DataAttr.Cell.Format, l.Format.toLowerCase()), l.LookupData ? u.attr(_thisGlobals.DataAttr.Cell.Lookup.Guid, l.LookupData.LookupId).attr(_thisGlobals.DataAttr.Cell.Lookup.LogicalName, l.LookupData.LookupLogicalName).attr(_thisGlobals.DataAttr.Cell.OriginalAttrValue, l.LookupData.LookupId).attr(_thisGlobals.DataAttr.Cell.Lookup.OriginalLogicalName, l.LookupData.LookupLogicalName) : i != _thisGlobals.CrmFieldTypes.OptionSetType && i != _thisGlobals.CrmFieldTypes.State && i != _thisGlobals.CrmFieldTypes.Status || u.attr(_thisGlobals.DataAttr.Cell.Optionset.SelectedValue, j + "").attr(_thisGlobals.DataAttr.Cell.OriginalAttrValue, j + ""), i != _thisGlobals.CrmFieldTypes.MoneyType && i != _thisGlobals.CrmFieldTypes.DecimalType && i != _thisGlobals.CrmFieldTypes.DoubleType && i != _thisGlobals.CrmFieldTypes.IntegerType || u.addClass("NumericTextbox"), p.Fields.push(t) } FireGridRowOnload($tr, p, k.activeOptions.ParentEntityInfo), d.push($tr) } k.activeOptions.TotalRecordsCount <= k.activeOptions.PagerSize ? $("#" + k.activeOptions.GridContainerIds.Pager).hide() : $("#" + k.activeOptions.GridContainerIds.Pager).show() } else $("#" + k.activeOptions.GridContainerIds.TotalRecords).text(_thisGlobals.Translation_Labels.TotalRecords + " 0"), $("#" + k.activeOptions.GridContainerIds.Pager).hide(); return 0 == d.length ? void _thisHelpers.WaitDialog() : (e(k), k.RebuildCache(), k.UpdatePageDisplay(), k.UpdatePagerButtons(), void _thisHelpers.WaitDialog()) }, k.DeleteSelectedRows = function (a) { var b = 0; a.sort(function (a, b) { return a - b }); var c = k.GetBodyRows(); if ($.each(a, function (a, d) { var e = $(c[d]).find("td.IsDirty"); e && e.length && ($.each(e, function (a, b) { var c = $(b).attr("id"), d = []; $.each(k.activeOptions.DirtyCells, function (a, b) { if (b.id == c) return void d.push(a) }); var e = 0; $.each(d, function (a, b) { b -= e, e++, k.activeOptions.DirtyCells.splice(b, 1) }) }), 0 == k.activeOptions.DirtyCells.length ? k.SaveUndoCancelEnable(!1) : k.UndoChangesEnabled(!1)), d -= b, b++, $(c[d]).remove(), c.splice(d, 1) }), c.length > 0) for (var d = 0; d < c.length; d++) $(c[d]).attr(_thisGlobals.DataAttr.Row.InternalIndex, d); else k.mainTable.find("tbody:first").empty(); k.activeOptions.selectedRows = [] }, k.activeOptions.DisplayFieldsSum && k.activeOptions.HaveNumericFields.HaveNumeric ? k.AggregateCallback = function (a) { if (a && a.length && a.length > 0 && a[0].attributes.fetch_aggregate) { var b = k.mainTable.find("tfoot:first").find("tr:first").find("td")[k.activeOptions.AggregateCellIndex]; _thisHelpers.SetFooterCellText($(b), k.activeOptions.AggregateCellOp.toUpperCase() + " " + a[0].attributes.fetch_aggregate.formattedValue) } } : k.mainTable.find("tfoot").empty().remove(), k.mainTable.find("tfoot tr").find(".aggregate").on("click", function (a) { a.stopPropagation(); var b = $(this).parent(), c = $('<ul class="contextMenuPlugin"><div class="gutterLine"></div></ul>').attr(_thisGlobals.DataAttr.Header.SchemaName, b.attr(_thisGlobals.DataAttr.Header.SchemaName)).attr("data-aggrefate-cellindex", b[0].cellIndex).appendTo("body"), d = $("<div></div>").addClass("InvisibleFrame").appendTo("body").on("contextmenu click", function (a) { return a.stopPropagation(), d.remove(), c.remove(), !1 }).show(), e = $('<li><a href="#" class="contextMenuLink" id="aggreagetavg"><span class="itemTitle">AVG</span></a></li>').appendTo(c); e = $('<li><a href="#" class="contextMenuLink" id="aggreagetmin"><span class="itemTitle">MIN</span></a></li>').appendTo(c), e = $('<li><a href="#" class="contextMenuLink" id="aggreagetmax"><span class="itemTitle">MAX</span></a></li>').appendTo(c), e = $('<li><a href="#" class="contextMenuLink" id="aggreagetsum"><span class="itemTitle">SUM</span></a></li>').appendTo(c), c.find("a").click(function (a) { var b = $(this), e = b.attr("id"), f = b.parent().parent().attr(_thisGlobals.DataAttr.Header.SchemaName); k.activeOptions.AggregateCellIndex = parseInt(b.parent().parent().attr("data-aggrefate-cellindex")); var g = "sum"; "aggreagetavg" == e ? g = "avg" : "aggreagetmin" == e ? g = "min" : "aggreagetmax" == e && (g = "max"), k.activeOptions.AggregateCellOp = g; var h = null; k.activeOptions.ParentChildLookupInfo.Related && (h = "", h += k.activeOptions.ParentChildLookupInfo.Guid ? '<filter type="and"><condition attribute="' + k.activeOptions.ParentChildLookupInfo.LookupSchemaName + '" operator="eq" uitype="' + k.activeOptions.ParentChildLookupInfo.ParentSchemaName + '" value="' + _thisHelpers.AddCurlyBrace(k.activeOptions.ParentChildLookupInfo.Guid) + '" /></filter>' : '<filter type="and"><condition attribute="' + k.activeOptions.ParentChildLookupInfo.LookupSchemaName + '" operator="eq" uitype="' + _thisGlobals.ParentFormEntityName.toLowerCase() + '" value="' + _thisHelpers.AddCurlyBrace(_thisGlobals.ParentFormEntityId) + '" /></filter>'); var i = "<fetch distinct='false' mapping='logical' aggregate='true'><entity name='" + k.activeOptions.ParentEntityInfo.ParentEntitySchemaname + "'><attribute name='" + f + "' alias='fetch_aggregate' aggregate='" + g + "' />"; return null != h && (i += h), i += "</entity></fetch>", d.remove(), c.remove(), a.stopPropagation(), XrmServiceToolkit.Soap.Fetch(i, !1, k.AggregateCallback), !1 }), c.show(), b = $(this), c.css({ zIndex: 100006, left: b.offset().left, top: b.offset().top + b.outerHeight() + 2 }).on("contextmenu", function () { return a.stopPropagation(), !1 }) }); for (var m = 0; m < k.GridEditors.length; m++) null != k.GridEditors[m] && (k.GridEditors[m].RefreshOnSave = k.activeOptions.RefreshAfterSave, k.GridEditors[m].EditorType != DCrmEditableGrid.Editors.Status ? k.GridEditors[m].theUpdater = k.updateCell : (k.GridEditors[m].theUpdater = k.RefreshGridRows, k.GridEditors[m].PrimaryIdAttribute = k.activeOptions.ParentEntityInfo.PrimaryIdAttribute)); k.UpdatePageDisplay(), k.UpdatePagerButtons(), k.activeOptions.EntityCurrencyid && k.activeOptions.HaveNumericFields.HavePrecision && XrmServiceToolkit.Soap.Fetch(GetCurrencyFetch(k.activeOptions.EntityCurrencyid), !1, k.CurrencySymbolCallback), $(window).on("resize", function () { if (k.activeCell && k.activeCell.length) { var a = k.GridEditors[k.activeCell[0].cellIndex]; null != a && a.is(":visible") && a.offset(k.activeCell.offset()).width(k.activeCell.width()).height(k.activeCell.height()) } }), k.DestroyGrid = function () { k.mainTable.off("click").off("contextmenu").off("keydown"), k.mainTable.find(_thisGlobals.DefaultGridOptions.selectorHeaders).off("click").off("mousedown").off("mouseover").off("mouseleave"), k.mainTable.find(_thisGlobals.DefaultGridOptions.selectorBodyRows).off("mouseover").off("mouseleave"), k.ColumnResizer && (k.ColumnResizer.destroy(), k.ColumnResizer = null) }, e(k), k.ColumnResizer = new colResizable({ ParentControlClass: k, onDrag: k.HeaderOnDragHandler })
    } function b(a, b) { var c = 1e8 + Math.floor(9e8 * Math.random()), d = window.parent.Xrm.Page.context.getClientUrl(); d.endsWith("/") || (d += "/"); var e = d + "main.aspx?etn=" + a + "&extraqs=&histKey=" + c + "&id=" + _thisHelpers.AddCurlyBrace(b) + "&newWindow=true&pagetype=entityrecord"; window.open(e, "", "status=0,resizable=1,width=1000px,height=800px") } function c(a, b, c, d, e) { var f = []; f[0] = null; for (var g = 0, h = 0; h < a.length; h++) switch (g++, a[h].editor) { case DCrmEditableGrid.Editors.Text: case DCrmEditableGrid.Editors.Numeric: case DCrmEditableGrid.Editors.Decimal: case DCrmEditableGrid.Editors.Currency: f[g] = new $.fn.DCrmEditableGrid.TextBox(b, a[h], c, d); break; case DCrmEditableGrid.Editors.DatePicker: case DCrmEditableGrid.Editors.DateTimePicker: f[g] = new $.fn.DCrmEditableGrid.DatePicker(b, a[h], c); break; case DCrmEditableGrid.Editors.Checkbox: f[g] = new $.fn.DCrmEditableGrid.CheckBox(b, a[h], c); break; case DCrmEditableGrid.Editors.Description: f[g] = new $.fn.DCrmEditableGrid.Description(b, a[h], c); break; case DCrmEditableGrid.Editors.OptionSet: f[g] = new $.fn.DCrmEditableGrid.OptionSet(b, a[h], c); break; case DCrmEditableGrid.Editors.Lookup: f[g] = new $.fn.DCrmEditableGrid.Lookup(b, a[h], c, d); break; case DCrmEditableGrid.Editors.Status: f[g] = new $.fn.DCrmEditableGrid.EntityStatesBox(e, a[h], b); break; default: f[g] = null } return f } function d(a) { var b = a; $("#" + b.activeOptions.GridContainerIds.RefreshGrid).click(function (a) { a.stopPropagation(), b.RefreshGridRows() }), $("#" + b.activeOptions.GridContainerIds.ClearAllFilters).click(function (a) { a.stopPropagation(), b.GridConfiguration.ClearInlineFilters(); var c = b.GetHeaderCells(); c.find("span.recfilterset").removeClass("recfilterset").addClass("recfilternotset"), b.RefreshGridRows() }), $("#" + b.activeOptions.GridContainerIds.AutoSave).click(function (a) { a.stopPropagation(), b.activeOptions.AutoSaveChanges = $(this).is(":checked"), b.activeOptions.AutoSaveChanges ? ($("#" + b.activeOptions.GridContainerIds.UndoChanges).hide(), $("#" + b.activeOptions.GridContainerIds.CancelAllChanges).hide(), $("#" + b.activeOptions.GridContainerIds.SaveChanges).hide()) : ($("#" + b.activeOptions.GridContainerIds.UndoChanges).show(), $("#" + b.activeOptions.GridContainerIds.CancelAllChanges).show(), $("#" + b.activeOptions.GridContainerIds.SaveChanges).show()) }), $("#" + b.activeOptions.GridContainerIds.UndoChanges).click(function (a) { if ($(this).hasClass("GreyImage")) return void LogIt("Undo is disabled"); if (b.activeCell && b.activeCell.length) { var d, c = b.activeOptions.DirtyCells; if (0 == c.length) return; for (var e = 0; e < c.length; e++) if (d = c[e], b.activeCell.attr("id") == d.id) { d.CurrentUndoIndex--, d.CurrentUndoIndex < 0 && (d.CurrentUndoIndex = d.Changes.length - 1); var f = d.Changes[d.CurrentUndoIndex]; if (d.originalContent == f && (d.TargetCell.removeClass("IsDirty fieldvaluechanged"), $("#" + b.activeOptions.GridContainerIds.UndoChanges).addClass("GreyImage"), 1 == c.length ? ($("#" + b.activeOptions.GridContainerIds.SaveChanges).addClass("GreyImage"), $("#" + b.activeOptions.GridContainerIds.CancelAllChanges).addClass("GreyImage"), b.activeOptions.DirtyCells = []) : b.activeOptions.DirtyCells.splice(e, 1)), _thisHelpers.SetActiveCellText(d.TargetCell, f), d.AdditionalAttr.length > 0) { var g = d.AdditionalAttr[0]; if (g) { var h = d.TargetCell[0].cellIndex, i = b.mainTable.find("thead:first").find("tr:first").find("th"), j = parseInt($(i[h]).attr(_thisGlobals.DataAttr.Header.EditorType)); j == DCrmEditableGrid.Editors.OptionSet ? d.TargetCell.attr(_thisGlobals.DataAttr.Cell.Optionset.SelectedValue, g) : j == DCrmEditableGrid.Editors.Lookup && (d.TargetCell.attr(_thisGlobals.DataAttr.Cell.Lookup.Guid, g), d.TargetCell.attr(_thisGlobals.DataAttr.Cell.Lookup.LogicalName, d.AdditionalAttr[1])) } } return b.activeCell.attr(_thisGlobals.ToolTipAttrName, f), b.activeCell.focus(), !1 } } }).addClass("GreyImage"), $("#" + b.activeOptions.GridContainerIds.CancelAllChanges).click(function (a) { if ($(this).hasClass("GreyImage")) return void LogIt("Undo all is disabled"); for (var d, c = b.activeOptions.DirtyCells, e = 0; e < c.length; e++) { if (d = c[e].TargetCell, _thisHelpers.SetActiveCellText(d, c[e].originalContent), d.removeClass("IsDirty fieldvaluechanged"), c[e].AdditionalAttr && c[e].AdditionalAttr.length && c[e].AdditionalAttr.length > 0) { var f = c[e].AdditionalAttr[0]; if (f) { var g = c[e].TargetCell[0].cellIndex, h = b.mainTable.find("thead:first").find("tr:first").find("th"), i = parseInt($(h[g]).attr(_thisGlobals.DataAttr.Header.EditorType)); i == DCrmEditableGrid.Editors.OptionSet ? d.attr(_thisGlobals.DataAttr.Cell.Optionset.SelectedValue, f) : i == DCrmEditableGrid.Editors.Lookup && (d.attr(_thisGlobals.DataAttr.Cell.Lookup.Guid, f), d.attr(_thisGlobals.DataAttr.Cell.Lookup.LogicalName, c[e].AdditionalAttr[1])) } } d.attr(_thisGlobals.ToolTipAttrName, c[e].originalContent) } b.activeOptions.DirtyCells = [], b.SaveUndoCancelEnable(!1) }).addClass("GreyImage"), $("#" + b.activeOptions.GridContainerIds.SaveChanges).click(function (a) { return a.stopPropagation(), $(this).hasClass("GreyImage") && !b.activeOptions.AutoSaveChanges ? (LogIt("Save is disabled"), !1) : void b.SaveGridChanges(!0) }).addClass("GreyImage"), $("#" + b.activeOptions.GridContainerIds.ExportToExcel).click(function (a) { if (a.stopPropagation(), 0 == b.activeOptions.TotalRecordsCount) return !1; var c = $('<ul class="contextMenuPlugin"><div class="gutterLine"></div></ul>').appendTo("body"), d = $("<div></div>").addClass("InvisibleFrame").appendTo("body").on("contextmenu click", function (a) { return a.stopPropagation(), d.remove(), c.remove(), !1 }).show(), e = $('<li><a href="#" class="contextMenuLink" id="ExportGridToExcel"><span class="itemTitle">Excel</span></a></li>').appendTo(c), f = $("<img>"); f.attr("src", "dcrmeg_excel"), f.insertBefore(e.find(".itemTitle")), e = $('<li><a href="#" class="contextMenuLink" id="ExportGridToCSV"><span class="itemTitle">CSV</span></a></li>').appendTo(c), f = $("<img>"), f.attr("src", "dcrmeg_csv16"), f.insertBefore(e.find(".itemTitle")), e = $('<li><a href="#" class="contextMenuLink" id="ExportGridToPdf"><span class="itemTitle">PDF</span></a></li>').appendTo(c), f = $("<img>"), f.attr("src", "dcrmeg_pdf16"), f.insertBefore(e.find(".itemTitle")), c.find("a").click(function (a) { var e = $(this).attr("id"), f = void 0; if ("ExportGridToExcel" == e) try { SaveGridAsExcel(b) } catch (a) { f = a.message } else if ("ExportGridToCSV" == e) try { SaveGridAsCsv(b) } catch (a) { f = a.message } else if ("ExportGridToPdf" == e) try { SaveGridAsPdf(b) } catch (a) { f = a.message } return d.remove(), c.remove(), a.stopPropagation(), f && DisplayCrmAlertDialog("Unable to export due to exception:\r" + f), !1 }), c.show(), $this = $(this), c.css({ zIndex: 100006, left: $this.offset().left, top: $this.offset().top + $this.outerHeight() + 2 }).on("contextmenu", function () { return a.stopPropagation(), !1 }) }), $("#" + b.activeOptions.GridContainerIds.AddNewRec).click(function (c) { c.stopPropagation(); var d = void 0; if (b.GridConfiguration.MSProductGrid) if (b.GridConfiguration.MSProductGridHelperc && b.GridConfiguration.MSProductGridHelperc.GetPriceList()) { var e = $("<div></div>").addClass("InvisibleFrame").appendTo("body").on("contextmenu click", function () { return e.remove(), f.remove(), !1 }).show(), f = $('<ul class="contextMenuPlugin"><div class="gutterLine"></div></ul>').appendTo("body"); $('<li><a href="#" class="contextMenuLink" id="getexistingproducts"><span class="itemTitle">Existing Products</span></a></li>').appendTo(f), $('<li><a href="#" class="contextMenuLink" id="newinlineproduct"><span class="itemTitle">Write-in Product</span></a></li>').appendTo(f), f.find("a").click(function (a) { var c = $(this).attr("id"), d = void 0; return "getexistingproducts" == c && b.GridConfiguration.MSProductGridHelperc.DisplayExistingProducts(), e.remove(), f.remove(), a.stopPropagation(), d && DisplayCrmAlertDialog("Unable to proceed due to exception:\r" + d), !1 }), f.show(), $this = $(this), f.css({ zIndex: 100006, left: $this.offset().left, top: $this.offset().top + $this.outerHeight() + 2 }).on("contextmenu", function () { return c.stopPropagation(), !1 }) } else b.GridConfiguration.MSProductGridHelperc.DisplayNativePricelistSelect(); else if ("30" == b.activeOptions.NewBtnBehavoir) DisplayNewButtonMenu(a, $(this)); else if ("20" == b.activeOptions.NewBtnBehavoir) try { window.parent.Xrm.Utility.openEntityForm(b.activeOptions.ParentEntityInfo.ParentEntitySchemaname) } catch (a) { d = a.message } else "10" == b.activeOptions.NewBtnBehavoir && (d = CreateInlineRecord(a)); return d && DisplayCrmAlertDialog("Unable to create new record due to exception:\r" + d), !1 }), $("#" + b.activeOptions.GridContainerIds.DeleteRec).click(function (a) { var c = b.activeOptions.selectedRows; if (0 != c.length) { for (var d = [], e = [], f = [], g = void 0, h = 0; h < c.length; h++) { g = $(c[h]); var i = g.find("td.IsDirty"); if (i && i.length) { if (1 != confirm('The record "' + _thisHelpers.GetActiveCellText($(i[0])) + '" contains unsaved changes.\n\nProceed to delete the record anyway?')) continue; d.push(parseInt(g.attr(_thisGlobals.DataAttr.Row.InternalIndex))), e.push(g.attr(_thisGlobals.DataAttr.Cell.RecordGuid)), f.push(g) } else d.push(parseInt(g.attr(_thisGlobals.DataAttr.Row.InternalIndex))), e.push(g.attr(_thisGlobals.DataAttr.Cell.RecordGuid)), f.push(g) } if (e.length > 0 && 1 == confirm('Proceed to delete "' + e.length + '" record?')) { if (window.parent.DCrmEgGridDeleting && !window.parent.DCrmEgGridDeleting(e, b.activeOptions.ParentEntityInfo)) return void LogIt("Deleting cancelled by user"); _thisHelpers.WaitDialog(!0); for (var j = [], k = [], l = "", h = 0; h < e.length; h++) try { XrmServiceToolkit.Soap.Delete(b.activeOptions.ParentEntityInfo.ParentEntitySchemaname, e[h]), j.push(d[h]), k.push(f[h]) } catch (a) { LogEx("Exception: Deleting Record " + a.message), l += a.message } if (_thisHelpers.WaitDialog(), j.length > 0) { try { for (var h = 0; h < k.length; h++) { var m = k[h].attr(_thisGlobals.DataAttr.Row.SubGrid.Row.Id); if (m) { if (k[h][0].DSubGridRow) { LogIt("Deleting subgrids before deleting row"); var n = k[h][0].DSubGridRow.attr(_thisGlobals.DataAttr.Row.SubGrid.Id); k[h][0].DSubGridRow = void 0, b.activeOptions.HasChildGrids && (b.SelectedRecordGuid = k[h].attr(_thisGlobals.DataAttr.Cell.RecordGuid), ParentGridSelectedRecord(b, n, !0)) } $("#" + m).empty().remove(), k[h].removeAttr(_thisGlobals.DataAttr.Row.SubGrid.Row.Id) } } } catch (a) { LogEx("Exception: deleting subgrids " + a.message) } b.DeleteSelectedRows(j), b.ResetColResizerHeight(), b.activeOptions.TotalRecordsCount = b.activeOptions.TotalRecordsCount - j.length, $("#" + b.activeOptions.GridContainerIds.TotalRecords).text(_thisGlobals.Translation_Labels.TotalRecords + " " + b.activeOptions.TotalRecordsCount), b.activeOptions.TotalRecordsCount <= b.activeOptions.PagerSize && $("#" + b.activeOptions.GridContainerIds.Pager).hide() } l.length > 0 && DisplayCrmAlertDialog("Error encountered during deletion.\r" + l) } } }), $("#" + b.activeOptions.GridContainerIds.PagerButtonFirst).click(function (a) { if (a.stopPropagation(), b.activeOptions.Page > 1) { if (0 == b.CheckForDirtyCells()) return !1; b.RefreshGridRows() } }), $("#" + b.activeOptions.GridContainerIds.PagerButtonPrev).click(function (a) { if (a.stopPropagation(), b.activeOptions.Page > 1) { if (0 == b.CheckForDirtyCells()) return !1; b.SaveUndoCancelEnable(!1), b.clearTableBody(), b.activeOptions.Page--, XrmServiceToolkit.Soap.Fetch(b.GridConfiguration.GetFetchXml(b.activeOptions.Page, b.activeOptions.PagingCookies[b.activeOptions.Page - 1]), !1, b.RepopulateGridCallback) } }), $("#" + b.activeOptions.GridContainerIds.PagerButtonNext).click(function (a) { if (a.stopPropagation(), b.activeOptions.HasMoreRecords) { if (0 == b.CheckForDirtyCells()) return !1; b.SaveUndoCancelEnable(!1), b.clearTableBody(), b.activeOptions.PagingCookies.length == b.activeOptions.Page.length ? b.activeOptions.PagingCookie = null : b.activeOptions.PagingCookie = "a", b.activeOptions.Page++, XrmServiceToolkit.Soap.Fetch(b.GridConfiguration.GetFetchXml(b.activeOptions.Page, b.activeOptions.PagingCookies[b.activeOptions.Page - 1]), !1, b.RepopulateGridCallback) } }), $("#" + b.activeOptions.GridContainerIds.CloneRecord).click(function (a) { a.stopPropagation(); var c = b.activeOptions.selectedRows; if (0 == c.length) return !1; for (var d = c.length - 1, e = 0; e < c.length; e++) CloneRecord(b, $(c[e]).clone(), d == e) }) } function e(a) { var b = a; b.mainTable.find(_thisGlobals.DefaultGridOptions.selectorBodyRows).off("mouseover").off("mouseleave").on("mouseover", function (a) { var c = $(a.target); tname = c.parent()[0].tagName, "SPAN" == a.target.tagName || "BUTTON" == a.target.tagName || "IMG" == a.target.tagName || "INPUT" == a.target.tagName ? "TD" == tname && (b.HighlightedRow = c.parent().parent()) : "TD" == a.target.tagName && (b.HighlightedRow = c.parent()), b.HighlightedRow && (b.HighlightedRow.attr(_thisGlobals.DataAttr.Row.SubGrid.Row.Id) || b.HighlightedRow.addClass("rowheaderhovercolor")) }).on("mouseleave", function (a) { b.HighlightedRow && (b.HighlightedRow.removeClass("rowheaderhovercolor"), b.HighlightedRow = void 0) }) } function f(a, b) { var c = void 0; if ($.each(a, function (a, d) { if (c) { if (c.id != d.RecGuid) { try { XrmServiceToolkit.Soap.Update(c) } catch (a) { LogEx("Exception: " + a.message) } c = new XrmServiceToolkit.Soap.BusinessEntity(b.activeOptions.ParentEntityInfo.ParentEntitySchemaname, d.RecGuid) } } else c = new XrmServiceToolkit.Soap.BusinessEntity(b.activeOptions.ParentEntityInfo.ParentEntitySchemaname, d.RecGuid); var f = null, g = null; if (d.InternalEditorType == DCrmEditableGrid.Editors.Text) d.ValueToSave.length > 0 && (f = d.ValueToSave); else if (d.InternalEditorType == DCrmEditableGrid.Editors.Numeric) d.ValueToSave.length > 0 && (g = parseInt(_thisHelpers.RemoveNumericFormat(d.ValueToSave))), f = { value: g, type: "int" }; else if (d.InternalEditorType == DCrmEditableGrid.Editors.DatePicker) d.ValueToSave.length > 0 && (f = Date.parseDate(d.ValueToSave)); else if (d.InternalEditorType == DCrmEditableGrid.Editors.Checkbox) f = { value: d.CheckAttribute, type: "boolean" }; else if (d.InternalEditorType == DCrmEditableGrid.Editors.OptionSet) f = 0 == d.ValueToSave.trim().length || "-1" == d.OptionSetValue ? { value: g, type: "OptionSetValue" } : { value: parseInt(d.OptionSetValue), type: "OptionSetValue" }; else if (d.InternalEditorType == DCrmEditableGrid.Editors.Description) d.ValueToSave.length > 0 && (f = d.ValueToSave); else if (d.InternalEditorType == DCrmEditableGrid.Editors.Lookup) { if (f = d.LookupId && d.LookupId.length > 0 ? { id: d.LookupId, logicalName: d.LookupLogicalName, type: "EntityReference" } : { value: g, type: "EntityReference" }, "ownerid" == d.FieldSchemaName) { try { XrmServiceToolkit.Soap.Assign(b.activeOptions.ParentEntityInfo.ParentEntitySchemaname, d.RecGuid, d.LookupLogicalName, d.LookupId) } catch (a) { LogEx("Exception: Setting owner " + a.message) } return } } else d.InternalEditorType == DCrmEditableGrid.Editors.Decimal ? (d.ValueToSave && (g = d.ValueToSave), f = { value: g, type: "decimal" }) : d.InternalEditorType == DCrmEditableGrid.Editors.Currency ? (d.ValueToSave && (g = d.ValueToSave), f = { value: g, type: "Money" }) : d.InternalEditorType == DCrmEditableGrid.Editors.DateTimePicker && (d.ValueToSave.length > 0 && (g = Date.parseDate(d.ValueToSave, _thisGlobals.userDatetimeSettings.DateTimeFormat)), f = { value: g, type: "dateTime" }); c.attributes[d.FieldSchemaName] = f }), c) try { XrmServiceToolkit.Soap.Update(c) } catch (a) { LogEx("Exception: " + a.message) } } function g(a) { var b = a; return b.errorcontainer.is(":visible") && b.errorcontainer.hide(), b.inputFormatErrorContainer.is(":visible") && b.inputFormatErrorContainer.hide(), !0 } function h(a, b, c, d) { var e = "<fetch mapping='logical' aggregate='true'><entity name='" + a + "'><attribute name='" + b + "' aggregate='count' alias='count' />"; c.length > 0 && (e += '<filter type="and">' + c + "</filter>"), e += "</entity></fetch>", XrmServiceToolkit.Soap.Fetch(e, !0, d) } function i(a) { var c = a.mainTableRaw, d = c.tBodies[0] && c.tBodies[0].rows.length || 0, e = c.tBodies[0].rows[0] && c.tBodies[0].rows[0].cells.length || 0; if (0 != d) { e++; for (var f = null, g = null, h = null, i = a.activeOptions, j = 0; j < d; ++j) { var k = $(c.tBodies[0].rows[j]); f = $('<td style="text-align:center"></td>'), i.ParentFormIsReadOnly || !i.UserCanDelete && !i.DisplayCloneRecordButton || (g = $("<input type='checkbox' />").attr(_thisGlobals.ToolTipAttrName, _thisGlobals.Translation_Labels.SelectRecord).click(function (a) { var b = $(this).parent().parent(); if (b && b.length) if ($(this).is(":checked")) i.selectedRows[i.selectedRows.length] = b[0], $(b[0]).addClass(_thisGlobals.DefaultGridOptions.rowSelectedCss); else { $(b[0]).removeClass(_thisGlobals.DefaultGridOptions.rowSelectedCss); for (var c = i.selectedRows.length - 1; c >= 0; c--) if ($(i.selectedRows[c]).attr(_thisGlobals.DataAttr.Row.InternalIndex) === $(b[0]).attr(_thisGlobals.DataAttr.Row.InternalIndex)) { i.selectedRows.splice(c, 1); break } } a.stopPropagation() }).appendTo(f)), h = i.HasChildGrids ? $("<img></img>").attr("src", _thisGlobals.DefaultGridOptions.ExpandRecordIcon).addClass("firstColOpenImg").attr(_thisGlobals.DataAttr.Row.SubGrid.ChildGridOpen, _thisGlobals.DataAttr.NO).click(function (b) { b.stopPropagation(), $this = $(this); var c = $this.parent().parent(); if ($this.attr(_thisGlobals.DataAttr.Row.SubGrid.ChildGridOpen) == _thisGlobals.DataAttr.NO) { $this.attr(_thisGlobals.DataAttr.Row.SubGrid.ChildGridOpen, _thisGlobals.DataAttr.YES), $this.attr("src", _thisGlobals.DefaultGridOptions.CollapsedRecordIcon); var d = _thisHelpers.GenerateUUID(), e = _thisHelpers.GenerateUUID(), f = a.GetHeaderCells(), g = $('<tr><td colspan="' + f.length + '"></td></tr>').attr("id", e).attr(_thisGlobals.DataAttr.Row.SubGrid.Id, d).insertAfter($this.parent().parent()); c.attr(_thisGlobals.DataAttr.Row.SubGrid.Row.Id, e), c[0].DSubGridRow = g, $gridParentDiv = $("<div></div>").attr("id", d).addClass("subgridparentdiv").appendTo(g.find("td:first")), c.addClass("bgSelectedSubGridRow"), a.SelectedRecordGuid = c.attr(_thisGlobals.DataAttr.Cell.RecordGuid), _thisHelpers.WaitDialog(!0), ParentGridSelectedRecord(a, $gridParentDiv) } else { $this.attr(_thisGlobals.DataAttr.Row.SubGrid.ChildGridOpen, _thisGlobals.DataAttr.NO), $this.attr("src", _thisGlobals.DefaultGridOptions.ExpandRecordIcon), c.removeClass("bgSelectedSubGridRow"); var h = c.attr(_thisGlobals.DataAttr.Row.SubGrid.Row.Id); if (h) { if (c[0].DSubGridRow) { var d = c[0].DSubGridRow.attr(_thisGlobals.DataAttr.Row.SubGrid.Id); c[0].DSubGridRow = void 0, a.SelectedRecordGuid = c.attr(_thisGlobals.DataAttr.Cell.RecordGuid), ParentGridSelectedRecord(a, d, !0) } $("#" + h).empty().remove(), c.removeAttr(_thisGlobals.DataAttr.Row.SubGrid.Row.Id) } } }).appendTo(f) : $("<img></img>").attr("src", _thisGlobals.DefaultGridOptions.OpenRecordIcon).attr(_thisGlobals.ToolTipAttrName, _thisGlobals.Translation_Labels.OpenRecord).attr(_thisGlobals.DataAttr.Row.SubGrid.ChildGridOpen, _thisGlobals.DataAttr.NO).click(function (a) { a.stopPropagation(); var c = $(this).parent().parent(); c && c.length > 0 && ("10" == i.OpenRecordBehavoir ? window.parent.Xrm.Utility.openEntityForm(i.ParentEntityInfo.ParentEntitySchemaname, $(c).attr(_thisGlobals.DataAttr.Cell.RecordGuid)) : b(i.ParentEntityInfo.ParentEntitySchemaname, $(c).attr(_thisGlobals.DataAttr.Cell.RecordGuid))) }).appendTo(f), $("td:first", k).before(f), $(k[0]).attr(_thisGlobals.DataAttr.Row.InternalIndex, j) } } } return a
}(), colResizable = function () {
    function a(a) {
        var b = this, c = { draggingClass: "JCLRgripDrag", gripInnerHtml: "", liveDrag: !0, fixed: !0, minWidth: 15, headerOnly: !1, hoverCursor: "e-resize", dragCursor: "e-resize", postbackSafe: !1, flush: !1, marginLeft: null, marginRight: null, disable: !1, partialRefresh: !1, firstColumnResizable: !1, onDrag: null, onResize: null }; b.doc = $(document), b.head = $("head"), b.drag = null, b.ID = "id", b.PX = "px", b.SIGNATURE = "JColResizer", b.FLEX = "JCLRFlex", b.IE = /Trident\/[4-9]/.test(navigator.userAgent), b.SessionStrage; try { b.SessionStrage = sessionStorage } catch (a) { } b.options = $.extend(c, a), b.UpdatecolResizable = function () { b.syncGrips(b.options.ParentControlClass.mainTable) }; var d = b.options.ParentControlClass.mainTable, e = d.id = d.attr(b.ID) || b.SIGNATURE + _thisHelpers.GenerateRandomLetters(10); d.p = b.options.postbackSafe, (d.is("table") || b.options.partialRefresh) && (d.addClass(b.SIGNATURE).attr(b.ID, e).before('<div class="JCLRgrips"/>'), d.g = [], d.c = [], d.w = d.width(), d.gc = d.prev(), d.f = b.options.fixed, b.options.marginLeft && d.gc.css("marginLeft", b.options.marginLeft), b.options.marginRight && d.gc.css("marginRight", b.options.marginRight), d.cs = parseInt(b.IE ? d[0].cellSpacing || d[0].currentStyle.borderSpacing : d.css("border-spacing")) || 2, d.b = parseInt(b.IE ? [0].border || d[0].currentStyle.borderLeftWidth : d.css("border-left-width")) || 1, b.destroy = function () { b.options.ParentControlClass.mainTable.removeClass(b.SIGNATURE + " " + b.FLEX).gc.remove() }, b.createGrips = function (a) {
            var c = a.find(">thead>tr>th,>thead>tr>td"); c.length || (c = a.find(">tbody>tr:first>th,>tr:first>th,>tbody>tr:first>td, >tr:first>td")), a.cg = a.find("col"), a.ln = c.length, a.p && b.SessionStrage && b.SessionStrage[a.id] && b.memento(a, c), c.each(function (c) {
                var d = $(this), e = $(a.gc.append('<div class="JCLRgrip"></div>')[0].lastChild); e.append(b.options.gripInnerHtml).append('<div class="' + b.SIGNATURE + '"></div>'), c == a.ln - 1 && (e.addClass("JCLRLastGrip"), a.f && e.html("")), c > 0 ? e.bind("touchstart mousedown", b.onGripMouseDown) : 0 == c && b.options.firstColumnResizable ? e.bind("touchstart mousedown", b.onGripMouseDown) : e.html(""),
                e.t = a, e.i = c, e.c = d, d.w = d.width(), a.g.push(e), a.c.push(d), d.width(d.w).removeAttr("width"), e.data(b.SIGNATURE, { i: c, t: a.attr(b.ID), last: c == a.ln - 1 })
            }), a.cg.removeAttr("width"), b.syncGrips(a), a.find("td, th").not(c).not("table th, table td").each(function () { $(this).removeAttr("width") }), b.FLEX || a.removeAttr("width").addClass(b.FLEX)
        }, b.memento = function (a, c) { var d, h, e = 0, f = 0, g = []; if (c) { if (a.cg.removeAttr("width"), b.options.flush) return void (b.SessionStrage[a.id] = ""); for (d = b.SessionStrage[a.id].split(";"), h = d[a.ln + 1], !a.f && h && a.width(h) ; f < a.ln; f++) g.push(100 * d[f] / d[a.ln] + "%"), c.eq(f).css("width", g[f]); for (f = 0; f < a.ln; f++) a.cg.eq(f).css("width", g[f]) } else { for (b.SessionStrage[a.id] = ""; f < a.c.length; f++) d = a.c[f].width(), b.SessionStrage[a.id] += d + ";", e += d; b.SessionStrage[a.id] += e, b.FLEX || (b.SessionStrage[a.id] += ";" + a.width()) } }, b.syncGrips = function (a) { a.gc.width(a.w); for (var c = 0; c < a.ln; c++) { var d = a.c[c]; a.g[c].css({ left: d.offset().left - a.offset().left + d.outerWidth(!1) + a.cs / 2 + b.PX, height: b.options.headerOnly ? a.c[0].outerHeight(!1) : a.outerHeight(!1) }) } }, b.syncCols = function (a, c, d) { var e = b.drag.x - b.drag.l, f = a.c[c], g = a.c[c + 1], h = f.w + e, i = g.w - e; f.width(h + b.PX), a.cg.eq(c).width(h + b.PX), a.f && (g.width(i + b.PX), a.cg.eq(c + 1).width(i + b.PX)), d && (f.w = h, g.w = a.f ? i : g.w) }, b.applyBounds = function (a) { var c = $.map(a.c, function (a) { return a.width() }); a.width(a.width()).removeClass(b.FLEX), $.each(a.c, function (a, b) { b.width(c[a]).w = c[a] }), a.addClass(b.FLEX) }, b.onGripDrag = function (a) { if (b.drag) { var c = b.drag.t, d = a.originalEvent.touches, e = d ? d[0].pageX : a.pageX, f = e - b.drag.ox + b.drag.l, g = b.options.minWidth, h = b.drag.i, i = 1.5 * c.cs + g + c.b, j = h == c.ln - 1, k = h ? c.g[h - 1].position().left + c.cs + g : i, l = c.f ? h == c.ln - 1 ? c.w - i : c.g[h + 1].position().left - c.cs - g : 1 / 0; if (f = Math.max(k, Math.min(l, f)), b.drag.x = f, b.drag.css("left", f + b.PX), j) { var m = c.c[b.drag.i]; b.drag.w = m.w + f - b.drag.l } if (b.options.liveDrag) { j ? (m.width(b.drag.w), c.w = c.width()) : b.syncCols(c, h), b.syncGrips(c); var n = b.options.onDrag; n && (a.currentTarget = c[0], n(a)) } return !1 } }, b.onGripDragOver = function (a) { if (b.doc.unbind("touchend." + b.SIGNATURE + " mouseup." + b.SIGNATURE).unbind("touchmove." + b.SIGNATURE + " mousemove." + b.SIGNATURE), $("head :last-child").remove(), b.drag) { b.drag.removeClass(b.options.draggingClass); var c = b.drag.t, d = b.options.onResize, e = b.drag.i, f = e == c.ln - 1, g = c.g[e].c; f ? (g.width(b.drag.w), g.w = b.drag.w) : b.syncCols(c, e, !0), b.FLEX || b.applyBounds(c), b.syncGrips(c), d && (a.currentTarget = c[0], d(a)), c.p && b.SessionStrage && b.memento(c), b.drag = null } }, b.onGripMouseDown = function (a) { var c = $(this).data(b.SIGNATURE), d = b.options.ParentControlClass.mainTable, e = d.g[c.i], f = a.originalEvent.touches; if (e.ox = f ? f[0].pageX : a.pageX, e.l = e.position().left, b.doc.bind("touchmove." + b.SIGNATURE + " mousemove." + b.SIGNATURE, b.onGripDrag).bind("touchend." + b.SIGNATURE + " mouseup." + b.SIGNATURE, b.onGripDragOver), b.head.append("<style type='text/css'>*{cursor:" + b.options.dragCursor + "!important}</style>"), e.addClass(b.options.draggingClass), b.drag = e, d.c[c.i].l) for (var h, g = 0; g < d.ln; g++) h = d.c[g], h.l = !1, h.w = h.width(); return !1 }, b.onResize = function () { var c, a = b.options.ParentControlClass.mainTable, d = 0; if (a.removeClass(b.SIGNATURE), a.f && a.w != a.width()) { for (a.w = a.width(), c = 0; c < a.ln; c++) d += a.c[c].w; for (c = 0; c < a.ln; c++) a.c[c].css("width", Math.round(1e3 * a.c[c].w / d) / 10 + "%").l = !0 } b.syncGrips(a.addClass(b.SIGNATURE)) }, $(window).bind("resize." + b.SIGNATURE, b.onResize), b.createGrips(d))
    } return a
}(), _saveAs = function (a) { if ("undefined" == typeof navigator || !/MSIE [1-9]\./.test(navigator.userAgent)) { var b = a.document, c = function () { return a.URL || a.webkitURL || a }, d = b.createElementNS("http://www.w3.org/1999/xhtml", "a"), e = "download" in d, f = function (c) { var d = b.createEvent("MouseEvents"); d.initMouseEvent("click", !0, !1, a, 0, 0, 0, 0, 0, !1, !1, !1, !1, 0, null), c.dispatchEvent(d) }, g = a.webkitRequestFileSystem, h = a.requestFileSystem || g || a.mozRequestFileSystem, i = function (b) { (a.setImmediate || a.setTimeout)(function () { throw b }, 0) }, j = "application/octet-stream", k = 0, l = 500, m = function (b) { var d = function () { "string" == typeof b ? c().revokeObjectURL(b) : b.remove() }; a.chrome ? d() : setTimeout(d, l) }, n = function (a, b, c) { b = [].concat(b); for (var d = b.length; d--;) { var e = a["on" + b[d]]; if ("function" == typeof e) try { e.call(a, c || a) } catch (a) { i(a) } } }, o = function (a) { return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(a.type) ? new Blob(["\ufeff", a], { type: a.type }) : a }, p = function (b, i) { b = o(b); var r, s, x, l = this, p = b.type, q = !1, t = function () { n(l, "writestart progress write writeend".split(" ")) }, u = function () { if (!q && r || (r = c().createObjectURL(b)), s) s.location.href = r; else { var d = a.open(r, "_blank"); void 0 === d && "undefined" != typeof safari && (a.location.href = r) } l.readyState = l.DONE, t(), m(r) }, v = function (a) { return function () { if (l.readyState !== l.DONE) return a.apply(this, arguments) } }, w = { create: !0, exclusive: !1 }; return l.readyState = l.INIT, i || (i = "download"), e ? (r = c().createObjectURL(b), d.href = r, d.download = i, f(d), l.readyState = l.DONE, t(), void m(r)) : (a.chrome && p && p !== j && (x = b.slice || b.webkitSlice, b = x.call(b, 0, b.size, j), q = !0), g && "download" !== i && (i += ".download"), (p === j || g) && (s = a), h ? (k += b.size, void h(a.TEMPORARY, k, v(function (a) { a.root.getDirectory("saved", w, v(function (a) { var c = function () { a.getFile(i, w, v(function (a) { a.createWriter(v(function (c) { c.onwriteend = function (b) { s.location.href = a.toURL(), l.readyState = l.DONE, n(l, "writeend", b), m(a) }, c.onerror = function () { var a = c.error; a.code !== a.ABORT_ERR && u() }, "writestart progress write abort".split(" ").forEach(function (a) { c["on" + a] = l["on" + a] }), c.write(b), l.abort = function () { c.abort(), l.readyState = l.DONE }, l.readyState = l.WRITING }), u) }), u) }; a.getFile(i, { create: !1 }, v(function (a) { a.remove(), c() }), v(function (a) { a.code === a.NOT_FOUND_ERR ? c() : u() })) }), u) }), u)) : void u()) }, q = p.prototype, r = function (a, b) { return new p(a, b) }; return "undefined" != typeof navigator && navigator.msSaveOrOpenBlob ? function (a, b) { return navigator.msSaveOrOpenBlob(o(a), b) } : (q.abort = function () { var a = this; a.readyState = a.DONE, n(a, "abort") }, q.readyState = q.INIT = 0, q.WRITING = 1, q.DONE = 2, q.error = q.onwritestart = q.onprogress = q.onwrite = q.onabort = q.onerror = q.onwriteend = null, r) } }(window), _title = function (a) { var b = a.title; return b.indexOf("*") !== -1 ? b.replace("*", $("title").text()) : b }, _filename = function (a, b) { var c = "*" === a.filename && "*" !== a.title && void 0 !== a.title ? a.title : a.filename; return c.indexOf("*") !== -1 && (c = c.replace("*", $("title").text())), c = c.replace(/[^a-zA-Z0-9_\u00A1-\uFFFF\.,\-_ !\(\)]/g, ""), void 0 === b || b === !0 ? c + a.extension : c }, _newLine = function (a) { return a.newline ? a.newline : navigator.userAgent.match(/Windows/) ? "\r\n" : "\n" }, _isSafari = function () { return navigator.userAgent.indexOf("Safari") !== -1 && navigator.userAgent.indexOf("Chrome") === -1 && navigator.userAgent.indexOf("Opera") === -1 }, _exportData = function (a, b) { for (var c = _newLine(b), d = a, e = b.fieldBoundary, f = b.fieldSeparator, g = new RegExp(e, "g"), h = void 0 !== b.escapeChar ? b.escapeChar : "\\", i = function (a) { for (var b = "", c = 0, d = a.length; c < d; c++) c > 0 && (b += f), b += e ? e + ("" + a[c]).replace(g, h + e) + e : a[c]; return b }, j = b.header ? i(d.header) + c : "", k = b.footer ? c + i(d.footer) : "", l = [], m = 0, n = d.body.length; m < n; m++) l.push(i(d.body[m])); return { str: j + l.join(c) + k, rows: l.length } }, addRow = function (a) { for (var b = [], c = "", d = 1, e = a.length; d < e; d++) c = null === a[d] || void 0 === a[d] ? "" : _thisHelpers.GetActiveCellText($(a[d])), c.length > 0 && (c = c.replace(/^\s+|\s+$/g, "").replace(/\n/g, " ")), b.push("number" == typeof c || c.match && c.match(/^-?[0-9\.]+$/) && "0" !== c.charAt(0) ? '<c t="n"><v>' + c + "</v></c>" : '<c t="inlineStr"><is><t>' + (c.replace ? c.replace(/&(?!amp;)/g, "&amp;").replace(/[\x00-\x1F\x7F-\x9F]/g, "") : c) + "</t></is></c>"); return "<row>" + b.join("") + "</row>" }, MSProductGridHelper = function () { function a(a, c) { var e = this; e.PriceList = { name: null, id: null, entityType: null }, e.SchemaName = a, e.GridConfig = c, e.CallbackErrorHandler = function (a) { console.error("Exception " + a) }, e.GetProductsForPriceListCallback = function (a) { if (a && a.length && a.length > 0) { var b = $("#products_table"), c = b.find("tbody:first"); c.empty(); for (var d, g, h = void 0, i = 0; i < a.length; i++) g = a[i].attributes.productstructure.value + "", h = "dcrmeg_product", "3" == g && (h = "dcrmeg_productbundle"), d = $("<tr></tr>").appendTo(c), $('<td><input type="checkbox" data-product-id="' + a[i].attributes.productid.value + '" data-product-structure="' + g + '" /></td>').appendTo(d), $('<td><img src="' + h + '" /><span>' + a[i].attributes.name.value + "</span></td>").attr(_thisGlobals.ToolTipAttrName, a[i].attributes.name.value).appendTo(d), $("<td>" + a[i].attributes.defaultuomid.name + "</td>").attr(_thisGlobals.ToolTipAttrName, a[i].attributes.defaultuomid.name).appendTo(d), $("<td>" + a[i].attributes.defaultuomscheduleid.name + "</td>").attr(_thisGlobals.ToolTipAttrName, a[i].attributes.defaultuomscheduleid.name).appendTo(d); $("#products_flyoutOverlay").show("slow") } else DisplayCrmAlertDialog("No existing products found matching pricelist [" + e.PriceList.name + "]") }, e.DisplayExistingProducts = function () { d(e.PriceList.id, e.GetProductsForPriceListCallback, e.CallbackErrorHandler) }, e.GetPriceList = function () { var a = _thisGlobals.xrmPage.data.entity.attributes.get("pricelevelid").getValue(); return !!a && (e.PriceList.name = a[0].name, e.PriceList.id = a[0].id, console.log("Pricelist [" + a[0].id + "] name [" + a[0].name + "]"), !0) }, e.DisplayNativePricelistSelectCallback = function (a) { if (a && a.items && a.items[0].id && a.items[0].name) try { var b = new Array; b[0] = e.PriceList, b[0].id = a.items[0].id, b[0].name = a.items[0].name, b[0].entityType = a.items[0].typename, _thisGlobals.xrmPage.getAttribute("pricelevelid").setValue(b), _thisGlobals.xrmPage.data.setFormDirty(!0), console.log("Pricelist id [" + e.PriceList.id + "] name [" + e.PriceList.name + "] type [" + e.PriceList.typename + "]") } catch (a) { return LogEx("Unable to set the price list.\r\n" + a.message, pl), !1 } }, e.DisplayNativePricelistSelect = function () { var a = "/_controls/lookup/lookupsingle.aspx?objecttypes=1022"; b(a, e.DisplayNativePricelistSelectCallback) }, e.Initialize = function () { $("#products_selectall").on("click", function (a) { a.stopPropagation(), $("#products_table").find("input").prop("checked", $(this).is(":checked")) }), $("#products_btnok").on("click", function (a) { a.stopPropagation(); var b = $("#products_table").find('input[type="checkbox"]:checked'); if (b && b.length) for (var c = 0; c < b.length; c++) console.log($(b[c]).attr("data-product-id")); $("#products_flyoutOverlay").hide() }), $("#products_btncancel").on("click", function (a) { a.stopPropagation(), $("#products_flyoutOverlay").hide() }) }, e.Initialize() } function b(a, b) { var c = new window.parent.Xrm.DialogOptions; c.width = 500, c.height = 700, window.parent.Xrm.Internal.openDialog(window.parent.Mscrm.CrmUri.create(a).toString(), c, null, null, b) } function d(a, b, c) { var d = '<fetch version="1.0" output-format="xml-platform" mapping="logical" distinct="false"><entity name="product"><attribute name="name" /><attribute name="productid" /><attribute name="productnumber" /><attribute name="description" /><attribute name="productstructure" /><attribute name="defaultuomscheduleid" /><attribute name="standardcost" /><attribute name="quantityonhand" /><attribute name="defaultuomid" /><attribute name="currentcost" /><order attribute="productnumber" descending="false" /><filter type="and"><condition attribute="statecode" operator="eq" value="0" /><condition attribute="productstructure" operator="in"><value>1</value><value>3</value></condition><condition attribute="pricelevelid" operator="eq" uitype="pricelevel" value="' + _thisHelpers.AddCurlyBrace(a) + '" /></filter></entity></fetch>'; XrmServiceToolkit.Soap.Fetch(d, !1, b, c) } return a }(), DCrmEGConfigurationManager = function () { function a(a) { var b = this; b.Entity = { SchemaName: a.schemaName, Label: a.label, RelatedToDisplayOnEntity: !!a.related, RelatedToDisplayOnLookupSchemaName: a.related ? a.related : void 0, RelatedToParentLI: a.RelatedToParentLI, ParentSchemaName: a.ParentSchemaName ? a.ParentSchemaName : void 0, RelatedToParentLILookupSchemaName: a.RelatedToParentLILookupSchemaName ? a.RelatedToParentLILookupSchemaName : void 0 }, b.MSProductGrid = !1, b.GridTitle = a.GridTitle && a.GridTitle.length && a.GridTitle.length > 0 ? a.GridTitle : a.label, b.DisplayClearFilterButton = !a.DisplayClearFilterButton || "false" != a.DisplayClearFilterButton, b.DisplayHeaderFilter = !a.DisplayHeaderFilter || "false" != a.DisplayHeaderFilter, b.DisplayExportButton = !a.DisplayExportButton || "false" != a.DisplayExportButton, b.DisplaySetRecordState = !a.DisplaySetRecordState || "false" != a.DisplaySetRecordState, b.DisplayCloneRecord = !a.DisplayCloneRecord || "false" != a.DisplayCloneRecord, b.DisplayCloneRecordButton = !a.DisplayCloneRecordButton || "false" != a.DisplayCloneRecordButton, b.OpenRecordBehavoir = a.OpenRecordBehavoir && "undefined" != a.OpenRecordBehavoir ? a.OpenRecordBehavoir : "10", b.HasStatusField = a.HasStatusField ? a.HasStatusField : void 0, b.DisplaySum = !a.DisplaySum || "false" != a.DisplaySum, b.RecordsPerPage = a.RecordsPerPage ? a.RecordsPerPage : "5", b.AutoSaveChanges = !a.AutoSaveChanges || "false" != a.AutoSaveChanges, b.AllowCreateNew = !a.AllowCreateNew || "false" != a.AllowCreateNew, b.AllowDelete = !a.AllowDelete || "false" != a.AllowDelete, b.RefreshAfterCreate = !a.RefreshAfterCreate || "false" != a.RefreshAfterCreate, b.RefreshAfterSave = !(!a.RefreshAfterSave || "true" != a.RefreshAfterSave), b.SortOrder = a.SortOrder && "undefined" != a.SortOrder ? a.SortOrder : void 0, b.NewBtnBehavoir = a.NewBtnBehavoir && "undefined" != a.NewBtnBehavoir ? a.NewBtnBehavoir : "30", b.BooleanEditorBehavoir = a.BooleanEditorBehavoir && "undefined" != a.BooleanEditorBehavoir ? a.BooleanEditorBehavoir : "20", b.HideAutosaveButton = !(!a.HideAutosaveButton || "true" != a.HideAutosaveButton), b.SelectedFields = void 0, b.Conditions = void 0, b.ChildConfigurations = [], b.ThisGrid = void 0, b.ParentDivContainer = void 0, b.GridFetchXml = void 0, b.GetFetchXml = function (a, c) { var d = ""; if (a = a || "1", b.GridFetchXml) { if (d += c ? b.GridFetchXml.HeadForPaging.replace("%P%", a + "").replace("%PC%", c) + b.GridFetchXml.Entity + b.GridFetchXml.Fields.join("") : b.GridFetchXml.Head.replace("%P%", a + "") + b.GridFetchXml.Entity + b.GridFetchXml.Fields.join(""), b.GridFetchXml.Sort.length > 0 && (d += b.GridFetchXml.Sort.join("")), b.GridFetchXml.Filters.length > 0 ? (d += b.GridFetchXml.FilterHead, d += b.GridFetchXml.Filters.join(""), b.GridFetchXml.InlineFilters.length > 0 && (d += b.GridFetchXml.InlineFilters.map(function (a) { return a.Filter }).join("")), d += b.GridFetchXml.FilterTail) : b.GridFetchXml.InlineFilters.length > 0 && (d += b.GridFetchXml.FilterHead, d += b.GridFetchXml.InlineFilters.map(function (a) { return a.Filter }).join(""), d += b.GridFetchXml.FilterTail), b.GridFetchXml.LinkEntities.length > 0) { for (var e = 0; e < b.GridFetchXml.LinkEntities.length; e++) { var f = b.GridFetchXml.LinkEntities[e]; if (d += b.GridFetchXml.LinkEntityHead.replace("%n%", f.LinkEntityHeadData.Schema).replace("%f%", f.LinkEntityHeadData.From).replace("%t%", f.LinkEntityHeadData.To).replace("%a%", f.LinkEntityHeadData.Alias), f.LinkEntityFields.length > 0) for (var g = 0; g < f.LinkEntityFields.length; g++) d += '<attribute name="' + f.LinkEntityFields[g] + '" />'; f.LinkEntityFilters.length > 0 && (d += b.GridFetchXml.FilterHead, d += f.LinkEntityFilters.map(function (a) { return a.Filter }).join(""), d += b.GridFetchXml.FilterTail) } d += b.GridFetchXml.LinkEntityTail } d += b.GridFetchXml.Tail } return d }, b.GetFetchXmlSorted = function (a, c) { b.GridFetchXml.Sort = [], b.GridFetchXml.Sort.push('<order attribute="' + a + '" descending="' + (0 == c ? "false" : "true") + '" />') }, b.SetFetchXmlFiltered = function (a, c, d, e, f, g, h, i) { if (b.GridFetchXml.InlineFilters.length > 0) for (var j = 0; j < b.GridFetchXml.InlineFilters.length; j++) if (b.GridFetchXml.InlineFilters[j].Schema == a) return b.GridFetchXml.InlineFilters[j].Filter = c, b.GridFetchXml.InlineFilters[j].Operator = d, b.GridFetchXml.InlineFilters[j].Value = e, b.GridFetchXml.InlineFilters[j].FecthOp = f, b.GridFetchXml.InlineFilters[j].FetchValue = g, b.GridFetchXml.InlineFilters[j].LookupGuid = h, void (b.GridFetchXml.InlineFilters[j].LookupUiType = i); b.GridFetchXml.InlineFilters.push({ Schema: a, Filter: c, Operator: d, Value: e, FecthOp: f, FetchValue: g, LookupGuid: h, LookupUiType: i }) }, b.SetLinkEntityFiltered = function (a, c, d, e, f, g, h, i, j, k, l, m) { var n = -1; if (b.GridFetchXml.LinkEntities.length > 0) for (var o = 0; o < b.GridFetchXml.LinkEntities.length; o++) if (b.GridFetchXml.LinkEntities[o].LinkEntityHeadData.Schema == a) { if (b.GridFetchXml.LinkEntities[o].LinkEntityFilters.length > 0) for (var p = 0; p < b.GridFetchXml.LinkEntities[o].LinkEntityFilters.length; p++) if (b.GridFetchXml.LinkEntities[o].LinkEntityFilters[p].Schema == f) return n = p, b.GridFetchXml.LinkEntities[o].LinkEntityFilters[p].Filter = g, b.GridFetchXml.LinkEntities[o].LinkEntityFilters[p].Operator = h, b.GridFetchXml.LinkEntities[o].LinkEntityFilters[p].Value = i, b.GridFetchXml.LinkEntities[o].LinkEntityFilters[p].FecthOp = j, b.GridFetchXml.LinkEntities[o].LinkEntityFilters[p].FetchValue = k, b.GridFetchXml.LinkEntities[o].LinkEntityFilters[p].LookupGuid = l, void (b.GridFetchXml.LinkEntities[o].LinkEntityFilters[p].LookupUiType = m); return void b.GridFetchXml.LinkEntities[o].LinkEntityFilters.push({ Schema: f, Filter: g, Operator: h, Value: i, FecthOp: j, FetchValue: k, LookupGuid: l, LookupUiType: m }) } null == e && (e = []); var q = { LinkEntityHeadData: { Schema: a, From: c, To: d, Alias: _thisHelpers.GenerateUUID() }, LinkEntityFields: e, LinkEntityFilters: [] }; q.LinkEntityFilters.push({ Schema: f, Filter: g, Operator: h, Value: i, FecthOp: j, FetchValue: k, LookupGuid: l, LookupUiType: m }), b.GridFetchXml.LinkEntities.push(q) }, b.GetFetchXmlFilters = function () { var a = ""; return b.GridFetchXml && (b.GridFetchXml.Filters.length > 0 ? (a += b.GridFetchXml.Filters.join(""), b.GridFetchXml.InlineFilters.length > 0 && (a += b.GridFetchXml.InlineFilters.map(function (a) { return a.Filter }).join(""))) : b.GridFetchXml.InlineFilters.length > 0 && (a += b.GridFetchXml.InlineFilters.map(function (a) { return a.Filter }).join(""))), a }, b.ClearInlineFilters = function (a) { if (0 != b.GridFetchXml.InlineFilters.length) if (a) { for (var c = -1, d = 0; d < b.GridFetchXml.InlineFilters.length; d++) if (b.GridFetchXml.InlineFilters[d].Schema == a) { c = d; break } if (c != -1) return void b.GridFetchXml.InlineFilters.splice(c, 1); c = -1; for (var d = 0; d < b.GridFetchXml.LinkEntities.length; d++) if (b.GridFetchXml.LinkEntities[d].LinkEntityHeadData.Schema == a) { c = d; break } c != -1 && b.GridFetchXml.LinkEntities.splice(c, 1) } else b.GridFetchXml.InlineFilters = [], b.GridFetchXml.LinkEntities = [] }, b.GetInlineFilterBySchemaName = function (a) { for (var c = 0; c < b.GridFetchXml.InlineFilters.length; c++) if (b.GridFetchXml.InlineFilters[c].Schema == a) return b.GridFetchXml.InlineFilters[c]; for (var c = 0; c < b.GridFetchXml.LinkEntities.length; c++) if (b.GridFetchXml.LinkEntities[c].LinkEntityHeadData.Schema == a) return b.GridFetchXml.LinkEntities[c]; return null } } return a }(), GridLoaderHelper = function () { function a(a, b, c, d, e, f) { var g = this; g.data = a, g.ContainerIds = b, g.ceditors = c, g.parentChildLookupInfo = d, g.NumericFields = e, g.Grid = void 0, g.PrimaryIdAttribute = null, g.PrimaryNameAttribute = null, g.DataLoadErrorMessage = "Unable to load the grid data due to exceptions:\r\n", g.TableVisible = !1, g.TotalRecordCount = -1, g.CallbackErrorHandler = function (a) { DisplayCrmAlertDialog(g.DataLoadErrorMessage + a), _thisHelpers.WaitDialog() }, g.RecordCallback = function (a, b, d) { try { var e = void 0; if (void 0 != d && "undefined" != d || (d = null), a && a.length && a.length > 0) { a[0].attributes.transactioncurrencyid && a[0].attributes.transactioncurrencyid.id && a[0].attributes.transactioncurrencyid.id.length && (e = a[0].attributes.transactioncurrencyid.id); var j, h = "", i = $("#" + g.ContainerIds.Table).find("tbody:first"), k = void 0, l = "", m = "", n = void 0; try { "Mobile" == _thisGlobals.xrmPage.context.client.getClient() && (h = ' style="height:30px;"') } catch (a) { } for (var o = 0; o < a.length; o++) { var p = a[o]; j = $("<tr" + h + "></tr>").attr(_thisGlobals.DataAttr.Cell.RecordGuid, p.id).appendTo(i); for (var q = { RecordGuid: p.id, Fields: [], RowIndex: o }, r = 0; r < g.data.SelectedFields.length; r++) { var s = g.data.SelectedFields[r], t = s.SchemaName.toLowerCase(); m = s.AttrType.toLowerCase(), l = "", n = void 0; var u = {}; u.ReadOnly = !1, u.SchemaName = t, u.FieldType = m, u.FieldIndex = r, u.BackgroundColor = null, u.ForgroundColor = null, m == _thisGlobals.CrmFieldTypes.OptionSetType || m == _thisGlobals.CrmFieldTypes.BooleanType || m == _thisGlobals.CrmFieldTypes.MoneyType || m == _thisGlobals.CrmFieldTypes.DecimalType || m == _thisGlobals.CrmFieldTypes.DoubleType || m == _thisGlobals.CrmFieldTypes.IntegerType || m == _thisGlobals.CrmFieldTypes.State || m == _thisGlobals.CrmFieldTypes.Status ? p.attributes[t] && (l = p.attributes[t].formattedValue, u.Value = p.attributes[t].value, m != _thisGlobals.CrmFieldTypes.OptionSetType && m != _thisGlobals.CrmFieldTypes.State && m != _thisGlobals.CrmFieldTypes.Status || (n = p.attributes[t].value, u.Value = n)) : m == _thisGlobals.CrmFieldTypes.LookupType || m == _thisGlobals.CrmFieldTypes.CustomerType || m == _thisGlobals.CrmFieldTypes.OwnerType ? p.attributes[t] && (l = p.attributes[t].name || "", g.ceditors[r].LookupData.LookupId = p.attributes[t].id || "", g.ceditors[r].LookupData.LookupLogicalName = p.attributes[t].logicalName, g.ceditors[r].LookupData.LookupName = l, u.LookupGuid = g.ceditors[r].LookupData.LookupId, u.LookupLogicalName = g.ceditors[r].LookupData.LookupLogicalName, u.LookupName = l, u.Value = l) : m == _thisGlobals.CrmFieldTypes.TextType || m == _thisGlobals.CrmFieldTypes.MemoType ? p.attributes[t] && (l = p.attributes[t].value, u.Value = l, u.Format = g.ceditors[r].Format, "Text" != g.ceditors[r].Format && "Phone" != g.ceditors[r].Format || !_thisHelpers.IsvalidPhoneNumber(l + "") || (c[r].Format = "Phone")) : m == _thisGlobals.CrmFieldTypes.DateTimeType && p.attributes[t] && (l = p.attributes[t].formattedValue, u.Value = l), u.FormattedValue = l, k = $("<td></td>").attr(_thisGlobals.DataAttr.Cell.RecordGuid, p.id).attr(_thisGlobals.ToolTipAttrName, l).html('<span class="fieldcelltext" ' + _thisGlobals.ToolTipAttrName + '="' + l + '">' + l + "</span>").appendTo(j), m == _thisGlobals.CrmFieldTypes.TextType && g.ceditors[r].Format && k.attr(_thisGlobals.DataAttr.Cell.Format, g.ceditors[r].Format.toLowerCase()), g.ceditors[r].LookupData ? k.attr(_thisGlobals.DataAttr.Cell.Lookup.Guid, g.ceditors[r].LookupData.LookupId).attr(_thisGlobals.DataAttr.Cell.Lookup.LogicalName, g.ceditors[r].LookupData.LookupLogicalName).attr(_thisGlobals.DataAttr.Cell.OriginalAttrValue, g.ceditors[r].LookupData.LookupId).attr(_thisGlobals.DataAttr.Cell.Lookup.OriginalLogicalName, g.ceditors[r].LookupData.LookupLogicalName) : m != _thisGlobals.CrmFieldTypes.OptionSetType && m != _thisGlobals.CrmFieldTypes.State && m != _thisGlobals.CrmFieldTypes.Status || k.attr(_thisGlobals.DataAttr.Cell.Optionset.SelectedValue, n + "").attr(_thisGlobals.DataAttr.Cell.OriginalAttrValue, n + ""), m != _thisGlobals.CrmFieldTypes.MoneyType && m != _thisGlobals.CrmFieldTypes.DecimalType && m != _thisGlobals.CrmFieldTypes.DoubleType && m != _thisGlobals.CrmFieldTypes.IntegerType || k.addClass("NumericTextbox"), q.Fields.push(u) } FireGridRowOnload(j, q, { ParentEntityName: g.data.Entity.Label, ParentEntitySchemaname: g.data.Entity.SchemaName }) } var v = parseInt(g.data.RecordsPerPage); g.TotalRecordCount <= v && $("#" + g.ContainerIds.Pager).hide() } else $("#" + g.ContainerIds.TotalRecords).text(_thisGlobals.Translation_Labels.TotalRecords + " 0"), $("#" + g.ContainerIds.Pager).hide(); var w = { HasChildGrids: g.data.ChildConfigurations.length > 0, Country: _thisGlobals.DefaultCountry, GridContainerIds: g.ContainerIds, columneditors: g.ceditors, EntityCurrencyid: e, EntityCurrencySymbol: void 0, EntityCurrencyPrecision: void 0, ParentEntityInfo: { ParentEntityName: g.data.Entity.Label, ParentEntitySchemaname: g.data.Entity.SchemaName, PrimaryIdAttribute: g.PrimaryIdAttribute, PrimaryNameAttribute: g.PrimaryNameAttribute }, ParentChildLookupInfo: g.parentChildLookupInfo, PagerSize: parseInt(g.data.RecordsPerPage), TotalRecordsCount: g.TotalRecordCount, Page: 1, HasMoreRecords: b, PagingCookie: d, PagingCookies: [d], HasStatusField: !!g.data.HasStatusField, RequiredErrorContainer: "validationerror", InputFormatErrorContainer: "inputformaterror", ParentFormIsReadOnly: _thisGlobals.FormIsReadOnly, UserCanDelete: g.data.AllowDelete, UserCanUpdate: !_thisGlobals.FormIsReadOnly, DisplayCloneRecordButton: g.data.DisplayCloneRecordButton, DisplayCloneRecord: g.data.DisplayCloneRecord, DisplaySetRecordState: g.data.DisplaySetRecordState, DisplayFieldsSum: g.data.DisplaySum, HaveNumericFields: g.NumericFields, AutoSaveChanges: g.data.AutoSaveChanges, AllowDelete: g.data.AllowDelete, RefreshAfterCreate: g.data.RefreshAfterCreate, RefreshAfterSave: g.data.RefreshAfterSave, NewBtnBehavoir: g.data.NewBtnBehavoir, BooleanEditorBehavoir: g.data.BooleanEditorBehavoir, OpenRecordBehavoir: g.data.OpenRecordBehavoir }; g.Grid = new CrmEditableGrid($("#" + g.ContainerIds.Table), w); var x = FindDCrmEGConfigurationBySchema(g.data.Entity.SchemaName); x.ThisGrid = g.Grid, x.ParentDivContainer = f.attr("id") } catch (a) { DisplayCrmAlertDialog(g.DataLoadErrorMessage + a.message) } _thisHelpers.WaitDialog() }, g.RecordCountCallback = function (a) { a && a.length && a.length > 0 && (g.TotalRecordCount = a[0].attributes.count.value, $("#" + g.ContainerIds.TotalRecords).text(_thisGlobals.Translation_Labels.TotalRecords + " " + g.TotalRecordCount)), XrmServiceToolkit.Soap.Fetch(g.data.GetFetchXml(), !1, g.RecordCallback, g.CallbackErrorHandler) }, g.GetEntityCount = function () { var b = a.GetFetchXmlFilters(), c = "<fetch mapping='logical' aggregate='true'><entity name='" + g.data.Entity.SchemaName + "'><attribute name='" + g.PrimaryIdAttribute + "' aggregate='count' alias='count' />"; b.length > 0 && (c += '<filter type="and">' + b + "</filter>"), c += "</entity></fetch>", XrmServiceToolkit.Soap.Fetch(c, !1, g.RecordCountCallback, g.CallbackErrorHandler) }, g.GetPrimaryAttributesCallback = function (a) { a && 1 === a.length && (g.PrimaryIdAttribute = a[0].PrimaryIdAttribute, g.PrimaryNameAttribute = a[0].PrimaryNameAttribute), g.GetEntityCount() }, g.RetreiveEntityMetadateCallback = function (a) { if (a && a.length && a.length > 0) { var b = $("#" + g.ContainerIds.Table).find(_thisGlobals.DefaultGridOptions.selectorHeaders); try { var c = ["createdonbehalfby", "exchangerate", "importsequencenumber", "modifiedonbehalfby", "overriddencreatedon", "owningbusinessunit", "owningteam", "owninguser", "timezoneruleversionnumber", "utcconversiontimezonecode", "versionnumber"], d = ["lookup", "boolean", "picklist", "datetime", "string", "memo", "integer", "double", "decimal", "money", "customer", "owner", "state", "status"], e = "", f = "", h = "", i = g.data.SelectedFields; for (index = 0, j = a[0].Attributes.length; index < j; index++) if (ent = a[0].Attributes[index], null == ent.AttributeOf && (e = ent.SchemaName.toLowerCase(), f = ent.AttributeType.toLowerCase(), 0 == c.ExactMatchExists(e) && 1 == d.ExactMatchExists(f))) for (var k = 0; k < i.length; k++) e == i[k].SchemaName.toLowerCase() && (h = _thisHelpers.GetUserLocalizedLabel(ent.DisplayName), _thisHelpers.SetHeaderCellText($(b[k + 1]), h)) } catch (a) { LogEx("unable to retreive entity metadata\r\n" + a.message) } } }, XrmServiceToolkit.Soap.RetrieveEntityMetadata(["Attributes"], g.data.Entity.SchemaName, !0, g.RetreiveEntityMetadateCallback), XrmServiceToolkit.Soap.RetrieveEntityMetadata("Entity", g.data.Entity.SchemaName, !0, g.GetPrimaryAttributesCallback) } return a }();